<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Shell学习（七）</title>
      <link href="/shell7/"/>
      <url>/shell7/</url>
      
        <content type="html"><![CDATA[<h1 id="grep-sed-awk-练习"><a class="markdownIt-Anchor" href="#grep-sed-awk-练习"></a> grep sed awk 练习</h1><p>系列学完了，这是第二期。(其实应该这个先学的) <code>bash</code> 基础<br />接下来是有名的第三方工具 (正则表达式 awk sed grep等等)</p><span id="more"></span><h2 id="grep"><a class="markdownIt-Anchor" href="#grep"></a> grep</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 找出有关 root 的行</span></span><br><span class="line">grep <span class="string">&quot;root&quot;</span> /etc/passwd</span><br><span class="line"><span class="comment"># 找出有关 root 开头的行</span></span><br><span class="line">grep <span class="string">&quot;^root&quot;</span> /etc/passwd</span><br><span class="line"><span class="comment"># 匹配咦 root 开头或者与 feng 开头的行</span></span><br><span class="line">grep -E <span class="string">&quot;^(root|feng)&quot;</span> /etc/passwd</span><br><span class="line"><span class="comment"># 过滤以 bin 开头的行，前面显示行号</span></span><br><span class="line">grep -n <span class="string">&quot;^bin&quot;</span> /etc/passwd</span><br><span class="line"><span class="comment"># 过滤掉除了 nologin 结束的行</span></span><br><span class="line">grep -v <span class="string">&quot;nologin$&quot;</span> /etc/passwd</span><br><span class="line"><span class="comment"># 统计 bash 出现次数</span></span><br><span class="line">grep -c <span class="string">&quot;bash&quot;</span> /etc/passwd</span><br><span class="line"><span class="comment"># 过滤 bash 的行，之匹配两次</span></span><br><span class="line">grep -m 2 <span class="string">&quot;bash&quot;</span> /etc/passwd</span><br><span class="line"><span class="comment"># 匹配多个文件，只列出存在信息文件的名字</span></span><br><span class="line">grep <span class="string">&quot;www&quot;</span> /etc/passwd /etc/apache2/apache2.conf</span><br><span class="line">grep -l <span class="string">&quot;www&quot;</span> /etc/passwd /etc/apache2/apache2.conf</span><br><span class="line"><span class="comment"># 找出 /etc/passwd 中的两位数或者三位数</span></span><br><span class="line"><span class="comment"># \&lt; 左闭合 \&gt; 右闭合 不然会匹配这种：&quot;123&quot;4 或者 1&quot;234&quot;</span></span><br><span class="line">grep -E <span class="string">&quot;\&lt;[0-9]&#123;2,3&#125;\&gt;&quot;</span> /etc/passwd</span><br><span class="line"><span class="comment"># 找出文件中，空行开头，但后面有非空格的行</span></span><br><span class="line">grep -E <span class="string">&quot;^ .&#123;1,&#125;&quot;</span> 1.txt</span><br><span class="line">grep <span class="string">&quot;^[[:space:]].*&quot;</span> 1.txt</span><br><span class="line">grep -E <span class="string">&quot;^[[:space:]]+[^[:space:]]&quot;</span> 1.txt</span><br><span class="line"><span class="comment"># 找出文件中，以大小写aA开头的行</span></span><br><span class="line">grep -i <span class="string">&quot;^a&quot;</span> 1.txt</span><br><span class="line">grep -E <span class="string">&quot;^(a|A)&quot;</span> 1.txt</span><br><span class="line">grep <span class="string">&quot;^[aA]&quot;</span> 1.txt</span><br><span class="line"><span class="comment"># 找出脚本中的函数名</span></span><br><span class="line">grep <span class="string">&quot;[a-zA-Z]*[[:space:]]*()&quot;</span> /etc/init.d/mariadb</span><br><span class="line">grep -E <span class="string">&quot;[a-zA-Z]*[[:space:]]*\(\)&quot;</span> /etc/init.d/mariadb</span><br><span class="line"><span class="comment"># 找出用户名和解释器相同的行</span></span><br><span class="line">grep -E <span class="string">&quot;^([^:]+\&gt;).*\1$&quot;</span> /etc/passwd --color=auto</span><br></pre></td></tr></table></figure><p><img src="grep1.png" alt="" /><br /><img src="grep2.png" alt="" /><br /><img src="grep3.png" alt="" /></p><h2 id="sed"><a class="markdownIt-Anchor" href="#sed"></a> sed</h2><h2 id="awk"><a class="markdownIt-Anchor" href="#awk"></a> awk</h2>]]></content>
      
      
      <categories>
          
          <category> 技术栈 </category>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell学习（六）</title>
      <link href="/shell6/"/>
      <url>/shell6/</url>
      
        <content type="html"><![CDATA[<h1 id="shell脚本开发之文本操作"><a class="markdownIt-Anchor" href="#shell脚本开发之文本操作"></a> shell脚本开发之文本操作</h1><p>系列学完了，这是第二期。(其实应该这个先学的) <code>bash</code> 基础<br />接下来是有名的第三方工具 (正则表达式 awk sed grep等等)</p><span id="more"></span><h2 id="bash-快捷键"><a class="markdownIt-Anchor" href="#bash-快捷键"></a> bash 快捷键</h2><table><thead><tr><th>快捷键</th><th>英文</th><th>功能</th></tr></thead><tbody><tr><td>Ctrl + A</td><td>ahead</td><td>行首</td></tr><tr><td>Ctrl + E</td><td>end</td><td>行尾</td></tr><tr><td>Ctrl + U</td><td></td><td>删除光标之前的 <code>所有</code> 字符</td></tr><tr><td>Ctrl + K</td><td></td><td>删除光标之后的 <code>所有</code> 字符</td></tr><tr><td>Ctrl + L</td><td>clear</td><td>清空屏幕</td></tr><tr><td>Tab</td><td></td><td>补全 <code>$PATH</code> 命令，补全文件名</td></tr></tbody></table><h2 id="regexp"><a class="markdownIt-Anchor" href="#regexp"></a> RegExp</h2><p>正则表达式分两类：</p><ul><li>基本正则表达式，BRE对应的字符有：<code>^$.[]*</code></li><li>扩展正则表达式，ERE在BRE基础上，加上：<code>()&#123;&#125;?+|</code> 等字符</li></ul><p>正则表达式仅支持 (sed, awk, grep)</p><table><thead><tr><th>工具</th><th>描述</th></tr></thead><tbody><tr><td>grep</td><td>文本过滤工具 (模式 pattern) 工具</td></tr><tr><td>sed</td><td>流编辑器 (stream editor) 文本编辑工具</td></tr><tr><td>awk</td><td>Linux 文本报告生成器 (格式化文本) gawk</td></tr></tbody></table><h3 id="bre-集合"><a class="markdownIt-Anchor" href="#bre-集合"></a> BRE 集合</h3><table><thead><tr><th>字符</th><th>描述</th></tr></thead><tbody><tr><td>^</td><td>尖角号，用于模式的最左侧 --&gt; <code>&quot;^yu&quot;</code> 匹配以 <code>yu</code> 单词开头的行</td></tr><tr><td>$</td><td>美元符，用于模式的最右侧 --&gt; <code>&quot;yu$&quot;</code> 匹配以 <code>yu</code> 单词结尾的行</td></tr><tr><td>^$</td><td>组合符，表示空行( <code>^</code> 后面什么也没写，为空。<code>$</code> 前面什么也没写，为空。开头结尾什么都没有)</td></tr><tr><td>.</td><td>匹配任意一个且只有一个字符，不能匹配空行</td></tr><tr><td>\</td><td>转义字符，让特殊含义的字符，现出圆形，还原本意。例如 <code>\.</code> 代表小数点</td></tr><tr><td>*</td><td>匹配前一个字符（连续出现）0次或1次以上，重复0次代表空，即匹配所有内容 --&gt; <code>a*</code> 匹配 <code>a</code> 0次或多次</td></tr><tr><td>.*</td><td>组合符，匹配所有内容</td></tr><tr><td>^.*</td><td>组合符，匹配任意多个字符开头的内容</td></tr><tr><td>.*$</td><td>组合符，匹配以任意多个字符结尾的内容</td></tr><tr><td>[abc]</td><td>匹配 <code>[]</code> 集合内的任意一个字符，<code>a</code> 或 <code>b</code> 或 <code>c</code>，可以写成 <code>[a-c]</code></td></tr><tr><td>[^abc]</td><td>匹配除了 <code>^</code> 后面的任意字符，<code>a</code> 或 <code>b</code> 或 <code>c</code>，<code>^</code> 表示对 <code>[abc]</code> 的取反</td></tr></tbody></table><h3 id="ere-集合"><a class="markdownIt-Anchor" href="#ere-集合"></a> ERE 集合</h3><ul><li>grep 命令需要使用参数 <code>-E</code> 才生效</li><li>egrep 不推荐使用，用 <code>grep -E</code> 替代</li><li>grep 不加参数，得在特殊字符前面加 <code>\</code> 反斜杠，识别为正则</li></ul><table><thead><tr><th>字符</th><th>描述</th></tr></thead><tbody><tr><td>+</td><td>匹配前一个字符1次或多次，前面字符至少出现1次</td></tr><tr><td>[:/]+</td><td>匹配括号内的 <code>:</code> 或者 <code>/</code> 字符1次或者多次</td></tr><tr><td>?</td><td>匹配前一个字符0次或1次，前面字符可有可无</td></tr><tr><td>|</td><td>表示或者，同时过滤多个字符串</td></tr><tr><td>()</td><td>分组过滤，被括起来的内容表示一个整体</td></tr><tr><td>a{n,m}</td><td>匹配前一个字符最少n次，最多m次</td></tr><tr><td>a{n,}</td><td>匹配前一个字符最少n次</td></tr><tr><td>a{n}</td><td>匹配前一个字符正好n次</td></tr><tr><td>a{,m}</td><td>匹配前一个字符最多m次</td></tr></tbody></table><h2 id="grep"><a class="markdownIt-Anchor" href="#grep"></a> grep</h2><p>全拼：Global search REgular expression and Print out the line</p><p><strong>作用：文本搜索工具，根据用户指定得模式（过滤条件）对目标文本逐行进行匹配检查，打印匹配到的行</strong></p><p><strong>模式：由正则表达式的元字符及文本字符所编写出的过滤条件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line">grep [options] [pattern] file</span><br><span class="line">命令   参数     匹配模式   文件数据</span><br><span class="line">               -i:ignorecase,忽略大小写</span><br><span class="line">               -o:仅显示匹配到的字符本身</span><br><span class="line">               -v：--invert-match，显示不能被模式匹配到的行</span><br><span class="line">               -E：支持使用扩展的正则表达式元字符</span><br><span class="line">               -q：--quiet,--silent 静默模式，即不输出任何信息</span><br></pre></td></tr></table></figure><p>grep命令是linux系统中最重要的命令之一，功能是从文本文件或管道数据流中筛选匹配的行和数据，如果再配合正则表达式，功能十分强大，是Linux运维人员必备的命令</p><table><thead><tr><th>参数选项</th><th>解释说明</th></tr></thead><tbody><tr><td>-v</td><td>排除匹配结果</td></tr><tr><td>-n</td><td>显示匹配行与行号</td></tr><tr><td>-i</td><td>不区分大小写</td></tr><tr><td>-c</td><td>只统计匹配的行数</td></tr><tr><td>-E</td><td>使用egrep命令</td></tr><tr><td>–color=auto</td><td>为grep过滤结果添加颜色</td></tr><tr><td>-w</td><td>只匹配过滤的单词</td></tr><tr><td>-o</td><td>只输出匹配的内容</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/passwd &gt; pwd.txt</span><br><span class="line">grep -i <span class="string">&quot;root&quot;</span> pwd.txt</span><br><span class="line">grep -i -n <span class="string">&quot;root&quot;</span> pwd.txt</span><br><span class="line">grep -i -c <span class="string">&quot;root&quot;</span> pwd.txt</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n\n&quot;</span> &gt;&gt; pwd.txt</span><br><span class="line">grep -i -n <span class="string">&quot;^$&quot;</span> pwd.txt</span><br><span class="line">grep -i -v <span class="string">&quot;^$&quot;</span> pwd.txt</span><br></pre></td></tr></table></figure><p><img src="grep1.png" alt="" /></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">grep -i <span class="string">&quot;^s&quot;</span> pwd.txt</span><br><span class="line">grep -n <span class="string">&quot;bash$&quot;</span> pwd.txt</span><br><span class="line">grep -n <span class="string">&quot;bash$&quot;</span> pwd.txt -o</span><br><span class="line">grep -n <span class="string">&quot;.apt&quot;</span> pwd.txt</span><br><span class="line">grep -n <span class="string">&quot;.apt&quot;</span> pwd.txt --color=auto</span><br><span class="line"><span class="comment"># 后面为了方便直接 alias</span></span><br><span class="line"><span class="built_in">alias</span> grep=<span class="string">&#x27;grep --color=auto&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="grep2.png" alt="" /></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&quot;[a-z]&quot;</span> /etc/lsb-release</span><br><span class="line">grep <span class="string">&quot;[A-Z]&quot;</span> /etc/lsb-release</span><br><span class="line">grep <span class="string">&quot;[0-9]&quot;</span> /etc/crontab</span><br><span class="line">grep <span class="string">&quot;[^a-zA-Z]&quot;</span> /etc/lsb-release</span><br></pre></td></tr></table></figure><p><img src="grep3.png" alt="" /></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">grep -E <span class="string">&quot;l+&quot;</span> /etc/lsb-release</span><br><span class="line">grep -E <span class="string">&quot;go?d&quot;</span> aa.txt</span><br><span class="line">find . -name <span class="string">&quot;*.txt&quot;</span> | grep -E <span class="string">&quot;a|w&quot;</span></span><br><span class="line">grep -E <span class="string">&quot;g(o|)d&quot;</span> aa.txt</span><br></pre></td></tr></table></figure><p><img src="grep4.png" alt="" /></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">grep -E <span class="string">&quot;(r..t).*\1&quot;</span> /etc/passwd</span><br><span class="line">grep -E <span class="string">&quot;o&#123;1,4&#125;&quot;</span> aa.txt</span><br><span class="line">grep -E <span class="string">&quot;o&#123;5,&#125;&quot;</span> aa.txt</span><br><span class="line">grep -E <span class="string">&quot;o&#123;2&#125;&quot;</span> aa.txt -o</span><br><span class="line">grep -E <span class="string">&quot;o&#123;,4&#125;&quot;</span> aa.txt -o</span><br></pre></td></tr></table></figure><p><img src="grep5.png" alt="" /></p><h2 id="sed"><a class="markdownIt-Anchor" href="#sed"></a> sed</h2><p>对文件，数据流进行处理，操作，过滤替换转换文本内容。</p><p>工作流程：每次一行，放入模式空间(读入内存)，然后模式匹配，匹配成功，进行编辑，后输出屏幕，匹配失败输出屏幕。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 语法</span><br><span class="line">sed [选项] (sed 内置命令字符) [输入文件]</span><br></pre></td></tr></table></figure><p>选项：</p><table><thead><tr><th>参数选项</th><th>解释</th></tr></thead><tbody><tr><td>-n</td><td>取消默认 <code>sed</code> 输出，常与 <code>p</code> 命令一起用</td></tr><tr><td>-i</td><td>直接将修改结果写入文件中，不加参数就是修改内存数据，输出</td></tr><tr><td>-e</td><td>多次编辑，不需要管道符了</td></tr><tr><td>-r</td><td>支持正则扩展</td></tr></tbody></table><p>常用的内置命令字符</p><table><thead><tr><th>sed 内置命令字符</th><th>解释</th></tr></thead><tbody><tr><td>a</td><td>append, 对文本追加，指定行后面添加一行/多行文本</td></tr><tr><td>d</td><td>Delete, 删除匹配行</td></tr><tr><td>i</td><td>insert, 表示插入文本，指定行前添加一行/多行文本</td></tr><tr><td>p</td><td>Print,  打印匹配行内容，与 <code>-n</code> 一起使用</td></tr><tr><td>s/exp/xxx/g</td><td>匹配正则内容，然后替换内容(支持正则)，结尾 <code>g</code> 代表全局匹配</td></tr></tbody></table><p>sed 匹配范围</p><table><thead><tr><th>范围</th><th>解释</th></tr></thead><tbody><tr><td>空地址</td><td>全文处理</td></tr><tr><td>单地址</td><td>指定文件某一行</td></tr><tr><td>/pattern/</td><td>被模式匹配的某一行</td></tr><tr><td>范围区间</td><td>10,20 十到二十行 10,+5 第十行向下5行。/pattern1/,/pattern2/</td></tr><tr><td>步长</td><td>1~2 1,3,5,7,9。2~2两个步长，表示2,4,6,8,10 偶数行</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 忽略准备数据</span></span><br><span class="line">sed -n <span class="string">&quot;2,3p&quot;</span> 2.txt</span><br><span class="line">sed -n <span class="string">&quot;1~2p&quot;</span> 2.txt</span><br><span class="line">sed -n <span class="string">&quot;2,+2p&quot;</span> 2.txt</span><br><span class="line">sed <span class="string">&quot;1a=======&quot;</span> 2.txt</span><br><span class="line">sed <span class="string">&quot;1i=======&quot;</span> 2.txt</span><br><span class="line">sed <span class="string">&quot;1d&quot;</span> 2.txt</span><br><span class="line">sed <span class="string">&quot;s/I/Your/g&quot;</span> 2.txt</span><br><span class="line">sed <span class="string">&quot;2s/I/Your/g&quot;</span> 2.txt</span><br></pre></td></tr></table></figure><p><img src="sed1.png" alt="" /></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sed -n <span class="string">&quot;/linux/p&quot;</span> 2.txt</span><br><span class="line">sed -i <span class="string">&quot;/qq/d&quot;</span> 2.txt</span><br><span class="line"><span class="built_in">cat</span> -n 2.txt</span><br><span class="line">sed <span class="string">&quot;s@I@Hers@g&quot;</span> 2.txt</span><br><span class="line">sed <span class="string">&quot;s#I#His#g&quot;</span> 2.txt</span><br></pre></td></tr></table></figure><p><img src="sed2.png" alt="" /></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&quot;2iMy qq is 123453453&quot;</span> 2.txt</span><br><span class="line"><span class="built_in">cat</span> -n 2.txt</span><br><span class="line">sed -e <span class="string">&quot;s/I/My/g&quot;</span> -e <span class="string">&quot;s/123453453/110/g&quot;</span> 2.txt</span><br><span class="line"><span class="comment"># 提取 IP 地址</span></span><br><span class="line">ifconfig eth0</span><br><span class="line">ifconfig eth0 | sed -n <span class="string">&quot;2p&quot;</span></span><br><span class="line">ifconfig eth0 | sed -n <span class="string">&quot;2p&quot;</span> | sed <span class="string">&quot;s/^.*inet//&quot;</span></span><br><span class="line">ifconfig eth0 | sed -n <span class="string">&quot;2p&quot;</span> | sed <span class="string">&quot;s/^.*inet//&quot;</span> | sed <span class="string">&quot;s/net.*$//g&quot;</span></span><br><span class="line">ifconfig eth0 | sed -e <span class="string">&quot;2s/^.*inet//g&quot;</span> -e <span class="string">&quot;2s/net.*$//gp&quot;</span> -n</span><br><span class="line"><span class="comment"># 去掉空格</span></span><br><span class="line">ifconfig eth0 | sed -e <span class="string">&quot;2s/^.*inet//g&quot;</span> -e <span class="string">&quot;2s/net.*$//g&quot;</span> -e <span class="string">&quot;2s/ //gp&quot;</span> -n</span><br></pre></td></tr></table></figure><p><img src="sed3.png" alt="" /></p><h2 id="awk"><a class="markdownIt-Anchor" href="#awk"></a> awk</h2><p>有强大的文本格式化能力，处理成专业表格形式。awk最早是在 <code>Unix</code> 上实现。我们用的 <code>awk</code> 是 <code>GUN awk</code> 即 <code>gawk</code>。awk 更是一门编程语言，支持条件判断，数组，循环等功能。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 语法</span><br><span class="line">sed [选项] &#x27;模式[动作]&#x27; 文件</span><br><span class="line">sed options pattern &#123;action&#125; file</span><br></pre></td></tr></table></figure><ul><li>Action 指的是动作，awk擅长文本格式化，且输出格式化的结果，因此最常用的动作是 <code>print</code> 和 <code>printf</code>。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..10&#125;;<span class="keyword">do</span> <span class="keyword">for</span> j <span class="keyword">in</span> &#123;1..5&#125;;<span class="keyword">do</span> <span class="built_in">echo</span> -n <span class="string">&quot;hello<span class="subst">$((i*j)</span>) &quot;</span> &gt;&gt; 3.txt;<span class="keyword">done</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span> &gt;&gt; 3.txt;<span class="keyword">done</span>;</span><br><span class="line"><span class="built_in">cat</span> 3.txt</span><br><span class="line"><span class="comment"># 取出第二列</span></span><br><span class="line"><span class="built_in">cat</span> 3.txt | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="awk1.png" alt="" /></p><ul><li>我们执行的命令是 <code>awk '&#123;print $2&#125;'</code>，并没有使用参数和模式，<code>$2</code> 表示输出文本的第二列信息</li><li>awk默认以空格为分隔符，且多个空格也识别为一个空格，作为分隔符</li><li>awk是按行处理文件，一行处理完毕，处理下一行，根据用户指定的分隔符去工作，没有指定则默认空格</li><li>指定分隔符后，<code>awk</code> 把每一行切割后的数据对应到内置变量</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$0</span>      表示整行</span><br><span class="line"><span class="variable">$NF</span>     表示当前分割后的最后一列</span><br><span class="line">$(NF-1) 倒数第二列</span><br></pre></td></tr></table></figure><p>常用内置变量</p><table><thead><tr><th>内置变量</th><th>解释</th></tr></thead><tbody><tr><td>$n</td><td>指定分隔符后，当前记录的第N个字段</td></tr><tr><td>$0</td><td>完整的输入记录</td></tr><tr><td>NF</td><td>(number of fiels) 分割后，当前行一共有多少个字段</td></tr><tr><td>NR</td><td>(number of records) 当前记录数，行数</td></tr><tr><td>FS</td><td>输入分隔符，默认是空格</td></tr><tr><td>OFS</td><td>输出分隔符，默认是空格</td></tr><tr><td>RS</td><td>输入换行符，默认是换行符，指定输入的换行符</td></tr><tr><td>ORS</td><td>输出换行符，默认是换行符，指定输出的换行符</td></tr><tr><td>FNR</td><td>各文件分别计数的行号</td></tr><tr><td>FILENAME</td><td>当前文件名</td></tr><tr><td>ARGC</td><td>命令行参数的个数</td></tr><tr><td>ARGV</td><td>数组，保存的是命令行给定的参数</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print $0&#125;&#x27;</span> 3.txt</span><br><span class="line">awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span> 3.txt</span><br><span class="line">awk <span class="string">&#x27;&#123;print $NF&#125;&#x27;</span> 3.txt</span><br><span class="line">awk <span class="string">&#x27;&#123;print $1$3$NF&#125;&#x27;</span> 3.txt</span><br></pre></td></tr></table></figure><p><img src="awk2.png" alt="" /></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print $1,$3,$NF&#125;&#x27;</span> 3.txt</span><br><span class="line">awk <span class="string">&#x27;&#123;print &quot;第一列：&quot;$1,&quot;第三列：&quot;$3,&quot;最后一列：&quot;$NF&#125;&#x27;</span> 3.txt</span><br><span class="line">awk <span class="string">&#x27;&#123;print&#125;&#x27;</span> 3.txt</span><br></pre></td></tr></table></figure><p><img src="awk3.png" alt="" /></p><p>参数</p><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>-F</td><td>指定分割字符</td></tr><tr><td>-v</td><td>定义或修改一个 <code>awk</code> 内部变量</td></tr><tr><td>-f</td><td>从脚本文件中读取 <code>awk</code> 命令</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /etc/passwd -n | <span class="built_in">head</span> -n 5</span><br><span class="line">awk <span class="string">&#x27;NR==3&#x27;</span> /etc/passwd</span><br><span class="line">awk <span class="string">&#x27;NR==3&#123;print $0&#125;&#x27;</span> /etc/passwd</span><br><span class="line">awk <span class="string">&#x27;NR==3,NR==5&#123;print $0&#125;&#x27;</span> /etc/passwd</span><br><span class="line">awk <span class="string">&#x27;&#123;print NR,$1&#125;&#x27;</span> 3.txt</span><br><span class="line">awk <span class="string">&#x27;NR==20,NR==23&#123;print NR,$0&#125;&#x27;</span> /etc/passwd</span><br><span class="line">awk -F <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;NR==20,NR==23&#123;print NR,$1&#125;&#x27;</span> /etc/passwd</span><br><span class="line"><span class="comment"># 查看 IP</span></span><br><span class="line">ifconfig eth0 | awk <span class="string">&#x27;NR==2&#123;print $2&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="awk4.png" alt="" /></p><p>分隔符有两种</p><ul><li>输入分隔符，默认空格。变量名是 <code>FS</code> (field separator)</li><li>输出分隔符，<code>OFS</code> (output field separator)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">awk -F <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;NR==1,NR==4&#123;print $1&#125;&#x27;</span> /etc/passwd</span><br><span class="line">awk -v FS=<span class="string">&quot;:&quot;</span> <span class="string">&#x27;NR==1,NR==4&#123;print $NF&#125;&#x27;</span> /etc/passwd</span><br><span class="line">awk -v FS=<span class="string">&quot;:&quot;</span> -v OFS=<span class="string">&quot; | &quot;</span> <span class="string">&#x27;NR==1,NR==4&#123;print $1,$NF&#125;&#x27;</span> /etc/passwd</span><br><span class="line">awk -F <span class="string">&quot;:&quot;</span> -v OFS=<span class="string">&quot; | &quot;</span> <span class="string">&#x27;NR==1,NR==4&#123;print $1,$NF&#125;&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure><p><img src="awk5.png" alt="" /></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print NR,FNR,$0&#125;&#x27;</span> 2.txt 3.txt</span><br><span class="line">awk -v RS=<span class="string">&quot;.&quot;</span> <span class="string">&#x27;&#123;print NR,$0&#125;&#x27;</span> 2.txt</span><br><span class="line">awk -v OFS=<span class="string">&quot;---|---&quot;</span> <span class="string">&#x27;&#123;print NR,$0&#125;&#x27;</span> 2.txt</span><br><span class="line">awk -v ORS=<span class="string">&quot;---|---&quot;</span> <span class="string">&#x27;&#123;print NR,$0&#125;&#x27;</span> 2.txt</span><br></pre></td></tr></table></figure><p><img src="awk6.png" alt="" /></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print NR,FILENAME,$0&#125;&#x27;</span> 2.txt 3.txt</span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;print &quot;Start AWK !!&quot;&#125; &#123;print ARGV[0],$0&#125;&#x27;</span> 2.txt</span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;print &quot;Start AWK !!&quot;&#125; &#123;print ARGV[1],$0&#125;&#x27;</span> 2.txt</span><br><span class="line">awk -v name=<span class="string">&quot;feng&quot;</span> <span class="string">&#x27;BEGIN&#123;print &quot;Start AWK !!&quot;&#125; &#123;print ARGV[0],ARGV[1],ARGV[2],ARGV[3]&#125;&#x27;</span> 1.txt 2.txt</span><br><span class="line">awk -v name=<span class="string">&quot;feng&quot;</span> <span class="string">&#x27;BEGIN&#123;print &quot;Start AWK !!&quot;&#125; &#123;print ARGV[0],ARGV[1],ARGV[2],name&#125;&#x27;</span> 1.txt 2.txt</span><br><span class="line"><span class="comment"># 引用 shell 变量</span></span><br><span class="line">a=<span class="string">&quot;shell args&quot;</span></span><br><span class="line">awk -v a=<span class="string">&quot;<span class="variable">$a</span>&quot;</span> <span class="string">&#x27;BEGIN&#123;print a&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="awk7.png" alt="" /></p><h3 id="格式化输出"><a class="markdownIt-Anchor" href="#格式化输出"></a> 格式化输出</h3><p>前面我们接触到的awk的输出功能，是print，只能对文本简单的输出，并不能美化或者修改格式</p><p>要点：</p><ol><li>其中 print 命令的最大不同是，printf 需要指定 format</li><li>format 用于指定后面的每个item的输出格式</li><li>printf 语句不会自动打印换行符：<code>\n</code></li><li>format 格式的指示符都以%开头，后跟一个字符</li></ol><table><thead><tr><th>format</th><th>解释</th></tr></thead><tbody><tr><td>%c</td><td>显示字符的ASCII</td></tr><tr><td>%d %i</td><td>十进制整数</td></tr><tr><td>%e %E</td><td>科学计数法显示数值</td></tr><tr><td>%f</td><td>显示浮点数</td></tr><tr><td>%g %G</td><td>以科学计数法的格式或浮点数的格式显示数值</td></tr><tr><td>%s</td><td>显示字符串</td></tr><tr><td>%u</td><td>无符号整数</td></tr><tr><td>%%</td><td>显示%自身</td></tr><tr><td>-</td><td>左对齐，默认右对齐</td></tr><tr><td>+</td><td>显示数值符号： <code>printf &quot;%+d&quot;</code></td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print $0&#125;&#x27;</span> 2.txt</span><br><span class="line">awk <span class="string">&#x27;&#123;printf $0&#125;&#x27;</span> 2.txt</span><br><span class="line">awk <span class="string">&#x27;&#123;printf &quot;%s\n&quot;,$1&#125;&#x27;</span> 2.txt</span><br><span class="line">awk <span class="string">&#x27;&#123;printf &quot;%s\n&quot;,$0&#125;&#x27;</span> 2.txt</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%s&quot;</span> a b c</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%s\n&quot;</span> a b c</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;== %s ==\n&quot;</span> a b c</span><br></pre></td></tr></table></figure><p><img src="awk8.png" alt="" /></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;NR==3,NR==5&#123;printf &quot;第一列：%s, 第二列：%s\n&quot;, $1,$2&#125;&#x27;</span> 3.txt</span><br><span class="line">awk -F <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;BEGIN&#123;printf &quot;%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t%-10s\n&quot;,&quot;Username&quot;,&quot;password&quot;,&quot;UID&quot;,&quot;GID&quot;,&quot;User mark&quot;,&quot;Home dir&quot;,&quot;User bash&quot;&#125;NR==1,NR==10&#123;printf &quot;%-10s\t%-10s\t%-10s\t%-10s\t%-10s\t</span></span><br><span class="line"><span class="string">%-10s\t%-10s\n&quot;,$1,$2,$3,$4,$5,$6,$7&#125;&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure><p><img src="awk9.png" alt="" /></p><p>模式：</p><p><code>awk</code> 是按行处理文本，刚才讲解了 <code>print</code> 动作，现在讲解特殊的 pattern :<br /><code>BEGIN</code> 和 <code>END</code></p><ul><li>BEGIN模式是处理文本之前需要执行的操作</li><li>END模式是处理完所有行之后执行的操作</li></ul><p>awk默认是按行处理文本，如果不指定任何模式（条件），awk默认一行行处理<br />如果指定了模式，只有符合模式的才会被处理</p><table><thead><tr><th>关系运算符</th><th>解释</th><th>示例</th></tr></thead><tbody><tr><td>&lt;</td><td>小于</td><td>x&lt;y</td></tr><tr><td>&lt;=</td><td>小于等于</td><td>x&lt;=y</td></tr><tr><td>==</td><td>等于</td><td>x==y</td></tr><tr><td>!=</td><td>不等于</td><td>x!=y</td></tr><tr><td>&gt;=</td><td>大于等于</td><td>x&gt;=y</td></tr><tr><td>&gt;</td><td>大于</td><td>x&gt;y</td></tr><tr><td>~</td><td>匹配正则</td><td>x~/正则/</td></tr><tr><td>!~</td><td>不匹配正则</td><td>x!~/正则/</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;BEGIN&#123;print &quot;start awk&quot;&#125;NR==3&#123;print &quot;==&quot;,$0&#125;END&#123;print &quot;Stop awk&quot;&#125;&#x27;</span> 2.txt</span><br><span class="line">awk <span class="string">&#x27;NR&gt;=4&#123;print $0&#125;&#x27;</span> 2.txt</span><br><span class="line">awk <span class="string">&#x27;NR!=4&#123;print $0&#125;&#x27;</span> 2.txt</span><br><span class="line">awk <span class="string">&#x27;/^feng/&#123;print $0&#125;&#x27;</span> /etc/passwd</span><br><span class="line">awk -F <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;/^feng/&#123;print $1,$NF&#125;&#x27;</span> /etc/passwd</span><br><span class="line">awk -F <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;BEGIN&#123;printf &quot;%-10s\t%-10s\t%-10s\t%-10s\n&quot;,&quot;Username&quot;,&quot;UID&quot;,&quot;Home dir&quot;,&quot;U</span></span><br><span class="line"><span class="string">ser bash&quot;&#125;/^feng/&#123;printf &quot;%-10s\t%-10s\t%-10s\t%-10s\n&quot;,$1,$2,$6,$7&#125;&#x27;</span> /etc/passwd</span><br><span class="line"><span class="comment"># 找出禁止登陆的用户</span></span><br><span class="line">awk -F <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;/nologin$/&#123;print $0&#125;&#x27;</span> /etc/passwd</span><br><span class="line">grep <span class="string">&quot;nologin&quot;</span> /etc/passwd -n</span><br><span class="line">awk -F <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;/^ntp/,/^sshd/&#123;print NR,$0&#125;&#x27;</span> /etc/passwd</span><br><span class="line"><span class="comment"># 统计 nginx 日志访问 IP 数量</span></span><br><span class="line">awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> access.log | <span class="built_in">sort</span> -n | <span class="built_in">uniq</span> | <span class="built_in">wc</span> -l</span><br><span class="line"><span class="comment"># 统计 nginx 访问最频繁的 IP</span></span><br><span class="line">awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> access.log | <span class="built_in">sort</span> -n | <span class="built_in">uniq</span> -c | <span class="built_in">sort</span> -nr | <span class="built_in">head</span> 10</span><br></pre></td></tr></table></figure><p><img src="awk10.png" alt="" /><br /><img src="awk11.png" alt="" /></p>]]></content>
      
      
      <categories>
          
          <category> 技术栈 </category>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell学习（五）</title>
      <link href="/shell5/"/>
      <url>/shell5/</url>
      
        <content type="html"><![CDATA[<h1 id="shell脚本开发之函数"><a class="markdownIt-Anchor" href="#shell脚本开发之函数"></a> shell脚本开发之函数</h1><p>把复杂的命令执行过程，通过逻辑代码，组成一个脚本文件，再去执行该文件。(function)</p><span id="more"></span><h2 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 标准定义</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">name</span></span>() &#123;</span><br><span class="line">  &lt;commond&gt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 偷懒</span></span><br><span class="line"><span class="keyword">function</span> name &#123;</span><br><span class="line">  &lt;commond&gt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 超级偷懒</span></span><br><span class="line"><span class="function"><span class="title">name</span></span>() &#123;</span><br><span class="line">  &lt;commond&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>定义和调用在同一个文件，直接函数名调用</li><li>定义和调用不在同一个文件，可以 <code>source xx.sh</code> 加载到 shell 环境中。就可以调用。</li><li>查看当前定义的函数，可以 <code>set | grep ^name</code> 查看。</li></ol><h2 id="实践"><a class="markdownIt-Anchor" href="#实践"></a> 实践</h2><p>三岁小孩都会，不写了</p><h2 id="函数传参"><a class="markdownIt-Anchor" href="#函数传参"></a> 函数传参</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义函数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">hello</span></span>() &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Hello world!!!&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">helloP</span></span>() &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Hello, your param is <span class="variable">$1</span> <span class="variable">$2</span> <span class="variable">$3</span>, 一共是<span class="variable">$#</span>个参数&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行函数</span></span><br><span class="line">path=`<span class="built_in">pwd</span>`</span><br><span class="line">[ -f <span class="variable">$path</span>/func.sh ] &amp;&amp; &#123;</span><br><span class="line">  . <span class="variable">$path</span>/func.sh</span><br><span class="line">&#125; || <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">hello</span><br><span class="line">helloP a b c</span><br></pre></td></tr></table></figure><p><img src="func.png" alt="结果" /></p><h2 id="检测网站是否可访问"><a class="markdownIt-Anchor" href="#检测网站是否可访问"></a> 检测网站是否可访问</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测网站是否可访问</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">usage</span></span>() &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Usage: <span class="variable">$0</span> url&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">check_url</span></span>() &#123;</span><br><span class="line">  wget --spider -q -o /dev/null --tries=1 -T 5 <span class="variable">$1</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">&quot;$?&quot;</span> == 0 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span> is running...&quot;</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span> is down...&quot;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$#</span>&quot;</span> -ne <span class="string">&quot;1&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    usage</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  check_url <span class="variable">$1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main $*</span><br></pre></td></tr></table></figure><p><img src="check.png" alt="检测结果" /></p><p>美化输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测网站是否可访问</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 美化</span></span><br><span class="line">lsb_functions=<span class="string">&quot;/lib/lsb/init-functions&quot;</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -f <span class="variable">$lsb_functions</span>; <span class="keyword">then</span></span><br><span class="line">  . <span class="variable">$lsb_functions</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  init_functions=<span class="string">&quot;/etc/init.d/init-functions&quot;</span></span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">test</span> -f <span class="variable">$init_functions</span>; <span class="keyword">then</span></span><br><span class="line">    . <span class="variable">$init_functions</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">usage</span></span>() &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Usage: <span class="variable">$0</span> url&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">check_url</span></span>() &#123;</span><br><span class="line">  wget --spider -q -o /dev/null --tries=1 -T 5 <span class="variable">$1</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">&quot;$?&quot;</span> == 0 ]; <span class="keyword">then</span></span><br><span class="line">    log_success_msg <span class="string">&quot;<span class="variable">$1</span> is running...&quot;</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    log_failure_msg <span class="string">&quot;<span class="variable">$1</span> is down...&quot;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">  <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$#</span>&quot;</span> -ne <span class="string">&quot;1&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    usage</span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">  check_url <span class="variable">$1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main $*</span><br></pre></td></tr></table></figure><p><img src="beau.png" alt="美化结果" /></p><p>评价是：没啥用，更丑了…<br /><img src="bqb.jpg" alt="" /></p><h2 id="rsync-启停脚本开发"><a class="markdownIt-Anchor" href="#rsync-启停脚本开发"></a> rsync 启停脚本开发</h2><p><img src="rsync1.png" alt="" /><br /><img src="rsync2.png" alt="" /><br /><img src="rsync3.png" alt="" /><br /><img src="rsync4.png" alt="" /><br /><img src="rsync5.png" alt="" /></p><p>完结撒花！！！</p>]]></content>
      
      
      <categories>
          
          <category> 技术栈 </category>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell学习（四）</title>
      <link href="/shell4/"/>
      <url>/shell4/</url>
      
        <content type="html"><![CDATA[<h1 id="shell脚本开发之判断和循环"><a class="markdownIt-Anchor" href="#shell脚本开发之判断和循环"></a> shell脚本开发之判断和循环</h1><p>把复杂的命令执行过程，通过逻辑代码，组成一个脚本文件，再去执行该文件。(if while for)</p><span id="more"></span><h2 id="if-语句开发"><a class="markdownIt-Anchor" href="#if-语句开发"></a> if 语句开发</h2><p>单分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 格式</span></span><br><span class="line"><span class="keyword">if</span> &lt;<span class="built_in">expr</span>&gt;</span><br><span class="line">  <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;...&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 简化版本</span></span><br><span class="line"><span class="keyword">if</span> &lt;<span class="built_in">expr</span>&gt;; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;...&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 一行</span></span><br><span class="line"><span class="keyword">if</span> &lt;<span class="built_in">expr</span>&gt;;<span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;...&quot;</span>;<span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>双分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 两个 if 嵌套</span></span><br><span class="line"><span class="keyword">if</span> &lt;<span class="built_in">expr</span>&gt;</span><br><span class="line">  <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;...&quot;</span></span><br><span class="line">  <span class="keyword">if</span> &lt;<span class="built_in">expr</span>&gt;</span><br><span class="line">  <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;...&quot;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># if-else</span></span><br><span class="line"><span class="keyword">if</span> &lt;<span class="built_in">expr</span>&gt;</span><br><span class="line">  <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;...&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;...&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>多分枝处理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> &lt;<span class="built_in">expr</span>&gt;</span><br><span class="line">  <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;...&quot;</span></span><br><span class="line"><span class="keyword">elif</span> &lt;<span class="built_in">expr</span>&gt;</span><br><span class="line">  <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;...&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;...&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="实践"><a class="markdownIt-Anchor" href="#实践"></a> 实践</h2><p>太简单了，给三岁小孩学刚刚好。</p><h2 id="系统监控脚本"><a class="markdownIt-Anchor" href="#系统监控脚本"></a> 系统监控脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 发送邮件</span></span><br><span class="line">mail -s <span class="string">&quot;主题&quot;</span> 收件人 &lt; message</span><br><span class="line"><span class="comment"># 查看新邮件</span></span><br><span class="line">mail</span><br><span class="line"><span class="comment"># 查看归档邮件</span></span><br><span class="line">mail -f</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始脚本</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 检查 linux 可用内存，内存小于100M时，发邮件给运维</span></span><br><span class="line"><span class="comment"># 2. 加入crontab, 每三分钟检查一次</span></span><br><span class="line">FreeMem=`free -m | awk <span class="string">&#x27;NR==2 &#123;print $NF&#125;&#x27;</span>`</span><br><span class="line">CHARS=<span class="string">&quot;Current memory is <span class="variable">$FreeMem</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$FreeMem</span>&quot;</span> -lt 12000 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$CHARS</span> | <span class="built_in">tee</span> /tmp/message.txt</span><br><span class="line">  mail -s <span class="string">&quot;`date +%F-%T` <span class="variable">$CHARS</span>&quot;</span> feng@laptop-b4fc2bhq.localdomain &lt; /tmp/message.txt</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;内存不足&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p><img src="mail.png" alt="邮箱的使用" /><br /><img src="sys.png" alt="检测脚本" /></p><p>加入定时任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">crontab -l</span><br><span class="line">*/3 * * * * /bin/bash /home/feng/shell/7.sh &amp;&gt;/dev/null</span><br></pre></td></tr></table></figure><h2 id="通过读数比较大小"><a class="markdownIt-Anchor" href="#通过读数比较大小"></a> 通过读数比较大小</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过读数比较大小</span></span><br><span class="line">a=<span class="variable">$1</span></span><br><span class="line">b=<span class="variable">$2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$a</span>&quot;</span> -lt <span class="string">&quot;<span class="variable">$b</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;yes, <span class="variable">$a</span> &lt; <span class="variable">$b</span>&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$a</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$b</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;yes, <span class="variable">$a</span> = <span class="variable">$b</span>&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$a</span>&quot;</span> -gt <span class="string">&quot;<span class="variable">$b</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;yes, <span class="variable">$a</span> &gt; <span class="variable">$b</span>&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>多分枝简化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">a=<span class="variable">$1</span></span><br><span class="line">b=<span class="variable">$2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$a</span>&quot;</span> -lt <span class="string">&quot;<span class="variable">$b</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;yes, <span class="variable">$a</span> &lt; <span class="variable">$b</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$a</span>&quot;</span> -eq <span class="string">&quot;<span class="variable">$b</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;yes, <span class="variable">$a</span> = <span class="variable">$b</span>&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$a</span>&quot;</span> -gt <span class="string">&quot;<span class="variable">$b</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;yes, <span class="variable">$a</span> &gt; <span class="variable">$b</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p><img src="cmp.png" alt="比较大小" /></p><h2 id="mysql-监控脚本"><a class="markdownIt-Anchor" href="#mysql-监控脚本"></a> MySQL 监控脚本</h2><ol><li>端口监控</li><li>监控服务或者是进程数</li><li>模拟客户端访问</li><li>登录 MySQL 数据库执行 <code>SQL</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sudo netstat -nltp | grep 3306</span><br><span class="line">sudo ss -tunlp | grep 3306</span><br><span class="line">sudo lsof -i tcp:3306</span><br><span class="line">nmap localhost -p 3306</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span> | telnet 127.0.0.1 3306</span><br><span class="line">ps -ef | grep mysql</span><br><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL 监控脚本，只写一种，其他的类似</span></span><br><span class="line"><span class="keyword">if</span> [ `netstat -nltp | grep 3306 | <span class="built_in">wc</span> -l` = <span class="string">&quot;1&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;MySQL is running!!!&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;MySQL is stop, Start now...&quot;</span></span><br><span class="line">  systemctl start mariadb</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p><img src="thread.png" alt="端口进程检查" /></p>]]></content>
      
      
      <categories>
          
          <category> 技术栈 </category>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell学习（三）</title>
      <link href="/shell3/"/>
      <url>/shell3/</url>
      
        <content type="html"><![CDATA[<h1 id="shell脚本开发之条件判断"><a class="markdownIt-Anchor" href="#shell脚本开发之条件判断"></a> shell脚本开发之条件判断</h1><p>把复杂的命令执行过程，通过逻辑代码，组成一个脚本文件，再去执行该文件。</p><span id="more"></span><h2 id="read-命令"><a class="markdownIt-Anchor" href="#read-命令"></a> read 命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;tips&quot;</span> abc           <span class="comment"># 读取用户输入赋值 abc</span></span><br><span class="line"><span class="built_in">read</span> -t 10 -p <span class="string">&quot;tips&quot;</span> abc     <span class="comment"># 读取用户输入赋值 abc，等待10秒</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;tips&quot;</span> abc cdf ghi   <span class="comment"># 读取用户输入赋值 abc,cdf,ghi 三个变量</span></span><br></pre></td></tr></table></figure><h2 id="用于条件测试的命令"><a class="markdownIt-Anchor" href="#用于条件测试的命令"></a> 用于条件测试的命令</h2><ul><li>test 表达式</li><li>[表达式]</li><li>[[表达式]]</li><li>((表达式))</li></ul><h2 id="test-表达式"><a class="markdownIt-Anchor" href="#test-表达式"></a> test 表达式</h2><p>test命令参数</p><ol><li>关于文件类型判断真假<ul><li>-e 判断文件是否存在(普通文件，目录)，存在为真，不存在为假</li><li>-f 判断是否为文件</li><li>-d 判断是否为目录</li><li>-b 判断是否为 block device</li><li>-c 判断是否为 character device</li><li>-s 判断是否为 socket 文件</li><li>-p 判断是否为 FIFO (pipe) 文件</li><li>-L 判断是否为连结档</li></ul></li><li>关于文件权限判断真假<ul><li>-r 判断该文件是否 <code>读取</code> 属性</li><li>-w 判断该文件是否 <code>写入</code> 属性</li><li>-x 判断该文件是否 <code>执行</code> 属性</li><li>-u 判断该文件是否 <code>SUID</code> 属性</li><li>-g 判断该文件是否 <code>SGID</code> 属性</li><li>-k 判断该文件是否 <code>Sticky bit</code> 属性</li><li>-s 判断该文件是否为非空白文件</li></ul></li><li>两个文件之间的比较<ul><li>-nt (newer than) 判断 file1 是否比 file2 新</li><li>-ot (older than) 判断 file1 是否比 file2 旧</li><li>-ef 判断 file1 和 file2 是否为同一个文件（可用于判断 <code>hard link</code> 的判定上，意义在于判定两个文件是否同时指向同一个 <code>inode</code> 哩）</li></ul></li><li>关于两个整数大小之间的判定<ul><li>-eq (equal) 两个数相等</li><li>-ne (not equal) 两个数不等</li><li>-gt (greater than) n1 大于 n2</li><li>-lt (less than) n1 小于 n2</li><li>-ge (greater than or equal) n1 大于等于 n2</li><li>-le (less than or equal) n1 小于等于 n2</li></ul></li><li>判断字符串的数据<ul><li>-z (zero) 判断字符串是否为 <code>0</code> 如果是空字符串，返回 <code>true</code></li><li>-n (no zero) 判断字符串是否为 <code>0</code> 如果是空字符串，返回 <code>false</code></li><li>= 相等返回 <code>true</code></li><li>!= 不等返回 <code>false</code></li><li>! 取反</li></ul></li><li>多重条件判定</li></ol><h2 id="实践"><a class="markdownIt-Anchor" href="#实践"></a> 实践</h2><ol><li><p>关于文件类型，权限判断真假</p><table><thead><tr><th>字符</th><th>英文写法</th><th>意义</th></tr></thead><tbody><tr><td>%%</td><td>-a</td><td>与</td></tr><tr><td>||</td><td>-o</td><td>或</td></tr><tr><td>!</td><td>!</td><td>非</td></tr></tbody></table> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span> -e 1.sh</span><br><span class="line"><span class="built_in">echo</span> $?</span><br><span class="line"><span class="built_in">test</span> -e a.sh</span><br><span class="line"><span class="built_in">echo</span> $?</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件存在打印提示，不存在则创建</span></span><br><span class="line"><span class="built_in">test</span> -e a.txt &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;File exist!&quot;</span> || <span class="built_in">touch</span> a.txt</span><br><span class="line"><span class="built_in">test</span> -e hello &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;Dir/File exist!&quot;</span> || <span class="built_in">mkdir</span> hello</span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span> -f a.txt &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;yes&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;no&quot;</span></span><br><span class="line"><span class="built_in">test</span> -d hello &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;yes&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;no&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">test</span> -z <span class="string">&quot;&quot;</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;yes&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;no&quot;</span></span><br><span class="line"><span class="built_in">test</span> -n <span class="string">&quot;&quot;</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;yes&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;no&quot;</span></span><br><span class="line"><span class="built_in">test</span> <span class="string">&quot;&quot;</span> &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;yes&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;no&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 中括号测试</span></span><br><span class="line"><span class="comment"># 条件测试中，变量必须加上双引号</span></span><br><span class="line">file=<span class="string">&quot;1.sh&quot;</span></span><br><span class="line">[ -f <span class="string">&quot;<span class="variable">$file</span>&quot;</span> ] &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">echo</span> no</span><br><span class="line">file=<span class="string">&quot;qq.sh&quot;</span></span><br><span class="line">[ -f <span class="string">&quot;<span class="variable">$file</span>&quot;</span> ] &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">echo</span> no</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更严谨的创建文件</span></span><br><span class="line">[ -f a.png ] &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">touch</span> a.png</span><br><span class="line"></span><br><span class="line"><span class="comment"># 双中括号(暂时没啥区别)</span></span><br><span class="line"><span class="comment"># 验证权限</span></span><br><span class="line"><span class="built_in">touch</span> qx</span><br><span class="line"><span class="built_in">chmod</span> 0 qx</span><br><span class="line">[ -r qx ] &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">echo</span> no</span><br><span class="line"><span class="built_in">chmod</span> +r qx</span><br><span class="line">[ -r qx ] &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">echo</span> no</span><br><span class="line"><span class="built_in">chmod</span> +w qx</span><br><span class="line">[ -w qx ] &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">echo</span> no</span><br><span class="line"><span class="comment"># -x 执行同理不测了</span></span><br><span class="line"><span class="comment"># 取反</span></span><br><span class="line">[ ! -f 1.sh ] &amp;&amp; <span class="built_in">echo</span> <span class="built_in">yes</span> || <span class="built_in">echo</span> no</span><br></pre></td></tr></table></figure><p><img src="test1.png" alt="测试" /></p></li><li><p>数值比较(整数)</p><p>在 <code>[]</code> 中，可以用字符 <code>-gt -lt -ge</code> 等，也可以用 <code>&gt; &lt; &gt;=</code> 比较。但需要加上转 义 符号。而 <code>[[]]</code> 中可以不加。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[ 2 &gt; 1 ] &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">echo</span> no</span><br><span class="line">[ 1 &gt; 2 ] &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">echo</span> no</span><br><span class="line">[ 1 \&gt; 2 ] &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">echo</span> no</span><br><span class="line">[ 1 -gt 2 ] &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">echo</span> no</span><br><span class="line">[ 1 -lt 2 ] &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">echo</span> no</span><br><span class="line">[[ 1 &gt; 2 ]] &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">echo</span> no</span><br><span class="line">[[ 1 = 2 ]] &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">echo</span> no</span><br><span class="line">[[ 2 = 2 ]] &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">echo</span> no</span><br><span class="line">[[ 2 != 2 ]] &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">echo</span> no</span><br><span class="line"></span><br><span class="line"><span class="comment"># 变量和 test 同理</span></span><br><span class="line"><span class="built_in">test</span> <span class="string">&quot;<span class="variable">$&#123;a&#125;</span>&quot;</span> -gt <span class="string">&quot;<span class="variable">$&#123;b&#125;</span>&quot;</span> &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">echo</span> no</span><br><span class="line"></span><br><span class="line"><span class="comment"># 逻辑符号处理</span></span><br><span class="line">file1=/etc/hostname</span><br><span class="line">file2=/etc/hosts</span><br><span class="line">[ -f <span class="string">&quot;<span class="variable">$file1</span>&quot;</span> -a -f <span class="string">&quot;<span class="variable">$file2</span>&quot;</span> ] &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">echo</span> no</span><br><span class="line">file2=/tmp/a</span><br><span class="line">[ -f <span class="string">&quot;<span class="variable">$file1</span>&quot;</span> -a -f <span class="string">&quot;<span class="variable">$file2</span>&quot;</span> ] &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">echo</span> no</span><br><span class="line">[ -f <span class="string">&quot;<span class="variable">$file1</span>&quot;</span> -o -f <span class="string">&quot;<span class="variable">$file2</span>&quot;</span> ] &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">echo</span> no</span><br></pre></td></tr></table></figure><p><img src="int.png" alt="数值比较" /><br /><img src="logic.png" alt="逻辑运算" /></p></li><li><p>双中括号<br />一般属于特殊场景的的语法正则匹配，最常用的还是 <code>[]</code></p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># [] 逻辑运算只能用 -a -o</span></span><br><span class="line"><span class="comment"># [[]] 逻辑运算能用 &amp;&amp; ||</span></span><br><span class="line">a=<span class="string">&quot;&quot;</span></span><br><span class="line">b=<span class="string">&quot;yuyu&quot;</span></span><br><span class="line">[[ -n <span class="string">&quot;<span class="variable">$a</span>&quot;</span> &amp;&amp; <span class="string">&quot;<span class="variable">$a</span>&quot;</span> = <span class="string">&quot;<span class="variable">$b</span>&quot;</span> ]] &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">echo</span> no</span><br><span class="line">[[ -n <span class="string">&quot;<span class="variable">$a</span>&quot;</span> || <span class="string">&quot;<span class="variable">$a</span>&quot;</span> = <span class="string">&quot;<span class="variable">$b</span>&quot;</span> ]] &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">echo</span> no</span><br><span class="line">[[ -n <span class="string">&quot;<span class="variable">$a</span>&quot;</span> &amp;&amp; ! <span class="string">&quot;<span class="variable">$a</span>&quot;</span> = <span class="string">&quot;<span class="variable">$b</span>&quot;</span> ]] &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">echo</span> no</span><br><span class="line">a=<span class="string">&quot;yu&quot;</span></span><br><span class="line">[[ -n <span class="string">&quot;<span class="variable">$a</span>&quot;</span> &amp;&amp; ! <span class="string">&quot;<span class="variable">$a</span>&quot;</span> = <span class="string">&quot;<span class="variable">$b</span>&quot;</span> ]] &amp;&amp; <span class="built_in">echo</span> ok || <span class="built_in">echo</span> no</span><br></pre></td></tr></table></figure><p><img src="logic2.png" alt="双中括号逻辑运算" /></p></li></ol><h2 id="实战开发-参数验证"><a class="markdownIt-Anchor" href="#实战开发-参数验证"></a> 实战开发 (参数验证)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Pls input a char:&quot;</span> var1</span><br><span class="line"><span class="comment"># 逻辑条件测试</span></span><br><span class="line">[ <span class="string">&quot;<span class="variable">$var1</span>&quot;</span> -eq <span class="string">&quot;1&quot;</span> ] &amp;&amp; &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$var1</span></span><br><span class="line">  <span class="built_in">exit</span> 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[ <span class="string">&quot;<span class="variable">$var1</span>&quot;</span> -eq <span class="string">&quot;2&quot;</span> ] &amp;&amp; &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$var1</span></span><br><span class="line">  <span class="built_in">exit</span> 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[ <span class="string">&quot;<span class="variable">$var1</span>&quot;</span> != <span class="string">&quot;1&quot;</span> -a <span class="string">&quot;<span class="variable">$var1</span>&quot;</span> != <span class="string">&quot;2&quot;</span> ] &amp;&amp; &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Error, input 1|2 &quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="logic3.png" alt="参数验证" /></p><h2 id="实战开发-提供用户选择执行的脚本"><a class="markdownIt-Anchor" href="#实战开发-提供用户选择执行的脚本"></a> 实战开发 (提供用户选择执行的脚本)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 准备两个脚本</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;echo LAMP is installed !&quot;</span> &gt; lamp.sh</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;echo LNMP is installed !&quot;</span> &gt; lnmp.sh</span><br><span class="line"><span class="built_in">chmod</span> +x *.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 脚本开始</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 找到脚本，优先处理错误的情况</span></span><br><span class="line">path=/home/feng/shell</span><br><span class="line">[ ! -d lamp.sh ] &amp;&amp; <span class="built_in">mkdir</span> -p <span class="variable">$path</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">END</span></span><br><span class="line"><span class="string">    1. [install lamp]</span></span><br><span class="line"><span class="string">    2. [install lnmp]</span></span><br><span class="line"><span class="string">    3. [exit]</span></span><br><span class="line"><span class="string">    Pls input the num you want:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">END</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> num</span><br><span class="line"></span><br><span class="line"><span class="comment"># 限制用户输入的是数字</span></span><br><span class="line"><span class="built_in">expr</span> <span class="variable">$num</span> + 1 &amp;&gt; /dev/null</span><br><span class="line">[ $? -ne 0 ] &amp;&amp; &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Must be 1|2|3&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据变量来逻辑处理</span></span><br><span class="line">[ <span class="string">&quot;<span class="variable">$num</span>&quot;</span> -eq <span class="string">&quot;1&quot;</span> ] &amp;&amp; &#123;</span><br><span class="line">  [ -x <span class="string">&quot;<span class="variable">$path</span>/lamp.sh&quot;</span> ] || &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Can&#x27;t be exec!&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Start install LAMP, wait...&quot;</span></span><br><span class="line">  <span class="built_in">sleep</span> 2</span><br><span class="line">  <span class="variable">$path</span>/lamp.sh</span><br><span class="line">  <span class="built_in">exit</span> $?</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[ <span class="string">&quot;<span class="variable">$num</span>&quot;</span> -eq <span class="string">&quot;2&quot;</span> ] &amp;&amp; &#123;</span><br><span class="line">  [ -x <span class="string">&quot;<span class="variable">$path</span>/lnmp.sh&quot;</span> ] || &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Can&#x27;t be exec!&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Start install LNMP, wait...&quot;</span></span><br><span class="line">  <span class="built_in">sleep</span> 2</span><br><span class="line">  <span class="variable">$path</span>/lnmp.sh</span><br><span class="line">  <span class="built_in">exit</span> $?</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[ <span class="variable">$num</span> -eq <span class="string">&quot;3&quot;</span> ] &amp;&amp; &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;byebye&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 3</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># [[]] 正则匹配</span></span><br><span class="line">[[ ! <span class="string">&quot;<span class="variable">$num</span>&quot;</span> =~ [1-3] ]] &amp;&amp; &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Must be 1-3&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 4</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="logic4.png" alt="用户选择运行" /></p><h2 id="逻辑判断总结"><a class="markdownIt-Anchor" href="#逻辑判断总结"></a> 逻辑判断总结</h2><p>最常见就 <code>[]</code> 配合 <code>-gt -lt</code> 使用</p><table><thead><tr><th>测试表达式符号</th><th>[]</th><th>test</th><th>[[]]</th><th>(())</th></tr></thead><tbody><tr><td>边界是否需要空格</td><td>需要</td><td>需要</td><td>需要</td><td>不需要</td></tr><tr><td>逻辑操作符</td><td>! -a -o</td><td>! -a -o</td><td>! &amp;&amp; ||</td><td>! &amp;&amp; ||</td></tr><tr><td>整数比较</td><td>-eq -gt -lt -ge -le</td><td>-eq -gt -lt -ge -le</td><td>-eq -gt -lt -ge -le 或 = &gt; &lt; &gt;= &lt;=</td><td>= &gt; &lt; &gt;= &lt;=</td></tr><tr><td>字符串比较</td><td>= == !=</td><td>= == !=</td><td>= == !=</td><td>= == !=</td></tr><tr><td>支持通配符</td><td>不支持</td><td>不支持</td><td>支持</td><td>不支持</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 技术栈 </category>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell学习（二）</title>
      <link href="/shell2/"/>
      <url>/shell2/</url>
      
        <content type="html"><![CDATA[<h1 id="shell脚本开发之数值计算"><a class="markdownIt-Anchor" href="#shell脚本开发之数值计算"></a> shell脚本开发之数值计算</h1><p>把复杂的命令执行过程，通过逻辑代码，组成一个脚本文件，再去执行该文件。</p><span id="more"></span><h2 id="shebang"><a class="markdownIt-Anchor" href="#shebang"></a> shebang</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#!/bin/perl</span></span><br><span class="line"><span class="comment">#!/bin/python</span></span><br></pre></td></tr></table></figure><h2 id="脚本执行方式"><a class="markdownIt-Anchor" href="#脚本执行方式"></a> 脚本执行方式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> 1.sh           <span class="comment"># 在当前 shell 执行 sh</span></span><br><span class="line">. 1.sh                <span class="comment"># 起新的 shell 执行 sh</span></span><br><span class="line">bash 1.sh             <span class="comment"># 同上</span></span><br><span class="line">./1.sh                <span class="comment"># 同上</span></span><br></pre></td></tr></table></figure><h2 id="一些常用的变量"><a class="markdownIt-Anchor" href="#一些常用的变量"></a> 一些常用的变量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$UID</span>            <span class="comment"># 当前用户的UID</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$USER</span>           <span class="comment"># 当前用户名</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$HOME</span>           <span class="comment"># 当前用户的家目录</span></span><br></pre></td></tr></table></figure><h2 id="数值计算只支持整数"><a class="markdownIt-Anchor" href="#数值计算只支持整数"></a> 数值计算（只支持整数）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加减乘除</span></span><br><span class="line"><span class="built_in">echo</span> $((<span class="number">1</span>+<span class="number">4</span>))</span><br><span class="line"><span class="built_in">echo</span> $((<span class="number">1</span>-<span class="number">4</span>))</span><br><span class="line"><span class="built_in">echo</span> $((<span class="number">1</span>*<span class="number">4</span>))</span><br><span class="line"><span class="built_in">echo</span> $((<span class="number">1</span>/<span class="number">4</span>))</span><br><span class="line"><span class="built_in">echo</span> $((<span class="number">4</span>/<span class="number">2</span>))</span><br><span class="line"><span class="built_in">echo</span> $((<span class="number">5</span>%<span class="number">2</span>))       <span class="comment"># 取余数</span></span><br><span class="line"><span class="built_in">echo</span> $((<span class="number">5</span>**<span class="number">2</span>))      <span class="comment"># 取平方</span></span><br><span class="line"></span><br><span class="line">num=2</span><br><span class="line"><span class="built_in">echo</span> $((num*<span class="number">2</span>))         <span class="comment"># 变量计算输出</span></span><br><span class="line">((num=num*<span class="number">2</span>))           <span class="comment"># 变量计算赋值</span></span><br><span class="line"><span class="built_in">echo</span> $((num=num*<span class="number">2</span>))     <span class="comment"># 变量输出并赋值</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> $((num++))</span><br><span class="line"><span class="built_in">echo</span> $((++num))</span><br><span class="line"><span class="built_in">echo</span> $((num--))</span><br><span class="line"><span class="built_in">echo</span> $((--num))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="calc1.png" alt="数值计算" /></p><h2 id="判断用户是否输入为数字"><a class="markdownIt-Anchor" href="#判断用户是否输入为数字"></a> 判断用户是否输入为数字</h2><p>知识点：</p><ul><li>函数</li><li>if 判断</li><li>读取变量 read -p</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 判断用户是否输入为数字</span></span><br><span class="line"><span class="function"><span class="title">print_usage</span></span>()&#123;</span><br><span class="line">  <span class="built_in">printf</span> <span class="string">&quot;Please enter a int\n&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Please input your number:&quot;</span> firstnum</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;`echo <span class="variable">$firstnum</span>|sed &#x27;s/[0-9]//g&#x27;`&quot;</span> ]</span><br><span class="line">  <span class="keyword">then</span></span><br><span class="line">    print_usage</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Please input your operator:&quot;</span> op</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;op&#125;</span>&quot;</span> != <span class="string">&quot;+&quot;</span> ] &amp;&amp; [ <span class="string">&quot;<span class="variable">$&#123;op&#125;</span>&quot;</span> != <span class="string">&quot;-&quot;</span> ] &amp;&amp; [ <span class="string">&quot;<span class="variable">$&#123;op&#125;</span>&quot;</span> != <span class="string">&quot;*&quot;</span> ] &amp;&amp; [ <span class="string">&quot;<span class="variable">$&#123;op&#125;</span>&quot;</span> != <span class="string">&quot;/&quot;</span> ]</span><br><span class="line">  <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Only +|-|*|/&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Please input your second number:&quot;</span> secondnum</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;`echo <span class="variable">$secondnum</span>|sed &#x27;s/[0-9]//g&#x27;`&quot;</span> ]</span><br><span class="line">  <span class="keyword">then</span></span><br><span class="line">    print_usage</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> $(($firstnum$op<span class="variable">$secondnum</span>))</span><br></pre></td></tr></table></figure><p><img src="calc2.png" alt="数值计算" /></p><h2 id="let"><a class="markdownIt-Anchor" href="#let"></a> let</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">num=8</span><br><span class="line"><span class="comment"># let 计算不用加 $ 符号</span></span><br><span class="line"><span class="built_in">let</span> num=num/2      <span class="comment"># num=4</span></span><br></pre></td></tr></table></figure><h2 id="expr"><a class="markdownIt-Anchor" href="#expr"></a> expr</h2><p>expr 必须是传参方式，空格传参，有特殊含义就不行，不太好用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">expr</span> 2+4</span><br><span class="line"><span class="built_in">expr</span> 2 + 4</span><br><span class="line"><span class="built_in">expr</span> 2 - 4</span><br><span class="line"><span class="built_in">expr</span> 2 * 4</span><br><span class="line"><span class="built_in">expr</span> 2 \* 4</span><br><span class="line"><span class="built_in">expr</span> 2 \/ 4</span><br><span class="line"><span class="built_in">expr</span> 4 \/ 2</span><br><span class="line"><span class="built_in">expr</span> 3 % 2</span><br><span class="line"><span class="built_in">expr</span> length 1234567</span><br></pre></td></tr></table></figure><p><img src="expr.png" alt="expr" /></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 正则匹配</span></span><br><span class="line"><span class="built_in">expr</span> match 234.jpg23.png <span class="string">&quot;.*\.png&quot;</span></span><br><span class="line"><span class="built_in">expr</span> match 234.jpg23.png <span class="string">&quot;.*\.jpg&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">expr</span> 234.jpg23.png <span class="string">&quot;:&quot;</span> <span class="string">&quot;.*\.png&quot;</span></span><br><span class="line"><span class="built_in">expr</span> 234.jpg23.png <span class="string">&quot;:&quot;</span> <span class="string">&quot;.*\.jpg&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># substr</span></span><br><span class="line"><span class="built_in">expr</span> substr 12345678 4 2</span><br><span class="line"><span class="built_in">expr</span> substr 12345678 1 2</span><br><span class="line"></span><br><span class="line"><span class="comment"># index</span></span><br><span class="line"><span class="built_in">expr</span> index 12345678abc a</span><br><span class="line"><span class="built_in">expr</span> index 12345678abc 4</span><br><span class="line"><span class="built_in">expr</span> index 12345678abc d</span><br></pre></td></tr></table></figure><p><img src="expr1.png" alt="expr" /></p><h2 id="bc-计算器"><a class="markdownIt-Anchor" href="#bc-计算器"></a> bc 计算器</h2><p>有交互式计算，支持小数计算。开发主要用非交互式的.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1.4*1.5&quot;</span> | bc</span><br></pre></td></tr></table></figure><p><img src="bc.png" alt="bc" /></p><p>计算 1 到 100 之和</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> &#123;1..100&#125; | <span class="built_in">tr</span> <span class="string">&quot; &quot;</span> <span class="string">&quot;+&quot;</span> | bc</span><br><span class="line"><span class="built_in">seq</span> -s <span class="string">&quot;+&quot;</span> 100 | bc</span><br><span class="line"><span class="built_in">echo</span> $((`seq -s &quot;+&quot; <span class="number">100</span>`))</span><br><span class="line"><span class="built_in">expr</span> `<span class="built_in">seq</span> -s <span class="string">&quot; + &quot;</span> 100`</span><br><span class="line"><span class="built_in">seq</span> -s <span class="string">&quot; + &quot;</span> 100 | xargs <span class="built_in">expr</span></span><br></pre></td></tr></table></figure><h2 id="awk-计算"><a class="markdownIt-Anchor" href="#awk-计算"></a> awk 计算</h2><p>awk 也支持小数计算</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1.4 1.6&quot;</span> | awk <span class="string">&#x27;&#123;print $1*$2&#125;&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;3.2 2.2&quot;</span> | awk <span class="string">&#x27;&#123;print $1/$2&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="中括号计算"><a class="markdownIt-Anchor" href="#中括号计算"></a> 中括号计算</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> $[num+2]         <span class="comment"># 输出</span></span><br><span class="line">num=$[num+2]          <span class="comment"># 赋值</span></span><br></pre></td></tr></table></figure><p><img src="mid.png" alt="中括号计算" /></p>]]></content>
      
      
      <categories>
          
          <category> 技术栈 </category>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell学习（一）</title>
      <link href="/shell1/"/>
      <url>/shell1/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>不容易有点学习时间，得抓紧补齐技术空缺了。打算快速肝完 <code>shell</code> 这块基础的。</p><span id="more"></span><h1 id="shell-基础"><a class="markdownIt-Anchor" href="#shell-基础"></a> Shell 基础</h1><h2 id="history"><a class="markdownIt-Anchor" href="#history"></a> history</h2><p>history 调用历史文件。bash一般在 <code>~/.bash_history</code> 文件中。zsh一般在 <code>~/.zsh_history</code> 文件中。以此类推。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">history</span> -c        <span class="comment"># 清空历史（不会删除文件）</span></span><br><span class="line"><span class="built_in">history</span> -r        <span class="comment"># 恢复历史</span></span><br></pre></td></tr></table></figure><h2 id="进程环境变量-参数相关"><a class="markdownIt-Anchor" href="#进程环境变量-参数相关"></a> 进程，环境变量、参数相关</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">!!                <span class="comment"># 执行上次命令</span></span><br><span class="line">pstree            <span class="comment"># 查看进程树</span></span><br><span class="line">ps -ef --forest   <span class="comment"># 查看进程(树形)</span></span><br><span class="line"></span><br><span class="line">bash              <span class="comment"># 开启子shell</span></span><br><span class="line"><span class="built_in">source</span> xxx.sh     <span class="comment"># 在当前shell执行命令</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span>               <span class="comment"># 输出所有变量</span></span><br><span class="line"><span class="built_in">env</span>               <span class="comment"># 全局变量</span></span><br><span class="line"><span class="built_in">declare</span>           <span class="comment"># 所有变量</span></span><br><span class="line"><span class="built_in">export</span>            <span class="comment"># 设置和显示值</span></span><br><span class="line"><span class="built_in">unset</span>             <span class="comment"># 取消环境变量</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$0</span>                <span class="comment"># 第0个参数，执行的脚本路径</span></span><br><span class="line"><span class="variable">$1</span>                <span class="comment"># 第1个参数，以此类推</span></span><br><span class="line"><span class="variable">$#</span>                <span class="comment"># 获取参数总数</span></span><br><span class="line">$*/<span class="variable">$@</span>             <span class="comment"># 所有参数</span></span><br><span class="line"></span><br><span class="line">$?                <span class="comment"># 上一次执行状态变量，0代表成功</span></span><br><span class="line">$$                <span class="comment"># 当前shell进程号</span></span><br><span class="line">$!                <span class="comment"># 上一次后台进程PID</span></span><br><span class="line"><span class="variable">$_</span>                <span class="comment"># 返回上个命令最后一个参数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 同时执行多个命令，可能只有一个进程号</span></span><br><span class="line"><span class="built_in">eval</span> <span class="built_in">mkdir</span> a;<span class="built_in">cd</span> a;<span class="built_in">mkdir</span> b;<span class="built_in">cd</span> b;<span class="built_in">mkdir</span> c;<span class="built_in">cd</span> c</span><br><span class="line"><span class="comment"># 执行完退出当前bash</span></span><br><span class="line"><span class="built_in">exec</span> <span class="built_in">echo</span> <span class="string">&quot;exit&quot;</span></span><br></pre></td></tr></table></figure><p><img src="ps.png" alt="ps" /></p><h2 id="输出相关"><a class="markdownIt-Anchor" href="#输出相关"></a> 输出相关</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 双引号解析字符串，单引号不解析直接输出</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;123\n&quot;</span>   <span class="comment"># 解析字符串的特殊符号</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;123&quot;</span>     <span class="comment"># 不换行输出</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;123\n&quot;</span>    <span class="comment"># 解析字符串的特殊符号</span></span><br></pre></td></tr></table></figure><p>常见解析符号：</p><ul><li>\n 换行</li><li>\r 回车</li><li>\t 制表符</li><li>\b 退格</li></ul><h2 id="字符串操作"><a class="markdownIt-Anchor" href="#字符串操作"></a> 字符串操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">name=bashbash123</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name&#125;</span>                <span class="comment"># 不处理直接输出</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#name&#125;</span>               <span class="comment"># 输出值长度</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name:start:length&#125;</span>   <span class="comment"># substring</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name#str&#125;</span>            <span class="comment"># 删除name中str第一次出现(最短匹配正则)</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name##str&#125;</span>           <span class="comment"># 删除name(最长匹配正则)</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name%str&#125;</span>            <span class="comment"># 删除name中str最后出现(最短匹配正则)</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name%%str&#125;</span>           <span class="comment"># 删除name(最长匹配正则)</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name/a/b&#125;</span>            <span class="comment"># 当个替换</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name//a/b&#125;</span>           <span class="comment"># 全部替换</span></span><br></pre></td></tr></table></figure><p><img src="string1.png" alt="字符串" /></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断赋值</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name:-word&#125;</span>          <span class="comment"># 如果为空，输出word</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name:=word&#125;</span>          <span class="comment"># 如果为空，输出word，且赋值给name</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name:?word&#125;</span>          <span class="comment"># 如果为空，输出到stderr</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name:+word&#125;</span>          <span class="comment"># 如果为空，什么都不做，否则返回word</span></span><br></pre></td></tr></table></figure><p><img src="string2.png" alt="字符串" /></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计变量长度方法</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#name&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$name</span> | <span class="built_in">wc</span> -L</span><br><span class="line"><span class="built_in">expr</span> length <span class="string">&quot;<span class="variable">$&#123;name&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$name</span> | awk <span class="string">&#x27;&#123;print length($0)&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 借助变量替换，实现批量文件重命名</span></span><br><span class="line"><span class="built_in">touch</span> a_&#123;1..5&#125;_finished.jpg</span><br><span class="line"><span class="built_in">touch</span> a_&#123;1..5&#125;_finished.png</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `<span class="built_in">ls</span>`;<span class="keyword">do</span> <span class="built_in">mv</span> <span class="variable">$i</span> <span class="variable">$&#123;i//_finished/&#125;</span>;<span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><img src="string3.png" alt="字符串" /></p><h2 id="序列"><a class="markdownIt-Anchor" href="#序列"></a> 序列</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">seq</span> 5               <span class="comment"># 1开始5结束</span></span><br><span class="line"><span class="built_in">seq</span> 2 6             <span class="comment"># 2开始6结束</span></span><br><span class="line"><span class="built_in">seq</span> 2 2 7           <span class="comment"># 2开始，步长2，小于等于7结束</span></span><br><span class="line"><span class="built_in">seq</span> -s <span class="string">&quot;:&quot;</span> 2 2 7    <span class="comment"># 2开始，步长2，小于等于7结束，分隔符为：</span></span><br></pre></td></tr></table></figure><p><img src="seq.png" alt="序列" /></p><h2 id="进程和线程"><a class="markdownIt-Anchor" href="#进程和线程"></a> 进程和线程</h2><p><code>shell</code> 和 <code>bash</code> 都是独立的进程或者说是子进程。除此之外，<code>bash</code> 还有多线程。<br />以下自己体会~~<br /><img src="subshell.png" alt="subshell" /></p><h2 id="内置命令和外置命令"><a class="markdownIt-Anchor" href="#内置命令和外置命令"></a> 内置命令和外置命令</h2><p>内置命令：bash 在编译的时候，预设的命令。在启动 <code>bash</code> 后就已经加载在内存中。<br />外置命令：存储在磁盘中的（脚本文件，二进制文件等）通过环境变量执行的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有内置命令</span></span><br><span class="line">compgen -b</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看该命令是不是内建的</span></span><br><span class="line"><span class="built_in">type</span> time</span><br><span class="line"><span class="built_in">type</span> ps</span><br><span class="line"><span class="built_in">type</span> <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><p><img src="buildin.png" alt="内建命令" /></p><h2 id="特殊符号总结"><a class="markdownIt-Anchor" href="#特殊符号总结"></a> 特殊符号总结</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;name&#125;</span>         <span class="comment"># 取出变量</span></span><br><span class="line">$(cmd)          <span class="comment"># 在括号中执行命令且拿到命令的结果</span></span><br><span class="line">`cmd`           <span class="comment"># 同上</span></span><br><span class="line">(cmd)           <span class="comment"># 子shell多线程 $BASH_SUBSHELL</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术栈 </category>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spark 深入学习(四)</title>
      <link href="/spark4/"/>
      <url>/spark4/</url>
      
        <content type="html"><![CDATA[<h1 id="开始"><a class="markdownIt-Anchor" href="#开始"></a> 开始</h1><p>docker run -tid --name hadoop01 --privileged=true centos:7.9.2009 /usr/sbin/init</p>]]></content>
      
      
      <categories>
          
          <category> 技术栈 </category>
          
          <category> 大数据 </category>
          
          <category> Spark </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> Spark </tag>
            
            <tag> 数据挖掘 </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>旧项目整理</title>
      <link href="/projectsCollect/"/>
      <url>/projectsCollect/</url>
      
        <content type="html"><![CDATA[<h1 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h1><blockquote><p>最近的一段时间，用了5年的联想笔记本经常出现掉网卡现象。估计快要寿终正寝了。在此之前要及时备份出里面的资料。里面有5年间（大二到现在从学校到工作间不同的项目，各种资料等）借此网易期间的机会，打算迁移项目文件到台式机器上。一方面是台式机性能好，可以跑得快。二是回顾下以前做的项目。</p></blockquote><span id="more"></span><h1 id="项目"><a class="markdownIt-Anchor" href="#项目"></a> 项目</h1><h2 id="algorithm"><a class="markdownIt-Anchor" href="#algorithm"></a> algorithm</h2><p>一个用来刷算法的项目。以前刷算法是为了比赛和考试的。现在工作后，只是用来保持编程手感和保持 <code>C++</code> 语法的感觉。总结来说就是，啥时感觉自己脑子转不动了，就刷刷题。保持脑袋清醒的一个项目。</p><p>项目入口：<a href="https://github.com/asdf2014/algorithm">https://github.com/asdf2014/algorithm</a></p><h2 id=""><a class="markdownIt-Anchor" href="#"></a> </h2>]]></content>
      
      
      <categories>
          
          <category> 技术栈 </category>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统(一)</title>
      <link href="/os1/"/>
      <url>/os1/</url>
      
        <content type="html"><![CDATA[<h1 id="开始"><a class="markdownIt-Anchor" href="#开始"></a> 开始</h1><blockquote><p>事情从某一个深夜刷 Bilibili 说起。那天晚上，想起过年从家里带上来的 1GB SD 卡，用来完成 K210 系列的最后一课：录音并保存文件到 SD 卡和播放录音的功能，于是将最后一课的代码编译，烧录一气呵成。然后运行发现，sd card init fail…</p></blockquote><span id="more"></span><p>一开始怀疑是 SD 卡文件格式有问题，然后格式化了好几次，分别都尝试了<code>fat</code>, <code>fat32</code>, <code>ntfs</code>, <code>exfat</code>，还是不行。迫不得已，跑去看源码，发现只支持<code>fat32</code>。于是重新又格式化了一遍，结果还是失败。都不能挂载到开发板里面。无奈只能查查其他开发板有没有这种问题，结果都是和容量有关（1GB、2GB、4GB不行，16GB可以）。</p><p>这根本不科学。。。我只坚信能不能识别 SD 卡和文件格式有关要么和卡的工作原理或者协议有关。和容量没半毛钱关系。但又不想深究挂载 SD 卡的原理和识别卡的原理。结果就是放弃。。。</p><p>故事到这，原本就该结束了。但是，我还是不甘心放下，躺在被窝里在 B 站搜着 k210. 直到看见一个视频。。。<a href="https://www.bilibili.com/video/BV1nr4y1r7hw">用稚晖君推荐的K210开发板启动rCore操作系统吧</a>。</p><p>WOC，WOC。这算是我的一个埋在我心中几年的想法啊！！！刚刚买到手中时，就刷到一个文章，有西数大佬将 risc-v 适配 linux 的驱动提交到 linux 内核的仓库中，意味着 linux 系统可以安装在 k210 上啊。不出所料，文章就提到有人已经将 linux 0.11 迁移到 k210 上面了。于是我才萌生在这块开发板中搞个简单系统玩玩。</p><blockquote><p>[后记] 看的是那种新闻文章，一开始并不知道是谁，后面发现好像是国人 Li Zhirui。</p></blockquote><ol><li>他用的是 <code>Sipeed Maix</code> 开发板 <a href="https://en.bbs.sipeed.com/t/topic/1798">K210 run linux 0.11</a>，<a href="https://github.com/yuan-xy/Linux-0.11/">源码在这</a></li><li>后面西数的工程师 Damien Le Moal 又移植了 <a href="https://lpc.events/event/4/contributions/386/attachments/298/502/RISC-V-NOMMU-Linux-Plumbers-2019.pdf">Linux 5.1.0</a></li><li>后面陆续有人移植了 <a href="https://en.bbs.sipeed.com/t/topic/1863/2">Linux 5.6.0</a>, <a href="https://dl.sipeed.com/shareURL/MAIX/K210_Linux/Firmware">镜像在这</a> 尝试了一下，<code>Maix</code> 的镜像，跑在 <code>K210</code> 好像有bug。</li><li><a href="https://github.com/damien-lemoal/riscv64-nommu-buildroot">Linux 5.8.0 源码</a>，需要自己编译</li></ol><p>第一个想法就是 linux 系统。不过 linux 系统还是太庞大了。所以看完视频后，就打算跟着 up 学操作系统，顺便还学了<code>rCore</code>, <code>Rust</code>。顺便还实现了自己的想法，就非常的 nice。于是，这个系列的坑，开始了~ （工作繁忙，随时搁置 or 放弃hhhh）</p><h1 id="想法"><a class="markdownIt-Anchor" href="#想法"></a> 想法</h1><blockquote><p>rCore 需要 Ubuntu 开发环境，刚好我又有云服务器。其实 Rust 在 Windows 也可以的，就怕系统差异会导致其他问题，还是尽量保持一致吧~</p></blockquote><p>反正代码不用开发，直接复制就行，就在 Ubuntu 里面搞算了，编译出来后，再拿到本地烧录到开发板上面跑。</p><h1 id="环境搭建准备"><a class="markdownIt-Anchor" href="#环境搭建准备"></a> 环境搭建准备</h1><h2 id="qemu"><a class="markdownIt-Anchor" href="#qemu"></a> Qemu:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">apt-get install pkg-config</span><br><span class="line">apt-get install libglib2.0-dev</span><br><span class="line">apt-get install libpixman-1-dev</span><br><span class="line"><span class="comment"># 下载源码包 （如果下载速度过慢可以把地址替换为我们提供的地址：http://42.194.184.212:5212/#/s/4dHZ）</span></span><br><span class="line">wget https://download.qemu.org/qemu-5.0.0.tar.xz</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar xvJf qemu-5.0.0.tar.xz</span><br><span class="line"><span class="comment"># 编译安装并配置 RISC-V 支持</span></span><br><span class="line"><span class="built_in">cd</span> qemu-5.0.0</span><br><span class="line">./configure --target-list=riscv32-softmmu,riscv64-softmmu</span><br><span class="line">make -j$(<span class="built_in">nproc</span>)</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><h2 id="rust"><a class="markdownIt-Anchor" href="#rust"></a> Rust</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> RUSTUP_DIST_SERVER=https://mirrors.ustc.edu.cn/rust-static</span><br><span class="line"><span class="built_in">export</span> RUSTUP_UPDATE_ROOT=https://mirrors.ustc.edu.cn/rust-static/rustup</span><br><span class="line">curl https://sh.rustup.rs -sSf | sh</span><br><span class="line"><span class="comment"># 直接回车安装，然后环境变量</span></span><br><span class="line"><span class="built_in">source</span> <span class="variable">$HOME</span>/.cargo/env</span><br><span class="line"><span class="comment"># 工具链</span></span><br><span class="line">rustc --version</span><br><span class="line"><span class="comment"># 修改镜像源 ~/.cargo/config</span></span><br><span class="line">[source.crates-io]</span><br><span class="line">registry = <span class="string">&quot;https://github.com/rust-lang/crates.io-index&quot;</span></span><br><span class="line">replace-with = <span class="string">&#x27;ustc&#x27;</span></span><br><span class="line">[source.ustc]</span><br><span class="line">registry = <span class="string">&quot;git://mirrors.ustc.edu.cn/crates.io-index&quot;</span></span><br></pre></td></tr></table></figure><h1 id="开始-2"><a class="markdownIt-Anchor" href="#开始-2"></a> 开始</h1><h2 id="rcore"><a class="markdownIt-Anchor" href="#rcore"></a> rCore</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 克隆项目仓库</span><br><span class="line">git clone https://gitee.com/mirrors/rCore.git</span><br><span class="line">git clone https://github.com/rcore-os/rCore-Tutorial</span><br></pre></td></tr></table></figure><p>然后就按照教程</p><ul><li><a href="https://rcore-os.github.io/rCore_tutorial_doc/">rCore_tutorial_doc</a></li><li><a href="https://rcore-os.github.io/rCore-Tutorial-deploy/">rCore_tutorial_deploy</a></li></ul><p>这俩文档，不能说类似。。。只能说一模一样。仔细看吧，又有些许不一样。而且这期间，我两个文档混着看，导致踩了不少 <code>Rust cargo</code> 版本、环境、编译工具链的坑。</p><p>一直走到了 <strong>使用QEMU运行内核</strong> 打印 “ok”，然而此时比没有意识到有啥问题。。。</p><p>在这之前，都是用的教程的 qemu 模拟运行，既然能开始引导到内核执行 <code>Rust_main</code> 了，那肯定得去 k210 跑跑。</p><p>make build 生成镜像bin，烧录进 k210 一气呵成。然后失败。。。</p><hr /><p>中间过了好久，期间还去看了两集 mit6s.081，最终以啃不动生肉而放弃QAQ</p><hr /><p>此时，才懵懵懂懂中，clone 下了 rCore-Tutorial-v3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 克隆项目仓库</span><br><span class="line">git clone https://github.com/rcore-os/rCore-Tutorial-v3.git</span><br></pre></td></tr></table></figure><p>此时，项目的 <code>bootloader</code> 切换为 <code>rustsbi</code>。Rust 的依赖和包版本更新到了2022年的版本。才消除了一些不兼容的警告如：<code>llvm_asm</code>、<code>asm</code>。又是一通 make build 后，生成镜像烧录，成功！！！激动的心，颤抖的手 ٩(๑&gt;◡&lt;๑)۶</p><p><img src="helloword.png" alt="第一次在K210上运行操作系统" /></p><p>心情平静一点点后，才发现，之前用的是 <code>OpenSBI</code> + <code>QEMU</code>，现在变成 <code>RustSBI</code> + <code>k210</code>。接下来，花了一堆时间，开始搞清楚两个 <code>SBI</code> 关系。</p><hr /><p>中间过了好久，期间尝试了好多东西</p><ol><li><code>RustSBI</code> + <code>QEMU</code> 成功</li><li><code>os.bin</code> + <code>k210</code> 失败，没有 bootloader</li><li><code>qemu5.0.0/pc-bios/opensbi-riscv64-virt-fw_jump.bin</code> + <code>os.bin</code> + <code>QEMU</code> 成功</li><li><code>qemu5.0.0/pc-bios/opensbi-riscv64-virt-fw_jump.bin</code> + <code>os.bin</code> + <code>k210</code> 失败</li><li>下载仓库 <code>opensbi</code> 自己编译成功（这里还被riscv编译链折腾了好久） + <code>os.bin</code> + <code>k210</code> 运行失败</li><li>下载仓库 <code>opensbi</code> 的 release + <code>os.bin</code> + <code>k210</code> 运行失败（应该是需要魔改或者降低到 0.3 才能成功。）</li><li>用 <code>hexdump</code> 对比 <code>rustsbi</code> 和 <code>opensbi</code> 的二进制 bin 文件，没有啥发现。</li><li>查看 rCore-Tutorial-v3 的Makeflie代码，搞清楚了 <code>RustSBI</code> 和 <code>os.bin</code> 的关系。用 <code>hexdump</code> 查看合并后的 bin。（巨大的进展）</li><li>下载仓库 <code>rustsbi</code>, 忘了有没有编译运行了</li><li>下载仓库 <code>rustsbi-k210</code>, 发现更新了 0.2.0 版本，尝试编译，编译成功。</li><li>用 <code>rustsbi-k210-v2</code> + <code>os.bin</code> + <code>k210</code> 成功！</li></ol><hr /><p>终于可以真正开始了。</p><h1 id="真正的开始"><a class="markdownIt-Anchor" href="#真正的开始"></a> 真正的开始</h1><p>在前面胡乱尝试的差不多后，终于从头开始阅读 v3 文档。补充了好多基础</p><ol><li>ABI -&gt; Application Binary Interface 和 API<br /><img src="os.png" alt="盗图" /></li><li>异常控制流（指令跳转）<ol><li>中断（时钟中断、控制台中断等。外设中断）</li><li>异常（应用级别的程序异常）</li><li>陷入（系统调用 syscall, retn）</li></ol></li><li>进程上下文切换（CPU时间片）、内存地址空间映射</li><li>程序内存布局和编译链接过程（符号替换，内存地址布局重置，符号重定位）</li><li>Qemu 启动流程（）<ol><li>0x1000</li><li>0x80000000 (bootloader, bios)</li><li>0x80200000 (os)<br /><img src="MemoryLayout.png" alt="内存分布" /><br /><img src="link-sections.png" alt="链接器链接sections" /></li></ol></li><li>被调用者保存(Callee-Saved) 寄存器、调用者保存(Caller-Saved) 寄存器，保存在栈中。<code>sp</code> 是一个被调用者保存寄存器。<br /><img src="CallStack.png" alt="调用栈" /><br /><img src="StackFrame.png" alt="栈帧分布" /></li></ol><h2 id="照着教程一步步完成了"><a class="markdownIt-Anchor" href="#照着教程一步步完成了"></a> 照着教程一步步完成了</h2><p>这里搞清楚了 <code>Makefile</code> 文件的编写，方便了一大坨，后面只需要修改代码，然后<code>make run</code>，把镜像拉出来烧录就OK了。主要分为几步：</p><ol><li>去掉有关 <code>QEMU</code> 的命令，永久使用真机 <code>k210</code></li><li>调为永久 release</li><li>加了点输出信息，能更加分清不同阶段(make run env clean build kernel merge)做的事情</li><li>其中merge 阶段负责 <code>dd</code>，这样方便多了。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> os/target/riscv64imac-unknown-none-elf/debug/kernel.bin .</span><br><span class="line"><span class="built_in">dd</span> <span class="keyword">if</span>=kernel.bin of=rustsbi-k210-v2.bin bs=131072 seek=1</span><br></pre></td></tr></table></figure><p><img src="make.png" alt="完美" /></p><h2 id="输出和颜色"><a class="markdownIt-Anchor" href="#输出和颜色"></a> 输出和颜色</h2><p>最后就简单啦~ 调用SBI打印字符串。没啥难度。</p><p>后面有点意思的是自己摸索出打印日志，就还挺OK！</p><p>贴个成功的图，第一章完结</p><p><img src="over.png" alt="OVER" /></p>]]></content>
      
      
      <categories>
          
          <category> 技术栈 </category>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作系统 </tag>
            
            <tag> Rust </tag>
            
            <tag> K210 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于元宇宙的一点点猜想</title>
      <link href="/LittleMind2/"/>
      <url>/LittleMind2/</url>
      
        <content type="html"><![CDATA[<p>最近元宇宙火了起来，主要是几个互联网公司的几个布局大操作。然后媒体疯狂炒热度，再加上前些年很火的人工智能、区块链、量子力学、5G通信技术、VR/AR</p><p>只是一下想法罢了，思维过于散乱~</p><span id="more"></span><p>（没有虚和不虚，有没有物体，这个只是人的主观，一切有质量的物体都可以转化成能量，然后辐射和扩散，最终熵增达到平衡）</p><ul><li>空宇宙（奇异点？黑洞？）</li><li>平面宇宙</li><li>，</li><li>电子宇宙：互联网为这个宇宙的低级层次（实现信息构建和传递），AR/VR游戏为雏形（“人”和物质的模拟），元宇宙为初代版本，这个版本只有宇宙管理员（开发者）自己添加“人”账号和有关“人”的一些设定。人就可以在这一层虚拟的环境中开音乐会，开会。冒险(游戏)等一些不太依靠人与人之间肢体的行为。而人，在维度宇宙中，要跨越到电子宇宙，要戴上设备。但如果能将人的精神（意识）上传到宇宙中，作为每个“人”账号的属性，那么，即便是脱下设备，那个人，可以在电子宇宙中思考和“生活”（医学层面的永生和理想化中的共产主义）。唯一区别是，少了肢体的体验，少了“作为人的部分属性”，比如，拿东西，踢足球、生儿育女。所以可以看做是不完整的宇宙，完善版本应该包含整个宇宙生态，意思是电子宇宙在元宇宙基础上增加的类似“原子”“电子”等基本宇宙元素，然后设定好宇宙的运行规律和结合规则，类似于物理学。而“动物”、“植物”、“沙子”、“物品”等其他高级物质可以随宇宙运行自动创建。这时，人就可以有自己的形象（虚拟的实体），这个形象和传统的形象不同，可以是昆虫模型，可以是人模型，可以是三头六臂…而且这些头和臂是有一定意义的（有用的，可操纵的，对个体生存有利的），）</li><li>量子宇宙（电子宇宙的进化版，当以电子计算机为载体的宇宙进化到无法承载更多物体时，更换成量子为载体，计算速度更快，“人”个体思考更快）</li><li>（质量物质能量）宇宙，现在人类所处的宇宙</li><li>精神宇宙（人类，动物的想法，意识，无实质物体，也可能没有这一层，意识只是一段“代码”）</li><li>维度宇宙</li></ul><p>代码创建一个空间，创建一个人，给他几个属性（高度，长度），然后可以自由活动。（简单宇宙）<br />属性能不能让他自己创建呢？</p><p>通过模仿现实宇宙来实现自己的宇宙，模仿到一定程度</p><p>创建、暂停、停止、销毁宇宙（虚拟机？）</p><p>宇宙桥 （连接同位面宇宙，更高层宇宙/更底层宇宙），个体会被压缩？二向箔炮？</p><p>计算机科学只是对现有物理规则的模仿和改造</p><p>同位面宇宙，高层宇宙，低层宇宙，fgo设定，崩坏3世界泡</p>]]></content>
      
      
      <categories>
          
          <category> 小作文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> develop </tag>
            
            <tag> Metaverse </tag>
            
            <tag> VR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>消极的感想</title>
      <link href="/LittleMind/"/>
      <url>/LittleMind/</url>
      
        <content type="html"><![CDATA[<h1 id="感觉人要废了"><a class="markdownIt-Anchor" href="#感觉人要废了"></a> 感觉人要废了</h1><p>现在是凌晨 <code>01:18</code> 分，趁着今天还没有睡觉，赶紧逼自己更新一下博客，因为再不更新，我感觉自己就要继续拖到明年了。。。</p><p>想想好久都没有更新博客了吧，距离上一次，还是3月。转眼见，一拖就是大半年。</p><span id="more"></span><h2 id="目标有点多啊难实现啊"><a class="markdownIt-Anchor" href="#目标有点多啊难实现啊"></a> 目标有点多啊，难实现啊</h2><ul><li>自己年初定的三个大目标，也是只有年初完成了一个，看源码计划压根没开始，看技术书根本也没开始。</li><li>然后看看自己的计划，Leecode项目也落下了，还有博客的TODO，博客挖下的系列坑，也没填。。。</li><li>貌似还有自己在百度云下载的一系列算法课、人工智能课、大数据组件课、看Cloudera官方文档，也没有做。还想着，将公众号的文章重新全部验证一遍写到博客的，也没搞。</li><li>之前还计划着扫清SpringBoot、微服务、docker、和大数据Spark和Flink的一切知识盲点的，然后，过去半年，什么成就也没有达成。</li><li>还有，收集之前做过的一些项目啊，代码片段啊，什么的做一个大总结，也还是没能。还有一个计划是将新环境的各个系统的联动，以及管理方式总结统计一下。</li></ul><h2 id="为什么一个也没做呢"><a class="markdownIt-Anchor" href="#为什么一个也没做呢"></a> 为什么一个也没做呢？</h2><ul><li>年初换了一个环境，刚来到，所以比较不稳定，所以想先稳定下来。然后，等熟悉和适应相对固定的生活节奏在继续。</li><li>等缓过来之后，已经是七八月了。想着准备继续博客计划，但是还是经不住诱惑，去B站看视频，看鬼畜，打游戏。直到现在为止，现在还是在强制抑制我想打游戏的欲望。。。我还是想赶紧打完这篇文章，然后快点发布完成任务，然后能赶上4点前做完每日任务。。。</li><li>说白了，还是意志力不够坚定吧。或者是年初时，想要变优秀的心理，逐渐被每天的劳累给一点点消磨的，不那么积极了，不那么向上了。或许也只有，慢慢写写博客才能重燃这份心吧！</li><li>这篇小作文其实早就在九月起草了，十月还想着，再等等。猛的一发现，项目经理都开始总结年度OKR了，我呢？我自己的OKR啥也没动。有点懊悔和恼怒。</li><li>特别是今天投产很晚才回来，在自己最拿手的OpenLDAP上面居然翻车了。。。还有nginx代理CSP问题也没搞定，明明是自己很熟练的。。。</li><li>前几天，人家还在公司做了演讲，自己也能有这个实力的，缺因为懒惰，才被边缘化成这个地步，害。</li></ul><h2 id="最近有点飘"><a class="markdownIt-Anchor" href="#最近有点飘"></a> 最近有点飘</h2><ul><li>总之，下半年来，心态不是很好吧。不稳定的加班，可能会造成的不确定性因素太多了，有环境的原因，有意志力不坚定的原因，还有。。。</li><li>感觉最近有点浮躁吧，眼高手低了，可能是新环境接触到的新东西，见识多了，就认为自己很厉害，其实也就是自己的广度知识面增加了，但是深度跟不上。</li><li>感觉什么东西都会了， 其实也就草草了解个大概，知其然不知其所以然。所以很多时候面对一半熟悉的东西的时候，会产生恐慌的心理。</li></ul><h2 id="看看怎么补救吧"><a class="markdownIt-Anchor" href="#看看怎么补救吧"></a> 看看怎么补救吧</h2><ol><li>先博客写起来，优先填一下以前的博客坑。</li><li>还是得计划先将windows的hadoop开源搞起来。</li><li>在这基础上，有空还是去搞搞leetcode</li><li>出道第二年，要将技术80%搞定，第三年要么偏向架构师方向，要么偏向PMC管理方向了，不那么纯粹做技术了。所以不能再拖一年了。主攻大数据，可偏AI方向，Web方向，安全方向，芯片/单片机方向。</li><li>还是得积极乐观一点，多吃点水果，多运动，有学习的输入和文档的输出，才能更好的把握未来。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 小作文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> develop </tag>
            
            <tag> hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CDH 全面扫盲(一)</title>
      <link href="/cdh1/"/>
      <url>/cdh1/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>CDH搭建涉及到太多东西，有关硬件软件、也有关系统。之前总结时写了一份，自以为是较为完整的。但是后来发现，还是缺漏了好多东西，也有好多知识是点到为止，知其然不知其所以然，所以此次打算在先前的基础上补齐缺漏的知识点，然后争取一次性全部搞懂，避免下次花时间再复习<code>N</code>遍。</p><span id="more"></span><h1 id="准备工作"><a class="markdownIt-Anchor" href="#准备工作"></a> 准备工作</h1><h2 id="系统版本"><a class="markdownIt-Anchor" href="#系统版本"></a> 系统版本</h2><ul><li>需要Redhat (非定制版) / CentOS / Ubuntu …  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 校验</span></span><br><span class="line"><span class="built_in">cat</span> /etc/redhat-release</span><br></pre></td></tr></table></figure></li></ul><h2 id="最小化安装"><a class="markdownIt-Anchor" href="#最小化安装"></a> 最小化安装</h2><ul><li>在安装系统时，采用最小化安装，避免默认安装其他多余用不到的程序，占磁盘空间，还有一些不必要的服务运行着占内存，最小化安装时一般附带基本的<code>yum</code>、<code>vi/vim/nano</code>和<code>ssh</code>就行。</li></ul><h2 id="配置主机名"><a class="markdownIt-Anchor" href="#配置主机名"></a> 配置主机名</h2><ul><li>每个节点都要起名，相当于host</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hostname</span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">hostnamectl set-hostname cdh1</span><br></pre></td></tr></table></figure><h2 id="设置静态ip"><a class="markdownIt-Anchor" href="#设置静态ip"></a> 设置静态IP</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/network-scripts/ifcfg-enp2s0</span><br><span class="line"><span class="comment"># 编辑设置为固定IP</span></span><br><span class="line">TYPE=<span class="string">&quot;Ethernet&quot;</span></span><br><span class="line">PROXY_METHOD=<span class="string">&quot;none&quot;</span></span><br><span class="line">BROWSER_ONLY=<span class="string">&quot;no&quot;</span></span><br><span class="line">BOOTPROTO=<span class="string">&quot;static&quot;</span></span><br><span class="line">DEFROUTE=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPV4_FAILURE_FATAL=<span class="string">&quot;no&quot;</span></span><br><span class="line">IPV6INIT=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPV6_AUTOCONF=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPV6_DEFROUTE=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPV6_FAILURE_FATAL=<span class="string">&quot;no&quot;</span></span><br><span class="line">IPV6_ADDR_GEN_MODE=<span class="string">&quot;stable-privacy&quot;</span></span><br><span class="line">NAME=<span class="string">&quot;enp2s0&quot;</span></span><br><span class="line">UUID=<span class="string">&quot;5c447edd-1c2e-4910-bcaf-4892b56bd042&quot;</span></span><br><span class="line">DEVICE=<span class="string">&quot;enp2s0&quot;</span></span><br><span class="line">ONBOOT=<span class="string">&quot;yes&quot;</span></span><br><span class="line">IPADDR=172.16.10.6</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=172.16.10.254</span><br><span class="line">DNS1=202.96.128.86</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改完后重启网卡，不需要关机(二选一)</span></span><br><span class="line">/etc/init.d/network restart</span><br><span class="line">service network restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启网卡后验证一下网络是否可用</span></span><br><span class="line">ping www.baidu.com</span><br></pre></td></tr></table></figure><h2 id="配置-yum-源"><a class="markdownIt-Anchor" href="#配置-yum-源"></a> 配置 yum 源</h2><p>默认 <code>yum</code> 源是去系统官网下载，下载地址都是在国外，所以下载速度会慢一大截，修改成国内源下载软件速度会快很多。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/yum.repos.d/</span><br><span class="line"><span class="comment"># 备份</span></span><br><span class="line"><span class="built_in">mkdir</span> backup</span><br><span class="line"><span class="built_in">mv</span> *.repo backup</span><br><span class="line"><span class="comment"># 下载网易源</span></span><br><span class="line">wget http://mirrors.163.com/.help/CentOS7-Base-163.repo</span><br><span class="line">vim CentOS7-Base-163.repo</span><br><span class="line">:1,<span class="variable">$s</span>/<span class="variable">$releasever</span>/7/g</span><br><span class="line">:wq!</span><br><span class="line"><span class="comment"># 清缓存</span></span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br><span class="line"><span class="comment"># 安装测试</span></span><br><span class="line">yum –y install tree</span><br><span class="line"><span class="comment"># 源列表</span></span><br><span class="line">yum repolist all</span><br></pre></td></tr></table></figure><h2 id="安装网络工具包"><a class="markdownIt-Anchor" href="#安装网络工具包"></a> 安装网络工具包</h2><p>由于是最小化安装，所以默认缺少一些网络相关的软件，比如<code>ipconfig</code>、<code>netstat</code>等等，需要安装网络工具包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install net-tools</span><br></pre></td></tr></table></figure><h2 id="修改-host"><a class="markdownIt-Anchor" href="#修改-host"></a> 修改 Host</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hosts</span><br><span class="line">192.168.2.1 cdh1</span><br><span class="line">192.168.2.2 cdh2</span><br><span class="line">192.168.2.3 cdh3</span><br><span class="line">192.168.2.4 cdh4</span><br><span class="line"><span class="built_in">source</span> /etc/hosts</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="永久关闭selinux"><a class="markdownIt-Anchor" href="#永久关闭selinux"></a> 永久关闭SElinux</h2><ul><li>SELinux是一个安全体系结构，它通过<code>LSM (Linux Security Modules)</code> 框架被集成到<code>Linux Kernel 2.6.x</code>中。它是<code>NSA (United States National Security Agency)</code>和<code>SELinux</code>社区的联合项目。</li><li>这个策略严谨而复杂，只有非常看重安全的用途而且需要专门的人员管理才需要，大数据集群用不到就关闭</li><li>使用<code>root</code>用户  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看状态</span></span><br><span class="line">sestatus</span><br><span class="line"><span class="comment"># 临时关禁用(两钟方法)</span></span><br><span class="line"><span class="built_in">echo</span> 0 &gt; /selinux/enforce </span><br><span class="line">setenforce 0</span><br><span class="line"><span class="comment"># 上面的方法只在下一次系统重新引导之前有效</span></span><br><span class="line"><span class="comment"># 永久关闭</span></span><br><span class="line">vi /etc/sysconfig/selinux</span><br><span class="line"><span class="comment"># 将 SELinux=enforcing 改为 SELinux=disabled</span></span><br><span class="line"><span class="comment"># reboot重启电脑</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="关闭防火墙"><a class="markdownIt-Anchor" href="#关闭防火墙"></a> 关闭防火墙</h2><ul><li><p>大数据很多组件涉及到很多的端口，提供各种RPC服务、Http服务等等。如果开启防火墙，需要频繁地放开XXXX端口，而大数据一般是内网，所以内网之间不需要设置防火墙。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看状态/停止/禁用</span></span><br><span class="line">systemctl status firewalld</span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line"><span class="comment"># iptable</span></span><br><span class="line">service iptables stop</span><br><span class="line">chkconfig iptables off</span><br></pre></td></tr></table></figure></li></ul><h2 id="http容器"><a class="markdownIt-Anchor" href="#http容器"></a> Http容器</h2><ul><li>Http服务端，也可以是Nginx。用作yum本地源。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum install httpd</span><br><span class="line">vi /etc/httpd/conf/httpd.conf</span><br><span class="line"></span><br><span class="line">&lt;Directory <span class="string">&quot;/var/www/html&quot;</span>&gt;</span><br><span class="line">Options Indexes FollowSymLinks</span><br><span class="line">AllowOverride None</span><br><span class="line">Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><h2 id="数据库"><a class="markdownIt-Anchor" href="#数据库"></a> 数据库</h2><p>一个是MySQL，一个是Mariadb，其中之一。</p><h3 id="mariadb"><a class="markdownIt-Anchor" href="#mariadb"></a> Mariadb</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">yum -y install mariadb mariadb-server</span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">systemctl start mariadb</span><br><span class="line"><span class="comment"># 开机启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb</span><br><span class="line"><span class="comment"># 查看状态</span></span><br><span class="line">systemctl status mariadb</span><br><span class="line"><span class="comment"># 安全安装</span></span><br><span class="line">/usr/bin/mysql_secure_installation </span><br></pre></td></tr></table></figure><ul><li>按照提示<ol><li>空密码登录</li><li>设置 root 密码</li><li>是否删除访客用户</li><li>是否禁止 root 用户远程登录</li><li>是否删除 test 数据库</li><li>是否刷新设置生效</li></ol></li></ul><h3 id="mysql"><a class="markdownIt-Anchor" href="#mysql"></a> MySQL</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载包</span></span><br><span class="line">wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line"><span class="comment"># 安装MySQL源</span></span><br><span class="line">yum -y install mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line"><span class="comment"># 安装MySQL服务</span></span><br><span class="line">yum -y install mysql-community-server</span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">systemctl start mysqld.service</span><br><span class="line"><span class="comment"># 查看状态</span></span><br><span class="line">systemctl status mysqld.service</span><br><span class="line"><span class="comment"># 查看初始密码</span></span><br><span class="line">grep <span class="string">&quot;password&quot;</span> /var/log/mysqld.log</span><br><span class="line"><span class="comment"># 登录</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"><span class="comment"># 修改密码</span></span><br><span class="line">ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"><span class="comment"># 允许远程连接</span></span><br><span class="line">update user <span class="built_in">set</span> host = <span class="string">&#x27;%&#x27;</span> WHERE user = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="comment"># 刷新设置生效</span></span><br><span class="line">flush privileges;</span><br><span class="line"><span class="comment"># （可选）卸载掉MySQL源</span></span><br><span class="line">yum -y remove mysql57-community-release-el7-10.noarch</span><br><span class="line"><span class="comment"># 设置开机启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> mysqld</span><br><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><h2 id="数据库创建"><a class="markdownIt-Anchor" href="#数据库创建"></a> 数据库创建</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 元数据库</span></span><br><span class="line"><span class="keyword">create</span> database metastore <span class="keyword">default</span> <span class="type">character</span> <span class="keyword">set</span> utf8;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;hive&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> metastore.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;hive&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"><span class="comment">-- cm</span></span><br><span class="line"><span class="keyword">create</span> database cm <span class="keyword">default</span> <span class="type">character</span> <span class="keyword">set</span> utf8;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;cm&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> cm.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;cm&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"><span class="comment">-- rm</span></span><br><span class="line"><span class="keyword">create</span> database rm <span class="keyword">default</span> <span class="type">character</span> <span class="keyword">set</span> utf8;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;rm&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> rm.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;rm&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"><span class="comment">-- am</span></span><br><span class="line"><span class="keyword">create</span> database am <span class="keyword">default</span> <span class="type">character</span> <span class="keyword">set</span> utf8;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;am&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> am.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;am&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"><span class="comment">-- hue</span></span><br><span class="line"><span class="keyword">create</span> database hue <span class="keyword">default</span> <span class="type">character</span> <span class="keyword">set</span> utf8;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;hue&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> hue.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;hue&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"><span class="comment">-- oozie</span></span><br><span class="line"><span class="keyword">create</span> database oozie <span class="keyword">default</span> <span class="type">character</span> <span class="keyword">set</span> utf8;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;oozie&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> oozie.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;oozie&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"><span class="comment">-- santry</span></span><br><span class="line"><span class="keyword">create</span> database sentry <span class="keyword">default</span> <span class="type">character</span> <span class="keyword">set</span> utf8;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;sentry&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> sentry. <span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;sentry&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"><span class="comment">-- nav_ms</span></span><br><span class="line"><span class="keyword">create</span> database nav_ms <span class="keyword">default</span> <span class="type">character</span> <span class="keyword">set</span> utf8;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;nav_ms&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> nav_ms. <span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;nav_ms&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"><span class="comment">-- nav_as</span></span><br><span class="line"><span class="keyword">create</span> database nav_as <span class="keyword">default</span> <span class="type">character</span> <span class="keyword">set</span> utf8;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;nav_as&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> nav_as. <span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;nav_as&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><h2 id="安装mysql驱动"><a class="markdownIt-Anchor" href="#安装mysql驱动"></a> 安装MySQL驱动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /usr/share/java</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="ntp-服务"><a class="markdownIt-Anchor" href="#ntp-服务"></a> NTP 服务</h2><ul><li>同步集群所有服务器时间</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">yum -y install ntp</span><br><span class="line"><span class="comment"># 开机启动</span></span><br><span class="line">systemctl <span class="built_in">enable</span> ntpd</span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">systemctl start ntpd</span><br><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">vi /etc/ntp.conf</span><br><span class="line"><span class="comment"># master</span></span><br><span class="line">server 127.127.1.0</span><br><span class="line">fudge 127.127.1.0 stratum 10</span><br><span class="line"><span class="comment"># 其他节点</span></span><br><span class="line">server master的ip</span><br><span class="line"><span class="comment"># 重启生效配置</span></span><br><span class="line">systemctl restart ntpd</span><br><span class="line"><span class="comment"># 查看同步状态</span></span><br><span class="line">ntpq -p</span><br></pre></td></tr></table></figure><h2 id="制作-yum-源"><a class="markdownIt-Anchor" href="#制作-yum-源"></a> 制作 yum 源</h2><ul><li>制作yum源，便于集群内网安装 <code>CM</code> 和 <code>CDH</code>。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 yum 仓库创建工具</span></span><br><span class="line">yum install yum-utils createrepo</span><br><span class="line"><span class="comment"># 创建并进入目录，把安装包上传到文件夹中</span></span><br><span class="line"><span class="built_in">cd</span> /var/www/html/cdh5/5.16.2/cm5.16.2</span><br><span class="line"><span class="comment"># 创建仓库，生成 repodata 文件夹</span></span><br><span class="line">createrepo .</span><br><span class="line"><span class="comment"># 添加新 cm 仓库</span></span><br><span class="line">vi /etc/yum.repos.d/cm.repo</span><br><span class="line"><span class="comment"># 配置保存</span></span><br><span class="line">[cloudera-manager]</span><br><span class="line">name = Cloudera Manager, Version cloudera-repos</span><br><span class="line">baseurl = http://master_ip/cdh5/5.16.2/cm5.16.2</span><br><span class="line">gpgcheck = 0</span><br><span class="line"><span class="built_in">enable</span> = 1</span><br><span class="line"><span class="comment"># 清空 yum 重新建立缓存</span></span><br><span class="line">yum clean all</span><br><span class="line">yum makecache</span><br></pre></td></tr></table></figure><h2 id="集群节点免密登录可选"><a class="markdownIt-Anchor" href="#集群节点免密登录可选"></a> 集群节点免密登录(可选)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br><span class="line"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br><span class="line">scp ~/.ssh/id_rsa.pub master:~/.ssh/authorized_keys</span><br><span class="line">sudo <span class="built_in">chmod</span> 700 ~/.ssh</span><br><span class="line">sudo <span class="built_in">chmod</span> 600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><h2 id="java-环境"><a class="markdownIt-Anchor" href="#java-环境"></a> Java 环境</h2><p>要用CDH的专用JDK，不然可能出现不明崩溃，系统卡死。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">yum -y install oracle-j2sdk1.7-1.7.0+update67-1.x86_64</span><br><span class="line"><span class="comment"># 验证版本</span></span><br><span class="line">java -version</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术栈 </category>
          
          <category> 大数据 </category>
          
          <category> CDH </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CDH </tag>
            
            <tag> 大数据 </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据（三）数据仓库表设计</title>
      <link href="/qa3/"/>
      <url>/qa3/</url>
      
        <content type="html"><![CDATA[<h1 id="拉链表的使用场景"><a class="markdownIt-Anchor" href="#拉链表的使用场景"></a> 拉链表的使用场景</h1><p>（一）中提到</p><h2 id="全量表df"><a class="markdownIt-Anchor" href="#全量表df"></a> 全量表df</h2><h2 id="增量表di"><a class="markdownIt-Anchor" href="#增量表di"></a> 增量表di</h2><h2 id="追加表da"><a class="markdownIt-Anchor" href="#追加表da"></a> 追加表da</h2><h2 id="拉链表dz"><a class="markdownIt-Anchor" href="#拉链表dz"></a> 拉链表dz</h2><h2 id="流水表"><a class="markdownIt-Anchor" href="#流水表"></a> 流水表</h2><h2 id="快照表"><a class="markdownIt-Anchor" href="#快照表"></a> 快照表</h2><h2 id="缓慢变化维scd"><a class="markdownIt-Anchor" href="#缓慢变化维scd"></a> 缓慢变化维（SCD）</h2><span id="more"></span><h1 id="维表和宽表维表的使用及维度退化手法"><a class="markdownIt-Anchor" href="#维表和宽表维表的使用及维度退化手法"></a> 维表和宽表（维表的使用及维度退化手法）</h1><h2 id="维度退化"><a class="markdownIt-Anchor" href="#维度退化"></a> 维度退化</h2><ul><li>一般情况下，维度建模都会将事实表的各个维度作为外键创建不同的维度表，进而形成星型模型。但是，事实表中有个别简单的维度，不需要单独建立维度表，例如一条订单信息中，支付方式单独创建一个维度表几乎是没有意义的。而且会浪费SQL的JOIN成本。此外还有发票号，序列号等等</li><li>减少维度的数量，简化维度数据仓库的模式。简单的模式比复杂的更容易理解，也有更好的查询性能。当一个维度没有数据仓库需要的任何数据时就可以退化此维度。需要把退化维度的相关数据迁移到事实表中，然后删除退化的维度。</li><li>维表数据一般根据ods层数据加工生成，在设计宽表的时候，可以适当的用一些维度退化手法，将维度退化到事实表中，减少事实表和维表的关联</li><li>退化维具有普通维的各种操作，比如：上卷，切片，切块等</li><li>如果存在退化维，那么在ETL的过程将会变得容易。</li><li>它可以让<code>Group by</code>等操作变得更快</li></ul><h2 id="矮宽表高窄表"><a class="markdownIt-Anchor" href="#矮宽表高窄表"></a> 矮宽表+高窄表</h2><ul><li>字面义：宽表是字段个数较多的表，窄表是字段个数较少的表。</li><li>引申义：严格按照数据库设计三范式。尽量减少数据冗余，但是缺点是修改一个数据可能需要修改多张表。通常是指业务主题相关的指标、维度、属性关联在一起的一张数据库表。由于把不同的内容都放在同一张表存储，宽表已经不符合三范式的模型设计规范，随之带来的主要坏处就是数据的大量冗余，与之相对应的好处就是查询性能的提高与便捷。这种宽表的设计广泛应用于数据挖掘模型训练前的数据准备，通过把相关字段放在同一张表中，可以大大提高数据挖掘模型训练过程中迭代计算时的效率问题。</li><li>一句话，空间换时间，便于训练迭代、减少表关联数量，修改少量数据时不需要该多张表</li></ul><h2 id="缓慢变化维"><a class="markdownIt-Anchor" href="#缓慢变化维"></a> 缓慢变化维</h2><ul><li>维度表里面的数据并非是始终不变的，总会随着时间发生变化。更新的时候主要有三种方法。</li></ul><ol><li><p>直接 <code>UPDATE</code>。与业务数据保持一致。</p></li><li><p>新增一条记录，ID不变，其他字段为修改后的信息。(这样能记录历史变化的信息)</p><ul><li>但由于是新增的一条且ID相同，在统计时会重复计算两条数据，所以要加一个新的主键，叫 <code>代理键</code>, 即用来代替原本的ID键作为唯一字段。</li><li>此外，往往还需要新增时间列，这样就能记录什么时间段内，这条记录是有效的，什么时间段变成另外一个值。同时也能记录到底是 <code>a-&gt;b</code> 还是 <code>b-&gt;a</code></li></ul></li><li><p>有时，需求并不是需要那么详细，只需要记录两次内(有限次)的变化时，可以在加多个字段实现。</p><table><thead><tr><th>id</th><th>name</th><th>value</th><th>value1</th><th>value2</th></tr></thead><tbody><tr><td>1</td><td>陈</td><td>100</td><td>200</td><td>150</td></tr></tbody></table></li><li><p>将个别容易变化的维度(有限的)抽离出来，单独构建成RFM微型维度，并在相关事实表中增加RFM键作为外键。<br /><img src="weidu.jpeg" alt="RFM微型维度" /></p></li><li><p>(1+4) 将抽离出来的维度ID放到事实表作为外键，以 <code>UPDATE</code> 的方式更新。</p></li><li><p>(1+2+3) 每次变化，将更新当前行标识字段(1)，新增一条记录(2), 更新历史字段和当前字段(3)<br /><img src="weidu2.png" alt="混合型" /></p></li><li><p>将维度代理键分离出来作为事实表外键，维度的自然键也同时作为事实表外键。这样就有双重外键。更新时，同时新增维度表记录和事实表记录。(感觉有点麻烦)<br /><img src="weidu3.png" alt="双重外键" /></p></li><li><p>快照表，每天(每月)从事实表中复制一份，存为当前时间的分区。以空间换时间。</p></li><li><p>历史拉链表，相比(2)少了代理键，相比(8)降低了存储。<br /><img src="weidu4.png" alt="拉链表" /></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> 大数据 </tag>
            
            <tag> 数据仓库 </tag>
            
            <tag> Hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据（二）OneData方法论</title>
      <link href="/qa2/"/>
      <url>/qa2/</url>
      
        <content type="html"><![CDATA[<h1 id="onedata"><a class="markdownIt-Anchor" href="#onedata"></a> OneData</h1><blockquote><p>参考阿里巴巴美团的OneData方法论</p></blockquote><h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h2><p>由于前期缺少规划，随着集团业务发展，暴露的问题越来越多，给数据治理工作带来了很大的挑战，在数据仓库建设过程中，主要发现了以下几个问题：</p><ul><li>缺乏统一的标准，如：<code>开发规范</code>、<code>指标口径</code>等。</li><li>缺乏统一数据质量监控，如：字段数据不完整和不准确，数据发散等。</li><li>业务知识体系混乱，导致数据开发人员开发成本增加。</li><li>数据架构不合理，层级之间分工不明显，数据流向混乱。</li><li>缺失统一维度和指标管理。</li></ul><span id="more"></span><h2 id="目标"><a class="markdownIt-Anchor" href="#目标"></a> 目标</h2><blockquote><p>在现有大数据平台的基础上，借鉴业界成熟OneData方法论，构建合理的数据体系架构、数据规范、模型标准和开发模式，以保障数据快速支撑不断变化的业务并驱动业务的发展，最终形成我们自己的OneData理论体系与实践体系。<br />（借鉴不照搬，别人的不一定适合自己，要适当根据现状灵活修改）</p></blockquote><h2 id="onedata实施流程"><a class="markdownIt-Anchor" href="#onedata实施流程"></a> OneData实施流程</h2><p><img src="1.png" alt="阿里巴巴OneData实施流程" /></p><p>首先，由运营提了一个数据指标比如是<code>爆款率</code>，我们以爆款率为例先说一下OneData每个步骤实施的流程和涉及的角色。</p><h3 id="第一步要确定指标的业务口径"><a class="markdownIt-Anchor" href="#第一步要确定指标的业务口径"></a> 第一步：要确定指标的业务口径</h3><blockquote><p>业务口径应该由数据中台的产品经理主导，找到提出该指标的运营负责人沟通。首先要问清楚指标是怎么定义的，比如运营说爆款率的定义：分子是专场中商品销售件数超过20件的商品数，分母是专场内的总商品数。</p></blockquote><p>这里面有几个坑（明确指标的具体定义）：</p><ul><li>这个20件可能是运营拍脑袋定义的数据，这时要协调我们的数据数据分析师看下历史专场销售件数的分布找出最合理的值，然后和运营基于数据再一起定义最终的阈值。如果历史数据专场销售件数大部分都远远超过20件那么这个指标就所有的专场都是爆款专场，就没什么意义了。</li><li>商品的销售件数超过20件，其中有一个十分有争议的字眼那就是销售，怎么定义销售？是下单就算，还是支付才算？考虑不考虑退款？如果考虑退款是发起退款就算还是退款实际发生后再算？其实是有很多问题要考虑的。最终和运营确定为该专场支付后的商品件数除以专场商品的总件数。</li><li>销售的商品件数是按商品销售的件数还是按照商品下SKU的销售件数，这个是要搞清楚的，可能运营不关心这个事，但是影响到模型的设计。<blockquote><p>商品sku是库存保有单位的意思，库存保有单位（StockkeepingUnit或者SKU）是对每一个产品和服务的唯一标示符，该系统的使用SKU的植根于数据管理，使公司能够跟踪系统，如仓库和零售商店或产品的库存情况。他们往往在分配和商人的水平上连载。</p></blockquote></li><li>处理完这些坑后关于指标的定义还需要问这几个问题。我们统计的维度是什么？比如爆款率的计算维度是专场内商品的维度，一个是要专场内，一个是商品，原子指标就是销售款数。还有就是统计周期，一般统计周期分为按小时、按天（当天）、按业务周（运营自己定义的统计周期）、按自然周周、按自然月月、按年，还有就是截止到昨天也是比较常用。爆款率的统计周期是统计专场开始到结束时间内的销售件数。<ul><li>维度：某某专场，商品，时间区间</li><li>指标：销售件数(下单?付款?退货申请?退款?) &gt;= 阈值(数据分析得出)</li></ul></li></ul><blockquote><p>考虑指标的意义：每个指标从提出到实现需要经过一大长过程，花费大量时间精力成本，我们投入这么多资源，能够给公司带来什么，要么直接和交易额相关，要么就是能节省运营同事大量的工作时间，节省人力成本也是为公司省钱嘛。</p></blockquote><ul><li>怎么分出指标的重要性？跟业务有关，能直接或间接促进公司盈利的指标都是重要的。（爆款率是给商品负责人看的，专场的商品是由商品运营人员组的，爆款率就决定这个运营人员的组货能力，组货能力强的商品运营一定是能够给公司带来更多的交易额。）</li><li>另外一个判断重要性的方法是判断<code>虚荣指标</code>和<code>非虚荣指标</code><ul><li>虚荣指标：常见的PV、UV、月活、总用户数、总商品数等等都是虚荣指标，因为他无法直接促进交易额的增长。uv、月活再多有什么用，用户就是不购买。</li><li>非虚荣指标：电商行业的主路径的专户率，访问-商品列表、商品列表-商品详情、商品详情-加购、加购-下单转化率这些都是降低流失就能提高交易额的。还有用户的次日留存、7日留存率（新用户7日后是否再次访问）、30日留存率等能直接反应用户的质量和运营做的好坏。商品的动销率（销售款数/上架款数），能直接反映这批商品的好坏。</li></ul></li></ul><h3 id="第二步要确定指标的技术口径"><a class="markdownIt-Anchor" href="#第二步要确定指标的技术口径"></a> 第二步：要确定指标的技术口径</h3><p>技术口径是由建模工程师主导，此时数据中台产品经理要和模型设计师沟通整个指标的业务逻辑，另外就是要协调业务方的技术开发人员和我们的建模工程师一起梳理数据库层面需要用到表结构和字段。</p><ul><li>一定要精确到字段级别，比如我们的爆款率涉及到专场表、商品表、订单表、涉及的字段有商品的销售款数（需要关联专场和商品表）、专场的总商品件数等字段。</li></ul><p>这些字段都确定好后，就能初步定下来这个指标能不能统计，如果不能统计这时产品经理应该主动协调运营告知，并且还要告诉运营同事做了哪些功能才能统计这些指标，接下来就是协调业务方产品经理讨论是不是要做这些功能。</p><h3 id="第三步原型设计和评审"><a class="markdownIt-Anchor" href="#第三步原型设计和评审"></a> 第三步：原型设计和评审</h3><p>此时由数据中台产品经理主导设计原型，对于爆款率来说我们要一方面要展示他们的实时销售件数，另外一方面要实时展示爆款率的变化趋势，加上专场的转化率（支付人数/UV）就可以综合判断这个专场的质量，当运营人员发现转化率和爆款率比较低时再结合商品的数据及时把一些表现比较差劲的商品下架，让销量好的商品得到更多的曝光机会。</p><p>评审要拉上我们的架构师、建模工程师、数据开发工程师、后端开发工程师、前端开发工程师、UI，一起说明整个功能的价值和详细的操作流程，确保大家理解的一致。接下来就要和我们的运营根据原型最终确定问题。比较重要的功能要发邮件让我们的运营进一步确认，并同步给所有的运营同事保证大家的口径一致。</p><h3 id="第四步模型设计"><a class="markdownIt-Anchor" href="#第四步模型设计"></a> 第四步：模型设计</h3><p>此时主导的是我们的模型设计工程师，按照阿里的OneData建模理论的指导，模型设计工程师会采用三层建模的方式把数据更加科学的组织存储。分为<code>ODS</code>(操作数据层)，<code>DWD</code>(明细数据层)、<code>DWS</code>(汇总数据层)、<code>ADS</code>(应用数据层)，这是业务对数据分层常用的模型。模型设计工程师要清楚的知道数据来源自那里，要怎么存放。</p><h3 id="第五步数据开发"><a class="markdownIt-Anchor" href="#第五步数据开发"></a> 第五步：数据开发</h3><p>此时主导的是大数据开发工程师，首先要和数据建模工程师沟通好技术口径明确好我们计算的指标都来自于那些业务系统，他们通过数据同步的工具如<code>DataX</code>、消息中间<code>TimeTunnel</code>将数据同步到模型工程师设计的<code>ODS</code>层，然后就是一层一层的通过SQL计算到<code>DW*</code>层，一层一层的汇总，最后形成可为应用直接服务的数据填充到<code>ADS</code>层。</p><p>另外大数据开发工程另外一个比较重要的工作就是设置调度任务，简单来讲就是什么时候计算提前写好的计算脚本如<code>T-1</code>每天凌晨处理上一天的数据，随着业务的增长，运营会对实时数据的需求越来越大，还有一些实时计算任务的配置也是由大数据开发工程师完成。</p><h3 id="第六步后端开发"><a class="markdownIt-Anchor" href="#第六步后端开发"></a> 第六步：后端开发</h3><p>此时由后端开发主导，后端开发工程师基于产品经理的功能定义输出相应的接口给前端开发工程师调用，由于<code>ADS</code>层是由数据开发工程师已经将数据注入常规的关系型数据库（如MYSQL等），此时后端开发工程师更多的是和产品经理沟通产品的功能、性能方面的问题，以便给使用者更好的用户体验。</p><h3 id="第七步前端开发"><a class="markdownIt-Anchor" href="#第七步前端开发"></a> 第七步：前端开发</h3><p>此时主导的是前端开发工程师。原型出来后产品经理会让UI设计师基于产品功能的重点设计UI，UI设计师经过反复的设计，UI最终定型后，会给我们的前端开发工程师提供切图。前端开发工程师基于UI的切图做前端页面的开发。</p><h3 id="第八步联调"><a class="markdownIt-Anchor" href="#第八步联调"></a> 第八步：联调</h3><p>此时数据开发工程师、前端开发工程师、后端开发工程师都要参与进来。此时会要求大数据开发工程师基于历史的数据执行计算任务，数据开发工程师承担数据准确性的校验。前后端解决用户操作的相关BUG保证不出现低级的问题完成自测。</p><h3 id="第九步测试"><a class="markdownIt-Anchor" href="#第九步测试"></a> 第九步：测试</h3><p>测试工程师在完成原型评审后就要开始写测试用例，哪些是开发人员自己要自测通过才能交上来测试的，哪些是自己要再次验证的都在测试用例写清楚。此时有经验的产品经理会向运营人员要历史的统计数据来核对数据，不过运营人员的数据不一定准确，只是拿来参考。最终测试没问题产品经理协调运营人员试用，试用中发现的一些问题再回炉重新修改，此时整个研发过程就结束了。</p><h3 id="第十步上线"><a class="markdownIt-Anchor" href="#第十步上线"></a> 第十步：上线</h3><p>运维工程师会配合我们的前后端开发工程师更新最新的版本到服务器。此时产品经理要找到该指标的负责人长期跟进指标的准确性。重要的指标还要每过一个周期内部再次验证，从而保证数据的准确性。运维工程师会配合我们的前后端开发工程师更新最新的版本到服务器。此时产品经理要找到该指标的负责人长期跟进指标的准确性。重要的指标还要每过一个周期内部再次验证，从而保证数据的准确性。</p><h2 id="基于阿里onedata的数据指标管理体系"><a class="markdownIt-Anchor" href="#基于阿里onedata的数据指标管理体系"></a> 基于阿里OneData的数据指标管理体系</h2><p>完成上面这些步骤最核心的数据指标的定义与数据模型的建立。<code>数据指标的定义</code>和<code>数据口径的统一</code>和<code>数据模型的准确性科学性</code>是直接决定产品的质量和说服力。</p><h3 id="数据指标的定义"><a class="markdownIt-Anchor" href="#数据指标的定义"></a> 数据指标的定义</h3><p>采用阿里的一套针对指标的规范定义，让大家在一个标准下看数据消除歧义。</p><p><img src="2.png" alt="数据指标定义" /><br /><img src="19.jpeg" alt="数据指标对比参考" /></p><ul><li><p>数据域：面向业务的大模块，不会经常变。比如我们公司有环贸快版打版服务、亿订电商业务、供应链业务等等大的业务模块类似产品线。</p><p><img src="18.jpeg" alt="数据指标对比参考" /></p></li><li><p>业务过程：如电商业务中的下单、支付、退款等都属于业务过程。</p></li><li><p>时间周期：就是统计范围，如近30天、自然周、截止到当天等。</p></li><li><p>修饰类型：比较好理解的如电商中支付方式，终端类型等。</p></li><li><p>修饰词：除了维度意外的限定词，如电商支付中的微信支付、支付宝支付、网银支付等。终端类型为安卓、IOS等</p></li><li><p>原子指标：不可再拆分的指标如支付金额、支付件数等指标</p></li><li><p>维度：常见的维度有地理维度（国家、地区等）、时间维度（年、月、周、日等）</p></li><li><p>维度属性：如地理维度中的国家名称、ID、省份名称等。</p></li><li><p>派生指标：原子指标+修饰词+时间周期就组成了一个派生指标。</p></li></ul><p>阿里就是用这一套严格的指标拆分体系来管理每个指标。之所以拆这么彻底，就是要消除歧义。条件允许的话可以协调开发同事、测试同事、产品同事口述一下对这个指标的理解看看有什么不同。最大程度的消除指标的歧义。</p><h2 id="基于阿里onedata的模型设计体系"><a class="markdownIt-Anchor" href="#基于阿里onedata的模型设计体系"></a> 基于阿里OneData的模型设计体系</h2><blockquote><p>既然要做数据处理，我们数据前后肯定有变化，那么为了保险，我们需要将各个维度的数据分层储存，比如一个订单数据，让我罗列我可以整出二、三十个字段，可是最后我们真正用到的只有：uid、time和goods id，这个过程需要不断的过滤。每过滤一层就需要在新的一层储存一次。业务是分层的参考标准，不同的业务，分层不一样，比如阿里的数据分层分为：ODS、DWD、DWS、ADS。</p></blockquote><p><img src="aliyun.png" alt="阿里数仓分层" /></p><ul><li>ODS(操作数据层)：是数据仓库第一层数据，直接从原始数据过来的，经过简单地处理，爆款率涉及到的表结构比如订单表、专场表、商品表、用户表等。</li><li>DW*(汇总数据层)：这个是数据仓库的第二层数据，DWD和DWS很多情况下是并列存在的，这一层储存经过处理后的标准数据。增加了维度形成了统计宽表，比如专场的爆款商品有哪些。</li><li>ADS(应用数据层)：这个是数据仓库的最后一层数据，为应用层数据，直接可以给业务人员使用。比如某日某个专场爆款率是多少、总的爆款率是什么。</li></ul><h2 id="数据看板的设计"><a class="markdownIt-Anchor" href="#数据看板的设计"></a> 数据看板的设计</h2><ul><li>到现在为止指标已经定义好了，也采用三层建模的形式存储了下来。在这里就跳过数据开发这块，太过于偏技术化。指标计算好后最重要的就是指标的展示了，此时有个坑，你会发现每个人关注的数据不太一样，老板关注的和部门领导关注的是有差别的、部门领导关注的和一线的执行人员关注的还是有差别的，我们做了很多看板还是无法满足住全公司每个用户的数据看板需求。</li><li>最后决定采用自定义看板的方案，我们数据中台提供的是看板库，所有的指标已经在数据中台分门别类的定义好，计算好。</li><li>如果遇到新的数据指标，现在的看板库无法满足，数据中台会进行新一轮的开发，开发完成后将指标计算的结果放到看板库中。看数据的同事可以通过查看、搜素自己想要的指标，通过拖拉拽的方式形成自己的个性化看板，并能通过微信、小程序形成自己的每日看板报告。</li><li>这样老板想看的指标数据中台自己定制页面，定制看板的权限交给每个同事，不过要注意权限的设定，有些同事是不能看到特别关键的指标。</li><li>看数据人员选择自己想要的指标通过拖拉的方式定制自己的看板，可以选择显示方式如折线图、饼图、柱状图等常规图表，也可以选择统计周期等属性。</li></ul><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><h2 id="onemodel-统一数据构建和管理"><a class="markdownIt-Anchor" href="#onemodel-统一数据构建和管理"></a> OneModel 统一数据构建和管理</h2><p>将指标定位细化为：原子指标、时间周期、修饰词（统计粒度、业务限定, etc），通过这些定义，设计出各类派生指标; 基于数据分层，设计出维度表、明细事实表、汇总事实表。</p><h2 id="oneservice-统一数据服务"><a class="markdownIt-Anchor" href="#oneservice-统一数据服务"></a> OneService 统一数据服务</h2><p>基于复用而不是复制数据的思想，能力包括：</p><ul><li>利用主题逻辑表屏蔽复杂物理表的主题式数据服务</li><li>一般查询 + OLAP 分析+在线服务的统一且多样化数据服务</li><li>屏蔽多种异构数据源的跨源数据服务</li></ul><h2 id="oneid-统一数据萃取"><a class="markdownIt-Anchor" href="#oneid-统一数据萃取"></a> OneID 统一数据萃取</h2><p><strong>(这几个不是太懂)</strong><br />基于统一的实体识别、连接和标签生产，实现数据通融，包括：</p><ul><li>ID自动化识别与连接</li><li>行为元素和行为规则</li><li>标签生产</li></ul><h1 id="美团的创新点"><a class="markdownIt-Anchor" href="#美团的创新点"></a> 美团的创新点</h1><h2 id="统一业务归口"><a class="markdownIt-Anchor" href="#统一业务归口"></a> 统一业务归口</h2><p>数据来源于业务并支撑着业务的发展。因此，数仓建设的基石就是对于业务的把控，数仓建设者即是技术专家，也应该是<code>“大半个”</code>业务专家。基于互联网行业的特点，我们基本上采用需求推动数据的建设（从上到下，维度建模），这也带来了一些问题，包括：数据对业务存在一定的滞后性；业务知识沉淀在各个需求里，导致业务知识体系分散。针对这些问题，我们提出统一业务归口，构建全局知识库，进而保障对业务认知的一致性。</p><p><img src="4.png" alt="归口" /></p><h2 id="设计统一归口"><a class="markdownIt-Anchor" href="#设计统一归口"></a> 设计统一归口</h2><p>为了解决数据仓库建设过程中出现的各种痛点，我们从模型与规范两个方面进行建设，并提出设计统一归口。</p><ol><li>模型</li></ol><blockquote><p>规范化模型分层、数据流向和主题划分，从而降低研发成本，增强指标复用性，并提高业务的支撑能力。</p></blockquote><ul><li><p>模型分层</p><p>优秀可靠的数仓体系，往往需要清晰的数据分层结构，即要保证数据层的稳定又要屏蔽对下游的影响，并且要避免链路过长。结合这些原则及以往的工作经验，我们将分层进行统一定义为四层：</p><p><img src="5.png" alt="模型分层" /></p></li><li><p>模型数据流向</p><p>重构前，存在大量的烟囱式开发、分层应引用不规范性及数据链路混乱、血缘关系很难追溯和 <code>SLA时效</code> 难保障等问题。</p><ul><li><a href="#%E8%A1%A5%E5%85%85google-sre%E6%9C%8D%E5%8A%A1%E8%B4%A8%E9%87%8F">SLA时效是啥？</a></li></ul><p><img src="6.png" alt="数据流向" /></p><p>重构之后，稳定业务按照标准的数据流向进行开发，即<code>ODS–&gt;DWD–&gt;DWA–&gt;APP</code>。非稳定业务或探索性需求，可以遵循<code>ODS-&gt;DWD-&gt;APP</code>或者<code>ODS-&gt;DWD-&gt;DWT-&gt;APP</code>两个模型数据流。在保障了数据链路的合理性之后，又在此基础上确认了模型分层引用原则：</p><ul><li>正常流向：<code>ODS-&gt;DWD-&gt;DWT-&gt;DWA-&gt;APP</code>，当出现<code>ODS-&gt;DWD-&gt;DWA-&gt;APP</code>这种关系时，明主题域未覆盖全。应将<code>DWD</code>数据落到<code>DWT</code>中，对于使用频度非常低的表允许<code>DWD-&gt;DWA</code>。</li><li>尽量避免出现<code>DWA</code>宽表中使用<code>DWD</code>又使用（该DWD所归属主题域）<code>DWT</code>的表。</li><li>同一主题域内对于DWT生成DWT的表，原则上要尽量避免，否则会影响ETL的效率。</li><li><code>DWT</code>、<code>DWA</code>和<code>APP</code>中禁止直接使用ODS的表，<code>ODS</code>的表只能被<code>DWD</code>引用。</li><li>禁止出现反向依赖，例如<code>DWT</code>的表依赖<code>DWA</code>的表。</li></ul></li></ul><ol start="2"><li>主题划分</li></ol><blockquote><p>传统行业如银行、制造业、电信、零售等行业中，都有比较成熟的主题划分，如BDWM、FS-LDM、MLDM等等。但从实际调研情况来看，主题划分太抽象会造成对业务理解和开发成本较高，不适用互联网行业。因此，结合各层的特性，我们提出了两类主题的划分：<strong>面向业务</strong>、<strong>面向分析</strong>。</p></blockquote><ul><li>面向业务：按照业务进行聚焦，降低对业务理解的难度，并能解耦复杂的业务。我们将实体关系模型进行变种处理为实体与业务过程模型。实体定义为业务过程的参与体；业务过程定义是由多个实体作用的结果，实体与业务过程都带有自己特有的属性。根据业务的聚合性，我们把业务进行拆分，形成了七大核心主题。</li><li>面向分析：按照分析聚焦，提升数据易用性，提高数据的共享与一致性。按照分析主体对象不同及分析特征，形成分析域主题在DWA进行应用，例如销售分析域、组织分析域。</li></ul><ol start="3"><li>规范</li></ol><blockquote><p>模型是整个数仓建设基石，规范是数仓建设的保障。为了避免出现指标重复建设和数据质量差的情况，我们统一按照最详细、可落地的方法进行规范建设。</p></blockquote><ul><li><p><code>词根</code>：词根是维度和指标管理的基础，划分为普通词根与专有词根，提高词根的易用性和关联性。</p><ul><li>普通词根：描述事物的最小单元体，如：交易-<code>trade</code></li><li>专有词根：具备约定成俗或行业专属的描述体，如：美元-<code>USD</code></li></ul></li><li><p><code>表命名规范</code></p><ul><li><p>通用规范</p><ul><li>表名、字段名采用一个下划线分隔词根（示例：clienttype-&gt;client_type）。</li><li>每部分使用小写英文单词，属于通用字段的必须满足通用字段信息的定义。</li><li>表名、字段名需以字母为开头。</li><li>表名、字段名最长不超过64个英文字符。</li><li>优先使用词根中已有关键字（数仓标准配置中的词根管理），定期Review新增命名的不合理性。</li><li>在表名自定义部分禁止采用非标准的缩写。</li></ul></li><li><p>表命名规则</p><p><code>表名称 = 类型 + 业务主题 + 子主题 + 表含义 + 存储格式 + 更新频率 + 结尾</code><br /><img src="7.png" alt="统一的表命名规范" /></p></li></ul></li><li><p><code>指标命名规范</code>：结合指标的特性以及词根管理规范，将指标进行结构化处理。</p><ol><li><p>基础指标词根，即所有指标必须包含以下基础词根：</p><table><thead><tr><th>基础指标词根</th><th>英文全称</th><th>Hive数据类型</th><th>MySQL数据类型</th><th>长度</th><th>精度</th><th>词根</th><th>样例</th></tr></thead><tbody><tr><td>数量</td><td>count</td><td>Bigint</td><td>Bigint</td><td>10</td><td>0</td><td>cnt</td><td></td></tr><tr><td>金额类</td><td>amout</td><td>Decimal</td><td>Decimal</td><td>20</td><td>4</td><td>amt</td><td></td></tr><tr><td>比率/占比</td><td>ratio</td><td>Decimal</td><td>Decimal</td><td>10</td><td>4</td><td>ratio</td><td>0.9818</td></tr><tr><td>……</td><td>……</td><td>……</td><td>……</td><td></td><td></td><td>……</td><td></td></tr></tbody></table></li><li><p>业务修饰词，用于描述业务场景的词汇，例如<code>trade-交易</code>。</p></li><li><p>日期修饰词，用于修饰业务发生的时间区间。</p><table><thead><tr><th>日期类型</th><th>全称</th><th>词根</th><th>备注</th></tr></thead><tbody><tr><td>日</td><td>daily</td><td>d</td><td></td></tr><tr><td>周</td><td>weekly</td><td>w</td><td></td></tr><tr><td>……</td><td>……</td><td>……</td><td></td></tr></tbody></table></li><li><p>聚合修饰词，对结果进行聚集操作。</p><table><thead><tr><th>聚合类型</th><th>全称</th><th>词根</th><th>备注</th></tr></thead><tbody><tr><td>平均</td><td>average</td><td>avg</td><td></td></tr><tr><td>周累计</td><td>wtd</td><td>wtd</td><td>本周一截止到当天累计</td></tr><tr><td>……</td><td>……</td><td>……</td><td></td></tr></tbody></table></li><li><p>基础指标，单一的业务修饰词+基础指标词根构建基础指标 ，例如：交易金额-<code>trade_amt</code>。</p></li><li><p>派生指标，多修饰词+基础指标词根构建派生指标。派生指标继承基础指标的特性，例如：安装门店数量-<code>install_poi_cnt</code>。</p></li><li><p>普通指标命名规范，与字段命名规范一致，由词汇转换即可以。</p><p><img src="8.png" alt="普通指标规范" /></p></li><li><p>日期类型指标命名规范，命名时要遵循：业务修饰词+基础指标词根+日期修饰词/聚合修饰词。将日期后缀加到名称后面，如下图所示：</p><p><img src="9.png" alt="日期类型指标规范" /></p></li><li><p>聚合类型指标，命名时要遵循：业务修饰词+基础指标词根+聚合类型+日期修饰词。将累积标记加到名称后面，如下图所示：</p><p><img src="10.png" alt="聚合类型指标规范" /></p></li></ol></li><li><p><code>清洗规范</code>：确认了字段命名和指标命名之后，根据指标与字段的部分特性，我们整理出了整个数仓可预知的24条清洗规范：</p><table><thead><tr><th>数据类型</th><th>数据类别</th><th>Hive类型</th><th>MySQL类型</th><th>长度</th><th>精度</th><th>词根</th><th>格式说明</th><th>备注</th></tr></thead><tbody><tr><td>日期类型</td><td>字符日期类</td><td>string</td><td>varchar</td><td>10</td><td></td><td>date</td><td>YYYY-MM-DD</td><td>日期清洗为相应的格式</td></tr><tr><td>数据类型</td><td>数量类</td><td>bigint</td><td>bigint</td><td>10</td><td>0</td><td>cnt</td><td>活跃门店数量</td><td></td></tr><tr><td>……</td><td>……</td><td>……</td><td>……</td><td>……</td><td>……</td><td>……</td><td>……</td><td></td></tr></tbody></table><p>结合模型与规范，形成模型设计及模型评审两者的工作职责，如下图所示：</p><p><img src="11.png" alt="模型设计和审计职责" /></p></li></ul><h2 id="统一应用归口"><a class="markdownIt-Anchor" href="#统一应用归口"></a> 统一应用归口</h2><p><img src="12.png" alt="应用归口" /></p><p>从图中可以看出，重构前一个应用存在多次迭代，每次迭代都各自维护自己的文档。烟囱式开发会导致业务信息混乱、应用无法与文档对齐、知识传递成本、维护成本和迭代成本大大增加等问题。重构后，应用与知识库相对应，保证一个应用只对应一份文档，且应用统一要求在一份文档上进行迭代，从根源上改变应用支持流程。同时，针对核心业务细节和所支撑的数据信息，进行了全局调研并归纳到知识库。综合统一的知识库，降低了知识传递、理解、维护和迭代成本。</p><p>统一归口策略包含业务归口统一、设计归口统一和应用归口统一，从底层保证了数仓建设的<strong>三特性</strong>和<strong>三效果</strong>。</p><h2 id="统一数据出口"><a class="markdownIt-Anchor" href="#统一数据出口"></a> 统一数据出口</h2><blockquote><p>数仓建设不仅仅是为了数据内容而建设，同时也为了提高交付的数据质量与数据使用的便利性。如何保证数据质量以及推广数据的使用，我们提出了统一数据出口策略。在进行数据资产管理和统一数据出口之前，必须高质量地保障输出的数据质量，从而树立<code>OneData</code>s数据服务体系的权威性。</p></blockquote><ul><li><p>交付标准化</p><p>如何保证数据质量，满足什么样的数据才是可交付的，是数据建设者一直探索的问题。为了保证交付的严谨性，在具体化测试方案之前，我们结合数仓的特点明确了数据交付标准的五个特性，如下图所示：<br /><img src="13.png" alt="交付标准化" /></p><p>《交付标准化》完善了整个交付细节，从根本上保证了数据的质量，如：业务测试保障数据的合理性、一致性；技术测试保障数据的唯一性、准确性；数据平台的稳定性和后期人工维护保障数据的及时性。</p></li><li><p>数据资产管理</p><p>针对如何解决数据质量中维度与指标一致性以及如何提高数据易用性的问题，我们提出数据资产的概念，借助公司内部平台工具“起源数据平台”实现了整个数据资产管理，它的功能如下图所示：<br /><img src="14.png" alt="起源功能体系" /></p><p>借用起源数据平台，我们实现了：</p><ul><li>统一指标管理，保证了指标定义、计算口径、数据来源的一致性。</li><li>统一维度管理，保证了维度定义、维度值的一致性。</li><li>统一数据出口，实现了维度和指标元数据信息的唯一出口，维值和指标数据的唯一出口。</li></ul><p>通过交付标准化和数据资产管理，保证了数据质量与数据的易用性，同时我们也构建出OneData数据体系中数据指标管理的核心。</p></li></ul><h2 id="实践的成果"><a class="markdownIt-Anchor" href="#实践的成果"></a> 实践的成果</h2><h3 id="流程改善"><a class="markdownIt-Anchor" href="#流程改善"></a> 流程改善</h3><p>我们对开发过程进行梳理，服务于整个OneData体系。对需求分析、指标管理、模型设计、数据验证进行了改善，并结合OneData模型策略，改善了数仓管理流程。</p><p><img src="15.png" alt="数仓管理流程" /></p><h3 id="数仓全景图"><a class="markdownIt-Anchor" href="#数仓全景图"></a> 数仓全景图</h3><p>基于OneData主题建设，我们采用<strong>面向业务</strong>、<strong>面向分析</strong>的建设策略，形成数仓全景图，如下图所示：</p><p><img src="16.png" alt="数仓全景图" /></p><h3 id="资产管理列表"><a class="markdownIt-Anchor" href="#资产管理列表"></a> 资产管理列表</h3><p>基于起源数据平台形成的资产管理体系，如下图所示：</p><p><img src="17.png" alt="资产管理列表" /></p><h3 id="总结和展望"><a class="markdownIt-Anchor" href="#总结和展望"></a> 总结和展望</h3><blockquote><p>我们结合了OneData核心思想与特点，构建一种稳定、可靠的基础数据仓库，从底层保障了数据质量，同时完成OneData实践，形成自有的OneData理论体系。未来，我们还将在技术上引入实时数据仓库，满足灵活多样、低延时的数据需求；在业务层面会横向拓展其他业务领域，不间断地支撑核心业务的决策与分析。下一步，我们将为企业级One Entity数据中台（以Data As a Service为理念），提供强有力的数据支撑。在后续数仓维护过程中，不断地发现问题、解决问题和总结问题，保障数据稳定性、一致性和有效性，为核心业务构建价值链，最终形成企业级的数据资产。</p></blockquote><h1 id="补充google-sre服务质量"><a class="markdownIt-Anchor" href="#补充google-sre服务质量"></a> 补充：Google SRE：服务质量</h1><ul><li>SLI（Service Level Indicator）该服务的某项服务质量的一个具体量化指标，用于测量性能。是随时间变化的度量值，比如请求的延迟，每秒请求的吞吐量，或者每种请求的失败次数。这些值通常会随时间累积，然后被转换为一个比率，平均值或者相对某个阈值的百分比。</li></ul><p><img src="sli.png" alt="SLI" /></p><ul><li>SLO（Service Level Objective）相关方一致同意的贯穿一个时间窗口（比如过去30天或者这个季度）内SLI累积成功数的目标</li></ul><p><img src="slo.png" alt="SLO" /><br /><img src="slo2.png" alt="SLO HTTP 请求例子" /></p><ul><li>SLA（Service Level Agreement）该服务与用户之间的一个明确的、或不明确的协议，描述了在达到或没有达到SLO的后果。如果SLO没有达到时，会有什么后果？如果没有定义明确的后果，那么我们就肯定在讨论一个SLO而不是SLA。<blockquote><p>例子：<strong>如果服务在一个日历月内未达到 <code>99.95%</code> 可用性，则该服务提供商每分钟都会因不合规而补偿客户。</strong></p></blockquote></li><li>RPO（Recovery Point Object）衡量系统在灾难发生后将损失多少数据的指标。<br /></li><li>RTO（Recovery Time Object）它是指灾难发生后，从 IT 系统当机导致业务停顿之时开始，到 IT 系统恢复至可以支持各部门运作、恢复运营之时，此两点之间的时间段称为 RTO。</li></ul><h1 id="最终总结"><a class="markdownIt-Anchor" href="#最终总结"></a> 最终总结</h1><ol><li>呼~~~~~~累！！！（终于搞完了，理论的东西，记多了容易犯困，更何况这一篇，写了两个大晚上！）</li><li>照顾了阅读体验，怕量不够所以<code>OneDate</code>系列找了一篇阿里的（偏数据经理角度），毕竟是人家提出的方法论。然后再找了美团的实践经验，方法论落地不同公司的实现方式不一样，但是都打通小异。</li><li>虽然但是，美团的技术博文的行文真的是滴水不漏，无可挑剔。业界楷模，赞！！！</li><li>这一大篇，自己的理解偏少，毕竟是理论，如果没有实践的部分，还是很少能够理解<code>Get</code>到点。或者理解的不够深刻，没有那种顿悟（哦，原来这个设计是因为这个原因）的感觉，只能硬啃（嗯，是可以这样设计，没毛病）</li><li>实践真的很重要！！！理论基于实践，高于实践。</li><li><code>2021-04-19</code> 补充 Google SRE：服务质量</li></ol>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> OneData </tag>
            
            <tag> 指标体系 </tag>
            
            <tag> 指标口径 </tag>
            
            <tag> 数据仓库 </tag>
            
            <tag> 规范 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数据（一）数据建模</title>
      <link href="/qa/"/>
      <url>/qa/</url>
      
        <content type="html"><![CDATA[<h1 id="数据建模"><a class="markdownIt-Anchor" href="#数据建模"></a> 数据建模</h1><ol><li>模型设计的三个阶段<ol><li>概念模型：将业务划分成几个主题</li><li>逻辑模型：定义各种实体、属性、关系</li><li>物理模型：设计数据对象的物理实现，比如表的命名规范、字段的命名规范、字段类型等</li></ol></li><li>数据库建模有 <code>维度建模</code> 和 <code>范式建模</code>.</li></ol><span id="more"></span><h2 id="范式建模"><a class="markdownIt-Anchor" href="#范式建模"></a> 范式建模</h2><ul><li>定义：范式建模将事物抽象为<code>实体</code>(Entity)、<code>属性</code>、<code>关系</code>(Relationship)来表示数据关联和事物描述。也称熟悉的 <code>E-R模型</code>。</li><li>即关系模式。一张数据表的表结构，符合的设计标准的级别</li><li>目的在于降低数据的冗余性和保证数据的一致性。缺点是获取数据时，通常需要通过Join拼接出最后的数据。</li></ul><h3 id="第一范式1nf"><a class="markdownIt-Anchor" href="#第一范式1nf"></a> 第一范式（1NF）：</h3><p>所有的域都应该是原子性的，即数据库表的每一列都是不可分割的原子数据项，而不能是集合，数组，记录等非原子数据项。即实体中的某个属性有多个值时，必须拆分为不同的属性。在符合第一范式（1NF）表中的每个域值只能是实体的一个属性或一个属性的一部分。如：<br/><br /><strong>商品: 两个篮球</strong> 可以拆分为 <strong>商品: 篮球， 数量: 2</strong></p><h3 id="第二范式2nf"><a class="markdownIt-Anchor" href="#第二范式2nf"></a> 第二范式（2NF）</h3><p>在 <code>1NF</code> 的基础上，<code>非码属性</code> 必须完全依赖于 <code>候选码</code>（在1NF基础上消除非主属性对主码的部分函数依赖）简而言之，第二范式就是在第一范式的基础上，加上一条规则：<code>属性完全依赖于主键</code>。</p><ul><li><p>码：码是可以确定一个元组的所有信息的属性名或属性名组。<code>姓名，年龄</code>是码，因为<code>姓名，年龄</code>决定了 [姓名、性别、年龄、身高] ，同理，<code>姓名</code>也是是码，但<code>年龄</code>决定不了 [姓名、性别、年龄、身高] 所以年龄不是码。</p></li><li><p>候选码：候选码的真子集中不存在码，候选码可以有多个。（<code>姓名</code>可以决定性别年龄身高，所以<code>姓名</code>是候选码，<code>学号</code>也可以决定性别年龄身高，所以也是候选码。<code>&#123;姓名，年龄&#125;</code>不是候选码，因为其真子集{<code>姓名</code>}是码）</p></li><li><p>主码：主码就是熟悉的主键。<strong>主码是任意一个候选码</strong>。在建模过程中，建模人员从候选者中挑选一个候选码作为主码，这个主码就是主键。</p></li><li><p>主属性：所有候选码的属性称为主属性。不包含在任何候选码中的属性称为<code>非主属性</code>或<code>非码属性</code>。（<code>学号</code>和<code>姓名</code>就是该关系的主属性，<code>年龄</code>和<code>性别</code>就是非主属性。）</p></li><li><p>(部分)函数依赖：姓名可以决定学生宿舍，学号也可以决定学生宿舍，那说明学生宿舍部分依赖于学号+姓名。</p></li><li><p>完全函数依赖：学号+课程可以决定分数，但学号不能单独决定分数，姓名不能决定分数。所以说明分数完全依赖于学号+课程。</p><p><img src="1.png" alt="函数依赖" /></p></li></ul><h3 id="第三范式3nf"><a class="markdownIt-Anchor" href="#第三范式3nf"></a> 第三范式（3NF）</h3><p>在2NF基础上，任何非主属性不依赖于其它非主属性（在2NF基础上消除传递依赖）</p><ul><li>传递依赖：学号决定姓名，姓名决定性别、班级，班级决定班主任。但是，班主任不能反推决定班级(一个班主任不一定只负责一个班级)，班级不能反推姓名(一个班级有很多姓名)。所以说明班主任传递依赖于学号。</li></ul><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><ul><li>范式越高，冗余越少，数据越规范</li><li>范式越高，越灵活，扩展性越强，使用成本越高</li><li>ER模型是数据库设计的理论基础，<code>Bill Inmon</code> 提出使用 ER模型 构建数仓。</li><li>对于ER模型，我们需要梳理清楚企业各个业务系统的实体，实体间的关系，实体的属性，它的实施周期长，而互联网行业是不断探索，不断迭代的过程，当你还没有梳理清楚的时候，业务就已经发生了改变，甚至当你的数仓还没建好的时候，有可能这个企业已经黄了。</li></ul><h2 id="维度建模"><a class="markdownIt-Anchor" href="#维度建模"></a> 维度建模</h2><ul><li>事实表：描述一个客观存在的事实的记录表。事实数据表。发生在现实世界中的操作型事件，其所产生的可度量数值，存储在事实表中。从最低的粒度级别来看，事实表行对应一个度量事件，反之亦然。通常是app埋点日志。</li><li>维度表：每个维度表都包含单一的主键列。维度表的主键可以作为与之关联的任何事实表的外键，当然，维度表行的描述环境应与事实表行完全对应。 维度表通常比较宽，是扁平型非规范表，包含大量的低粒度的文本属性，维度表一般由代理键、自然键、维度属性三部分构成。<br />（相当于将事实表中的 <code>属性</code> 维度提取出来，和 <code>指标</code> 一起称为维表）</li><li>维度：用于说明数据。维度是指可指定不同值的对象的<code>描述性属性</code>或<code>特征</code>。(杯子的颜色，材质)</li><li>指标：用于衡量数据。指可以按<code>总数</code>或<code>比值</code>衡量的具体<code>维度元素</code>。(杯子的长度、体积、容积)。</li><li>区别：维度不可衡量，指标一般可衡量，能说出具体是多少，而维度更倾向于文字性描述。（不知道这样理解对不对，好像下面那个城市的例子更准确）</li></ul><blockquote><p>在维度建模中，通常将指标的度量称之为<code>事实</code>，将产生度量的环境称之为<code>维度</code>。将描述同一个业务实体的的多个维度列组合在一起，就是常说的<code>维度表</code>。</p></blockquote><blockquote><p>虽然维度和指标可以独立使用，但常见的还是相互结合使用。维度和指标的值以及这些值之间的关系，使您的数据具有了意义。为了挖掘尽可能多的深层次信息，维度通常与一个或多个指标关联在一起。例如，维度<code>城市</code>可以与指标<code>人口</code>和<code>面积</code>相关联。有了这些数据，系统还可以创建“人口密度”等比值指标，带来有关这些城市的更详细的深入信息。</p></blockquote><hr /><blockquote><p>数据库中，键和码是一个东西，就是叫法不同而已。除了上面提到的 码，候选码，主码 之外，还有以下几个。</p></blockquote><ul><li>复合键：由两个或者多个属性组成的键。</li><li>自然键：由现实世界中已经存在的属性组成的键。姓名，学号，身份证</li><li>代理键：不具有业务含义的键</li><li>备用键：也就是次键，是表中行的另一个唯一标识。</li><li>外键：在一个实体类型中表示另一个实体类型的主键或者次键的一个或多个属性。</li></ul><h3 id="星型模型"><a class="markdownIt-Anchor" href="#星型模型"></a> 星型模型</h3><ul><li><p>定义：由一个事实表和一组维度表组成，每个维表都有一个维度作为主键，事实表居中，多个维表呈辐射状分布于四周，并与事实表连接，形成一个星型结构。</p><p><img src="2.png" alt="星型模型的表结构" /></p></li></ul><h3 id="雪花模型"><a class="markdownIt-Anchor" href="#雪花模型"></a> 雪花模型</h3><ul><li><p>在星型模型的基础上，基于范式理论进一步层次化，将某些维表扩展成事实表，最终形成雪花状结构。标准的星型模型维度只有一层，而雪花模型可能会涉及多级，<code>维度层级</code>是雪花模型与星型模型的主要区别。雪花模型比较接近3NF，但是无法完全遵循，因为遵循3NF的性能成本太高。</p><p><img src="3.jpg" alt="雪花模型的表结构" /></p></li></ul><h3 id="星座模型"><a class="markdownIt-Anchor" href="#星座模型"></a> 星座模型</h3><ul><li><p>星座模型与前两种情况的区别是事实表的数量，星座模型是基于多个事实表。</p></li><li><p>基本上是很多数据仓库的常态，因为很多数据仓库都是多个事实表。所以是否星座只反应是否有多个事实表，它们之间是否共享一些维度表。星座模型不和前两种模型冲突。</p><p><img src="4.png" alt="星座模型的表结构" /></p></li></ul><h3 id="建模步骤"><a class="markdownIt-Anchor" href="#建模步骤"></a> 建模步骤</h3><h4 id="选择业务过程"><a class="markdownIt-Anchor" href="#选择业务过程"></a> 选择业务过程</h4><ul><li>选择感兴趣的业务线，业务过程通常的表示是业务执行的活动，与之相关的维度描述和每个业务过程事件关联的描述性环境。如下单，支付，退款，活动</li><li>业务过程建立或获取关键性能度量。</li></ul><h4 id="声明粒度"><a class="markdownIt-Anchor" href="#声明粒度"></a> 声明粒度</h4><ul><li>粒度传递的是与事实表度量有关的细节级别。</li><li>精确定义某个事实表的每一行表示什么。(一行代表一条订单？一天的订单？一周的订单)</li><li>对事实表的粒度要达成共识。</li></ul><h4 id="确认维度"><a class="markdownIt-Anchor" href="#确认维度"></a> 确认维度</h4><ul><li>健壮的维度集合来粉饰事实表。(谁？什么时间？什么地点？)</li><li>维度表示承担每个度量环境中所有可能的单值描述符。</li></ul><h4 id="确认事实"><a class="markdownIt-Anchor" href="#确认事实"></a> 确认事实</h4><ul><li>不同粒度的事实必须放在不同的事实表中。</li><li>事实表的设计完全依赖物理活动，不受最终报表的影响。</li><li>事实表通过外健关联与之相关的维度。</li><li>查询操作主要是基于事实表开展计算和聚合。(度量值：如个数，件数，金额)</li></ul><h2 id="最后来个对比的表格"><a class="markdownIt-Anchor" href="#最后来个对比的表格"></a> 最后来个对比的表格</h2><table><thead><tr><th>区别</th><th>数据库</th><th>数据仓库</th></tr></thead><tbody><tr><td>面向</td><td>事务(OLTP)</td><td>分析/决策(OLAP)</td></tr><tr><td>建模方式</td><td>范式建模</td><td>维度建模</td></tr><tr><td>数据量</td><td>小(GB)</td><td>大(TB/PB)</td></tr><tr><td>前期成本</td><td>大</td><td>小</td></tr><tr><td>后期成本</td><td>小</td><td>大</td></tr><tr><td>数据冗余度</td><td>小</td><td>大</td></tr><tr><td>数据灵活度</td><td>大</td><td>小</td></tr><tr><td>架构</td><td>Inmon</td><td>Kimball</td></tr><tr><td>建模方向</td><td>自上而下据源</td><td>自下而上</td></tr><tr><td>数据流向</td><td>从数据源头头开始设计</td><td>从数据指标开始</td></tr><tr><td>表结构</td><td>实体+属性+关系</td><td>事实+维度</td></tr><tr><td>使用场景</td><td>业务模式较固定</td><td>业务变化较频繁</td></tr></tbody></table><p><img src="3.png" alt="区分" /></p>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> 数据库 </tag>
            
            <tag> 数据建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spark 深入学习(三)</title>
      <link href="/spark3/"/>
      <url>/spark3/</url>
      
        <content type="html"><![CDATA[<h1 id="开始"><a class="markdownIt-Anchor" href="#开始"></a> 开始</h1><h2 id="第一次尝试"><a class="markdownIt-Anchor" href="#第一次尝试"></a> 第一次尝试</h2><blockquote><p>后记：这篇是搭建Spark单机开发环境。这里花了亿点点时间准备单机环境。而且各种报错和没截上图，自己把自己搞混乱了，不过最终还是把Spark跑起来了。后面重新整理时，将步骤和踩坑点全部填回来了。</p></blockquote><span id="more"></span><ol><li>下载<code>Spark</code>、<code>Hadoop</code></li><li>安装、配环境变量，查看版本</li><li>修改<code>core-site.xml</code>、<code>hdfs-site</code>、<code>mapred-site</code>、<code>yarn-site</code></li><li>报错需要<code>winutils.exe</code></li><li>搜索，没有对应版本</li><li>下载源码，准备编译环境，编译到一半发现<code>Github</code>有人编译过了</li><li>下载后，格式化<code>NameNode</code>和<code>DataNode</code></li><li>格式化失败，StackOverFlow 说是 Bug 下一个 Release 修复</li><li>下载暂时的 <code>hadoop-hdfs-3.2.1.jar</code> 备份，替换</li><li><code>DataNode</code>无法启动，报`Cannot lock storage The directory is already locked``</li></ol><p>还没有写完哦~<br />后面继续更新不影响~<br />先上几张截图~</p><p><img src="1.png" alt="1" /></p><p><img src="2.png" alt="2" /></p><hr /><blockquote><p>这里因为各种原因，鸽了7个月，换了个电脑，重新搞。</p></blockquote><h2 id="准备软件包和环境变量"><a class="markdownIt-Anchor" href="#准备软件包和环境变量"></a> 准备软件包和环境变量</h2><ol><li><p>下载，推荐清华镜像：<a href="https://mirrors.tuna.tsinghua.edu.cn/apache/hadoop">https://mirrors.tuna.tsinghua.edu.cn/apache/hadoop</a></p></li><li><p>解压，配环境变量，查看版本。解压是要管理员，否则无法创建快捷方式（linux 软链接）</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=D:\Java\jdk1.8.0_291</span><br><span class="line">export SCALA_HOME=D:\scala-2.13.7</span><br><span class="line">export HADOOP_HOME=D:\hadoop-3.3.1</span><br><span class="line">export HIVE_HOME=D:\apache-hive-3.1.2-bin</span><br><span class="line">export SPARK_HOME=D:\spark-3.2.0-bin-hadoop3.2-scala2.13</span><br><span class="line">export PATH=$PATH:%JAVA_HOME%\bin:%SCALA_HOME%\bin:%HADOOP_HOME%\bin:%HIVE_HOME%\bin:%SPARK_HOME%\bin</span><br></pre></td></tr></table></figure><p><img src="env.png" alt="环境变量" /></p><p><img src="version.png" alt="查看版本" /></p></li><li><p>下载winutils.exe</p><p>在Windows下编译Hadoop后生成的文件，主要用于模拟Linux下的目录环境，一般在Github上可以找到别人编译好的，比较新的仓库有 <a href="https://github.com/kontext-tech/winutils">kontext-tech</a>。编译/下载好后，将其放在hadoop/bin下即可。</p></li></ol><h2 id="hadoop"><a class="markdownIt-Anchor" href="#hadoop"></a> Hadoop</h2><ol><li><p>在Hadoop解压根路径创建dfs文件夹保存数据，tmp保存临时数据。dfs下创建dn和nn文件夹保存DataNode和NameNode。</p></li><li><p>修改 <code>/hadoop/etc/hadoop/hadoop-env.cmd</code> 的 <code>Java</code> 环境变量为正确目录</p><p><img src="version.png" alt="查看版本" /></p></li><li><p>接下来就是配置四个核心文件了</p><p><img src="conf.png" alt="配置文件" /></p><p>core-site.xml</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://DESKTOP-JRSHJQU:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/D:/hadoop-3.3.1/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/D:/hadoop-3.3.1/dfs<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/D:/hadoop-3.3.1/dfs<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.feng.hosts<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.feng.groups<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>hdfs-site.xml</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>设置副本数<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/D:/hadoop-3.3.1/dfs/nn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>设置存放NameNode的文件路径<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.datanode.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/D:/hadoop-3.3.1/dfs/dn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>设置存放DataNode的文件路径<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.permissions<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>开启文件夹权限<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>mapred-site.xml</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapred.job.tracker<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://DESKTOP-JRSHJQU:9001<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>yarn-site.xml</p> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services.mapreduce.shuffle.class<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.mapred.ShuffleHandler<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>查看版本确认环境无误，并格式化</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hadoop version</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">格式化</span></span><br><span class="line">hdfs namenode -format</span><br></pre></td></tr></table></figure><p><img src="format.png" alt="格式化" /></p><p>格式化完成后，会在NameNode目录生成current文件夹，里面是fsimage文件。说明格式化成功。（看日志也可以的，错误的话，会报错）</p></li><li><p>启动服务</p><p>在sbin里面start-all.cmd用<strong>管理员权限</strong>直接一次性启动。不用管理员权限启动的话，NodeManager会报错。（报HDFS权限问题）<br />四个角色（<code>NN</code>,<code>DN</code>,<code>RM</code>,<code>NM</code>）启动，且没有报错即为成功。</p><p><img src="start.png" alt="启动成功" /></p></li><li><p>看看页面，敲敲命令</p><p>YARN页面地址默认是：<a href="http://localhost:8088">http://localhost:8088</a></p><p><img src="yarn.png" alt="" /></p><p>HDFS页面地址默认是：<a href="http://localhost:9870">http://localhost:9870</a></p><p><img src="hdfs.png" alt="" /></p><p>再玩玩命令行，没有任何大问题。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">(base) PS C:\Users\feng&gt; d:</span><br><span class="line">(base) PS D:\&gt; echo &quot;hello test&quot; &gt;&gt; 1.txt</span><br><span class="line">(base) PS D:\&gt; cat .\1.txt</span><br><span class="line">hello test</span><br><span class="line">(base) PS D:\&gt; hdfs dfs -ls /</span><br><span class="line">(base) PS D:\&gt; hdfs dfs -mkdir /test</span><br><span class="line">(base) PS D:\&gt; hdfs dfs -ls /</span><br><span class="line">Found 1 items</span><br><span class="line">drwxr-xr-x   - feng supergroup          0 2021-11-20 22:27 /test</span><br><span class="line">(base) PS D:\&gt; hdfs dfs -put 1.txt /test</span><br><span class="line">(base) PS D:\&gt; hdfs dfs -ls /test</span><br><span class="line">Found 1 items</span><br><span class="line">-rw-r--r--   3 feng supergroup         26 2021-11-20 22:28 /test/1.txt</span><br><span class="line">(base) PS D:\&gt; hdfs dfs -cat /test/1.txt</span><br><span class="line">Hello test</span><br><span class="line">(base) PS D:\&gt; hdfs dfs -cat /test/1.txt</span><br><span class="line">Hello test</span><br><span class="line">(base) PS D:\&gt; del .\1.txt</span><br><span class="line">(base) PS D:\&gt; hdfs dfs -get /test/1.txt .</span><br><span class="line">(base) PS D:\&gt; cat .\1.txt</span><br><span class="line">hello test</span><br></pre></td></tr></table></figure><p><img src="hdfsc.png" alt="" /></p><p>但是有个小问题，HDFS的 <code>hdfs dfs -cat</code>输出的Hello不全。这是因为<code>1.txt</code>是在Windows平台创建的，文件的编码默认是<code>UTF-16_LE</code>，特点是在文件的第一个字节加上一个标识符，而Hadoop生态读取时，默认为UTF-8，然后将该字符和H字母结合生成一种不存在的文字。在Hue页面或者是二进制编辑器可以看得到。</p><p><img src="encode.png" alt="" /></p></li></ol><h2 id="hive"><a class="markdownIt-Anchor" href="#hive"></a> Hive</h2><ol><li><p>新版的Hive会存在一个问题，bin目录下可能会缺少若干.cmd文件，需要将文件补充回来。</p></li><li><p>安装MySQL不解释</p><p>下载后，解压，添加环境变量。创建data文件夹，新增配置文件。</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"><span class="attr">basedir</span>=D:\mysql-<span class="number">5.7</span>.<span class="number">36</span>-winx64</span><br><span class="line"><span class="attr">datadir</span>=D:\mysql-<span class="number">5.7</span>.<span class="number">36</span>-winx64\data</span><br><span class="line"><span class="attr">port</span>=<span class="number">3306</span></span><br><span class="line"><span class="attr">character_set_server</span>=utf8</span><br><span class="line"><span class="attr">sql_mode</span>=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br></pre></td></tr></table></figure><p>管理员身份进入cmd</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装/卸载服务，服务名默认为MySQL</span></span><br><span class="line">mysqld -install</span><br><span class="line">mysqld -remove mysql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">初始化</span></span><br><span class="line">mysqld --initialize-insecure</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动/关闭服务</span></span><br><span class="line">net start mysql</span><br><span class="line">net stop mysql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">初始化用户密码</span></span><br><span class="line">mysqladmin -u root password</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">登录（没初始化，默认没有密码）</span></span><br><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> databases;</span><br><span class="line">use mysql;</span><br><span class="line"><span class="keyword">show</span> tables;</span><br><span class="line"><span class="keyword">select</span> host, <span class="keyword">user</span>, authentication_string <span class="keyword">from</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> host <span class="operator">=</span> <span class="string">&#x27;%&#x27;</span> <span class="keyword">where</span> <span class="keyword">user</span> <span class="operator">=</span> <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure></li><li><p>下载<code>mysql-connector-java</code>包放在hive的<code>lib</code>目录下</p></li><li><p>创建Hive的HDFS文件夹并赋权（可以参考<code>init-hive-dfs.sh</code>，可惜没cmd版本）</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -mkdir /tmp</span><br><span class="line">hdfs dfs -chmod g+w /tmp</span><br><span class="line">hadoop fs -mkdir /user</span><br><span class="line">hadoop fs -mkdir /user/hive</span><br><span class="line">hadoop fs -mkdir /user/hive/warehouse</span><br><span class="line">hadoop fs -chmod g+w /user/hive/warehouse</span><br></pre></td></tr></table></figure></li><li><p>在Hive根目录，创建临时文件夹tmp，tmp下面创建<code>operation_logs</code>，<code>querylog</code>，<code>resources</code>，<code>scratch</code>四个文件夹。</p></li><li><p>从模板创建Hive配置文件，并修改配置文件hive-site.xml</p><p><img src="hivec.png" alt="" /></p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对应配置之前新建的四个文件夹</span></span><br><span class="line">hive.server2.logging.operation.log.location</span><br><span class="line">hive.querylog.location</span><br><span class="line">hive.downloaded.resources.dir</span><br><span class="line">hive.exec.local.scratchdir</span><br><span class="line"><span class="comment"># hive 元数据库</span></span><br><span class="line">javax.jdo.option.ConnectionURL</span><br><span class="line">javax.jdo.option.ConnectionDriverName</span><br><span class="line">javax.jdo.option.ConnectionUserName</span><br><span class="line">javax.jdo.option.ConnectionPassword</span><br><span class="line"><span class="comment"># hive 客户端显示当前数据库</span></span><br><span class="line">hive.cli.print.current.db</span><br><span class="line"><span class="comment"># hive 客户端显示查询结果的表头</span></span><br><span class="line">hive.cli.print.header</span><br><span class="line"><span class="comment"># 启动 hive 时，如果元数据表不存在则自动创建</span></span><br><span class="line">datanucleus.schema.autoCreateAll</span><br><span class="line"><span class="comment"># 验证 hive 的 jar 包版本和元数据库记录的版本是否一致</span></span><br><span class="line">hive.metastore.schema.verification</span><br><span class="line"><span class="comment"># HiveServer2 Thrift service 绑定的 host</span></span><br><span class="line">hive.server2.thrift.bind.host</span><br><span class="line"><span class="comment"># 高可用的配置，和Tez有关？</span></span><br><span class="line">hive.server2.active.passive.ha.enable</span><br></pre></td></tr></table></figure></li><li><p>启动<code>metastore</code>和<code>hive cli</code>&amp;报错</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">初始化元数据</span></span><br><span class="line">hive --service schematool -dbType mysql -initSchema</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动</span></span><br><span class="line">hive --service metastore</span><br><span class="line">hive --service hiveserver2</span><br></pre></td></tr></table></figure> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">2021-11-21 03:01:46,991 ERROR conf.Configuration: error parsing conf file:/D:/apache-hive-3.1.2-bin/conf/hive-site.xml</span><br><span class="line">com.ctc.wstx.exc.WstxParsingException: Illegal character entity: expansion character (code 0x8</span><br><span class="line"> at [row,col,system-id]: [3215,96,&quot;file:/D:/apache-hive-3.1.2-bin/conf/hive-site.xml&quot;]</span><br><span class="line">        at com.ctc.wstx.sr.StreamScanner.constructWfcException(StreamScanner.java:634)</span><br><span class="line">        at com.ctc.wstx.sr.StreamScanner.throwParseError(StreamScanner.java:504)</span><br><span class="line">        at com.ctc.wstx.sr.StreamScanner.reportIllegalChar(StreamScanner.java:2469)</span><br><span class="line">        at com.ctc.wstx.sr.StreamScanner.validateChar(StreamScanner.java:2416)</span><br><span class="line">        at com.ctc.wstx.sr.StreamScanner.resolveCharEnt(StreamScanner.java:2382)</span><br><span class="line">        at com.ctc.wstx.sr.StreamScanner.fullyResolveEntity(StreamScanner.java:1528)</span><br><span class="line">        at com.ctc.wstx.sr.BasicStreamReader.nextFromTree(BasicStreamReader.java:2818)</span><br><span class="line">        at com.ctc.wstx.sr.BasicStreamReader.next(BasicStreamReader.java:1121)</span><br><span class="line">        at org.apache.hadoop.conf.Configuration$Parser.parseNext(Configuration.java:3373)</span><br><span class="line">        at org.apache.hadoop.conf.Configuration$Parser.parse(Configuration.java:3159)</span><br><span class="line">        at org.apache.hadoop.conf.Configuration.loadResource(Configuration.java:3052)</span><br><span class="line">        at org.apache.hadoop.conf.Configuration.loadResources(Configuration.java:3018)</span><br><span class="line">        at org.apache.hadoop.conf.Configuration.loadProps(Configuration.java:2893)</span><br><span class="line">        at org.apache.hadoop.conf.Configuration.getProps(Configuration.java:2875)</span><br><span class="line">        at org.apache.hadoop.conf.Configuration.get(Configuration.java:1225)</span><br><span class="line">        at org.apache.hadoop.hive.metastore.conf.MetastoreConf.getBoolVar(MetastoreConf.java:1367)</span><br><span class="line">        at org.apache.hadoop.hive.metastore.conf.MetastoreConf.newMetastoreConf(MetastoreConf.java:1195)</span><br><span class="line">        at org.apache.hadoop.hive.metastore.HiveMetaStore.main(HiveMetaStore.java:8770)</span><br><span class="line">        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)</span><br><span class="line">        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">        at java.lang.reflect.Method.invoke(Method.java:498)</span><br><span class="line">        at org.apache.hadoop.util.RunJar.run(RunJar.java:323)</span><br><span class="line">        at org.apache.hadoop.util.RunJar.main(RunJar.java:236)</span><br></pre></td></tr></table></figure><p><img src="lm.png" alt="" /></p><p>根据报错，去查找3215行配置，发现有乱码。删掉，重新启动。</p><p><img src="hivestart.png" alt="" /></p><p>然后直接hive客户端连接metastore，会刷出信息 <code>Connected to: Apache Hive (version 3.1.2)</code>，但是会出现<code>Error: Method not supported (state=,code=0)</code> 暂时无法解决，但不影响正常使用。（估计已经放弃hive cli不维护了吧。）</p></li><li><p>启动<code>HS2</code>和<code>beeline</code><br />在配置中开启<code>hive.server2.active.passive.ha.enable</code>可以避免找不到Tez类保错，后面会继续集成Tez看看。</p><p>HS2页面地址默认是：<a href="http://localhost:10002">http://localhost:10002</a></p><p><img src="hdfs.png" alt="" /></p><p>beeline不能登录报错，原因是缺少jdbc的jar包。</p><p><img src="beelinenojar.png" alt="" /></p><p><s>解决方法是: 把<code>D:\apache-hive-3.1.2-bin\jdbc\hive-jdbc-3.1.2-standalone.jar</code>放到<code>lib</code>文件夹</s></p><blockquote><p>后记：这个方法的确可以解决缺少jar包的问题。然后美滋滋的做下一步去了~<br />但是，下次在启动<code>HS2</code>时，启动失败了，原因是缺少jar包<code>commons-cli</code>。然而，<code>commons-cli-1.2.jar</code>确实是在目录里面的，然后再检查了<code>hive-site</code>和<code>hive-env</code>无误后，才想起可能是和<code>hive-jdbc</code>包有关。</p></blockquote><p>真正的解决办法是什么呢？去<code>beeline.cmd</code>(同<code>beeline.sh</code>)看看就明白了，原本hive2中这个<code>hive-jdbc-standalone</code>的包是在lib下面的，现在hive3单独放出来到jdbc下了。然后这个脚本是从hive2里面复制的，所以会导致<code>HADOOP_CLASSPATH</code>和<code>CLASSPATH</code>环境变量缺少这个包。所以修改下目录，加上就行。</p><p><img src="beelinecmd.png" alt="" /></p><p>此时，没有hive用户，beeline无法登录。</p><blockquote><p>如果运行hive客户端，就会发现，居然是beeline。说明hive客户端早就被删除了，而为了保留用户习惯&amp;代码兼容性，官方加了hive转beeline这个特殊的启动方式<code>Connecting to jdbc:hive2://</code>。<br />如果是在beeline中输入<code>!Connecting to jdbc:hive2://</code>进行模拟hive client连接，是不是可以越过密码呢？答案是暂时是否定的，这种情况下肯定是没有账号密码的。<br />但是看了hive cli的输出日志中有一段<code>Using the default value passed in ...</code>应该是会有个默认的账号密码？或者是动态密码？也不是不可能</p></blockquote><hr /><blockquote><p>后来查到Beeline支持嵌入模式(embedded mode)和远程模式(remote mode)。在嵌入式模式下，运行嵌入式的Hive(类似Hive CLI)，而远程模式可以通过Thrift连接到独立的HiveServer2进程上。说的就是这个。</p></blockquote> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">(base) PS C:\Users\feng&gt; hive</span><br><span class="line">Connecting to jdbc:hive2://</span><br><span class="line">2021-12-07 22:57:30,863 INFO conf.HiveConf: Found configuration file file:/D:/apache-hive-3.1.2-bin/conf/hive-site.xml</span><br><span class="line">Hive Session ID = 593ed4b4-93a3-44b9-8755-c476c556f22b</span><br><span class="line">2021-12-07 22:57:31,097 INFO SessionState: Hive Session ID = 593ed4b4-93a3-44b9-8755-c476c556f22b</span><br><span class="line">2021-12-07 22:57:31,640 INFO session.SessionState: Created HDFS directory: /tmp/hive/feng/593ed4b4-93a3-44b9-8755-c476c556f22b</span><br><span class="line">2021-12-07 22:57:31,643 INFO session.SessionState: Created local directory: D:/apache-hive-3.1.2-bin/tmp/scratchdir/593ed4b4-93a3-44b9-8755-c476c556f22b</span><br><span class="line">2021-12-07 22:57:31,655 INFO session.SessionState: Created HDFS directory: /tmp/hive/feng/593ed4b4-93a3-44b9-8755-c476c556f22b/_tmp_space.db</span><br><span class="line">......</span><br><span class="line">2021-12-07 22:57:58,169 INFO conf.HiveConf: Using the default value passed in for log id: 881604c0-8a89-4f59-80e3-d5116aff2439</span><br><span class="line">2021-12-07 22:57:58,169 INFO session.SessionState: Resetting thread name to  main</span><br><span class="line">2021-12-07 22:57:58,174 INFO conf.HiveConf: Using the default value passed in for log id: 881604c0-8a89-4f59-80e3-d5116aff2439</span><br><span class="line">2021-12-07 22:57:58,174 INFO session.SessionState: Updating thread name to 881604c0-8a89-4f59-80e3-d5116aff2439 main</span><br><span class="line">2021-12-07 22:57:58,187 INFO conf.HiveConf: Using the default value passed in for log id: 881604c0-8a89-4f59-80e3-d5116aff2439</span><br><span class="line">2021-12-07 22:57:58,187 INFO session.SessionState: Resetting thread name to  main</span><br><span class="line">Beeline version 3.1.2 by Apache Hive</span><br><span class="line">hive&gt;</span><br></pre></td></tr></table></figure></li><li><p>HDFS创建hive目录</p></li></ol>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hdfs dfs -mkdir /tmp</span><br><span class="line">hdfs dfs -chmod g+w /tmp</span><br><span class="line">hadoop fs -mkdir /user</span><br><span class="line">hadoop fs -mkdir /user/hive</span><br><span class="line">hadoop fs -mkdir /user/feng</span><br><span class="line">hadoop fs -mkdir /user/hive/warehouse</span><br><span class="line">hadoop fs -chmod g+w /user/hive/warehouse</span><br></pre></td></tr></table></figure><p>其中，hive用户必须要有/user/hive/warehouse和/user/{username}的写权限，否则无法进行创建数据库，创建数据表，插入数据等写操作。(查询操作还是可以的)</p><h2 id="关于-hive-用户"><a class="markdownIt-Anchor" href="#关于-hive-用户"></a> 关于 Hive 用户</h2><p>Hive 的用户取决于 Hive 采用的认证方式。Hive的认证方式在<code>hive-site</code>中的<code>hive.server2.authentication</code>配置相。分别是 <code>nosasl</code>, <code>none</code>(default), <code>ldap</code>, <code>kerberos</code>, <code>pam</code>, <code>custom</code>。</p><ul><li>NONE （默认，不启用认证。任何用户都有所有权限，不输入用户名/密码也行）</li><li>NOSASL （需要任意一个用户名，不需要密码，不填写或者填写错误用户名会导致报错。）</li><li>LDAP （集成LDAP后，用户就是LDAP用户）</li><li>KERBEROS （用Kerberos用户登录，要 <code>kinit</code> 或者 <code>keytab</code>）</li><li>PAM （pam认证模块，需要用户名和密码，几乎等同于使用linux用户）<blockquote><p>PAM(Pluggable Authentication Modules)即可插拔式认证模块，它是一种高效而且灵活的用户级别的认证方式，它也是当前Linux服务器普遍使用 的认证方式。PAM可以根据用户的网段、时间、用户名、密码等实现认证。并不是所有需要验证的服务都使用PAM来验证，如MySQL-Server就没有安 装相应的PAM文件。</p></blockquote></li><li>CUSTOM （可以根据自身需求对用户登录认证进行一定客制，比如将密码通过md5进行加密等。）</li></ul><h2 id="集成tez"><a class="markdownIt-Anchor" href="#集成tez"></a> 集成tez</h2><p>暂时不集成。</p>]]></content>
      
      
      <categories>
          
          <category> 技术栈 </category>
          
          <category> 大数据 </category>
          
          <category> Spark </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> Spark </tag>
            
            <tag> 数据挖掘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spark 深入学习(二)</title>
      <link href="/spark2/"/>
      <url>/spark2/</url>
      
        <content type="html"><![CDATA[<h1 id="开始"><a class="markdownIt-Anchor" href="#开始"></a> 开始</h1><blockquote><p>先了解一波专有名词，再去看教程或者文档，应该会比较容易理解吧~~~<br />大概包含 <code>Worker</code>，<code>Driver</code>，<code>Executor</code>，<code>Stage</code>，<code>Task</code>，<code>DAGScheduler</code>，<code>TaskScheduler</code>，<code>RDD</code>，<code>Stage</code>，<code>Shuffle</code>,<code>算子</code>…</p></blockquote><span id="more"></span><h2 id="从spark的工作原理开始"><a class="markdownIt-Anchor" href="#从spark的工作原理开始"></a> 从Spark的工作原理开始</h2><p>从模型开始，到任务名词~</p><h3 id="rdd"><a class="markdownIt-Anchor" href="#rdd"></a> RDD</h3><ol><li>RDD 是 Spark 的计算模型。RDD（Resilient Distributed Dataset）叫做弹性分布式数据集合。(本质上是一个只读的分区记录集合，类似Java的Set。每个RDD可以有多个分区（<code>Partition</code>）)，每个分区可以保存在不同的节点上，从而可以在集群中的不同结点上进行并行计算。<ul><li>只读：不能修改，只能通过转换操作生成新的 RDD。</li><li>分布式：可以分布在多台机器上进行并行处理。</li><li>弹性：计算过程中内存不够时它会和磁盘进行数据交换。</li><li>基于内存：可以全部或部分缓存在内存中，在多次计算间重用。</li></ul></li><li>RDD 的操作分为转化（<code>Transformation</code>）操作和行动（<code>Action</code>）操作。转化操作就是从一个 RDD 产生一个新的 RDD，而行动操作就是进行实际的计算。<br />RDD 的操作是惰性的，当 RDD 执行转化操作的时候，实际计算并没有被执行，只有当 RDD 执行行动操作时才会促发计算任务提交，从而执行相应的计算操作。(可以理解为：执行 <code>RDD.map().count()</code> 时，<code>map()</code>是转化。但是执行到这一步时，并没有具体操作，而是等待下一步的<code>count()</code>这个<code>Action</code>执行。然后<code>count()</code>的执行去触发前面<code>map()</code>的执行。这样有个好处：能针对不同的<code>Action</code>操作，去优化前面的<code>Transformation</code>的计算方法。)</li><li>RDD 血缘关系（Lineage）它描述了一个 RDD 是如何从父 RDD 计算得来的。如果某个 RDD 丢失了，则可以根据血缘关系，从父 RDD 重新计算得来。这里应该是有个<code>RDD</code>的继承关系(DAG 拓扑排序)(这是最重要的，能保持因各种原因丢失数据时，能够重新计算而不是直接任务失败，或者全部重新计算。原理有点像断网续传~)<br /><img src="1.gif" alt="示意图" /></li><li>RDD 的依赖类型。根据不同的转换操作，RDD 血缘关系的依赖分为窄依赖和宽依赖。窄依赖是指父 RDD 的每个分区都只被子 RDD 的一个分区所使用。宽依赖是指父 RDD 的每个分区都被多个子 RDD 的分区所依赖。<br /><img src="2.gif" alt="宽依赖和窄依赖" /><br />Spark 的这种依赖关系设计，使其具有了天生的容错性，大大加快了 Spark 的执行速度。RDD 通过血缘关系记住了它是如何从其他 RDD 中演变过来的。当这个 RDD 的部分分区数据丢失时，它可以通过血缘关系获取足够的信息来重新运算和恢复丢失的数据分区，从而带来性能的提升。(印证了第三点)<br />相对而言，窄依赖的失败恢复更为高效，它只需要根据父 RDD 分区重新计算丢失的分区即可，而不需要重新计算父 RDD 的所有分区。而对于宽依赖来讲，单个结点失效，即使只是 RDD 的一个分区失效，也需要重新计算父 RDD 的所有分区，开销较大。<br />宽依赖操作就像是将父 RDD 中所有分区的记录进行了“洗牌”，数据被打散，然后在子 RDD 中进行重组。</li><li>提前提一下阶段（<code>Stage</code>）。用户提交的计算任务是一个由 RDD 构成的 DAG，如果 RDD 的转换是宽依赖，那么这个宽依赖转换就将这个 DAG 分为了不同的阶段（Stage)。由于宽依赖会带来“洗牌”，所以不同的 Stage 是不能并行计算的，后面 Stage 的 RDD 的计算需要等待前面 Stage 的 RDD 的所有分区全部计算完毕以后才能进行。（这里有点难，得画图想想。图中阶段2和阶段3可以同时进行。理解为：假设分区1较大，分区2较小，分区2很快计算完成阶段2的内容。然后接着分区2就接着进行阶段3计算。这时分区1还在阶段2。所以窄依赖可以跨阶段并行）<br /><img src="3.png" alt="任务被分解成继承关系的猜想" /><br />这点就类似于在 MapReduce 中，Reduce 阶段的计算必须等待所有 Map 任务完成后才能开始一样。<br />在对 Job 中的所有操作划分 Stage 时，一般会按照倒序进行，即从 Action 开始，遇到窄依赖操作，则划分到同一个执行阶段，遇到宽依赖操作，则划分一个新的执行阶段。后面的 Stage 需要等待所有的前面的 Stage 执行完之后才可以执行，这样 Stage 之间根据依赖关系就构成了一个大粒度的 DAG。(前面是我的想法…下图这个才是真的，想想也是：既然可以并行，那不必细分Stage了。而且划分<code>Stage</code>时倒序进行真的太合理了，这也解释上文第二点说的<code>Transformation</code>和<code>Action</code>操作：根据<code>Action</code>倒推<code>Transformation</code>，然后再分<code>Stage</code>。牛逼哄哄~)<br /><img src="4.gif" alt="再次示意" /></li><li>RDD缓存。Spark RDD 是惰性求值的，而有时候希望能多次使用同一个 RDD。如果简单地对 RDD 调用行动操作，Spark 每次都会重算 RDD 及它的依赖，这样就会带来太大的消耗。为了避免多次计算同一个 RDD，可以让 Spark 对数据进行持久化。(理解为：多次调用<code>RDD.map().count()</code>时，由于惰性求值原因，每次调用<code>.count()</code>时，得重新计算<code>.map()</code>，而map又依赖<code>RDD</code>，<code>RDD</code> 可能又依赖父<code>RDD</code>…导致整条链路得重新计算一遍！)<br />Spark 可以使用 persist 和 cache 方法将任意 RDD 缓存到内存、磁盘文件系统中。缓存是容错的，如果一个 RDD 分片丢失，则可以通过构建它的转换来自动重构。被缓存的 RDD 被使用时，存取速度会被大大加速。一般情况下，<code>Executor</code> 内存的 60% 会分配给 cache，剩下的 40％ 用来执行任务。</li><li>没了，终于了解完<code>RDD</code>了，扯出来了很多核心内容。不愧是核心名词。</li></ol><h3 id="application"><a class="markdownIt-Anchor" href="#application"></a> Application</h3><p>application（应用）其实就是用spark-submit提交的程序。比方说spark examples中的计算pi的SparkPi。一个application通常包含三部分：从数据源（比方说HDFS）取数据形成RDD，通过RDD的transformation和action进行计算，将结果输出到console或者外部存储（比方说collect收集输出到console）。(比较容易理解，一个要submit的py文件，Jar包，Scala的文件)</p><h3 id="driver"><a class="markdownIt-Anchor" href="#driver"></a> Driver</h3><p>Spark中的<code>Driver</code>感觉其实和yarn中Application Master的功能相类似。主要完成任务的调度以及和<code>executor</code>和<code>cluster manager</code>进行协调。有client和cluster联众模式。client模式driver在任务提交的机器上运行，而cluster模式会随机选择机器中的一台机器启动driver。从spark官网截图的一张图可以大致了解driver的功能。(这个图解释的真好，说明了很多概念的关系)<br /><img src="5.png" alt="官网的介绍" /></p><h3 id="job"><a class="markdownIt-Anchor" href="#job"></a> Job</h3><p>Spark中的Job和MR中Job不一样。MR中Job主要是Map或者Reduce Job。而Spark的Job其实很好区别，一个action算子就算一个Job，比方说<code>count()</code>，<code>first()</code>等。</p><h3 id="task"><a class="markdownIt-Anchor" href="#task"></a> Task</h3><p>Task是Spark中最新的执行单元。RDD一般是带有<code>partitions</code>的，每个<code>partition</code>的在一个<code>executor</code>上的执行可以任务是一个Task。（那宽依赖不是得产生N多个<code>Task</code>?）</p><h3 id="stage"><a class="markdownIt-Anchor" href="#stage"></a> Stage</h3><p>Stage概念是spark中独有的。一般而言一个Job会切换成一定数量的stage。各个stage之间按照顺序执行。至于stage是怎么切分的，首选得知道spark论文中提到的narrow dependency(窄依赖)和wide dependency（ 宽依赖）的概念。其实很好区分，看一下父RDD中的数据是否进入不同的子RDD，如果只进入到一个子RDD则是窄依赖，否则就是宽依赖。宽依赖和窄依赖的边界就是stage的划分点。从spark的论文中的两张截图，可以清楚的理解宽窄依赖以及stage的划分。(前面说明了~ 直接看图)<br /><img src="6.png" alt="我是一张图" /><br /><img src="7.png" alt="我又是一张图" /></p><h3 id="worker"><a class="markdownIt-Anchor" href="#worker"></a> Worker</h3><p>工作节点吧，应该是指（<code>Master - Slave</code>）模式的 <code>Slave</code>。负责计算的节点</p><h3 id="shuffle"><a class="markdownIt-Anchor" href="#shuffle"></a> Shuffle</h3><ol><li>把父RDD中的KV对按照Key重新分区，从而得到一个新的RDD。也就是说原本同属于父RDD同一个分区的数据需要进入到子RDD的不同的分区。(就是宽依赖的重新分区操作?)</li><li>Map-Reduce的输入数据通常是HDFS中的文件，所以数据本地化要求map任务尽量被调度到保存了输入文件的节点执行。但是，有一些计算逻辑是无法简单地获取本地数据的，reduce的逻辑都是如此。对于reduce来说，处理函数的输入是key相同的所有value，但是这些value所在的数据集(即map的输出)位于不同的节点上，因此需要对map的输出进行重新组织，使得同样的key进入相同的reducer。</li><li>shuffle移动了大量的数据，对计算、内存、网络和磁盘都有巨大的消耗，因此，只有确实需要shuffle的地方才应该进行shuffle，否则尽可能避免shuffle。(嗯，点头赞同)</li><li>会触发<code>Shuffle</code>操作的算子:<ul><li>去重操作(<code>distinct</code>)</li><li>聚合操作(<code>reduceByKey</code>、<code>groupBy</code>、<code>groupByKey</code>、<code>aggregateByKey</code>、<code>combineByKey</code>等)</li><li>排序操作(<code>sortBy</code>、<code>sortByKey</code>等)</li><li>重分区操作(<code>repartition</code>、<code>repartitionAndSortWithinPartitions</code>、<code>coalesce(shuffle=true)</code>等)</li><li>集合或者表操作(<code>join</code>、<code>cogroup</code>、<code>leftOuterJoin</code>、<code>intersection</code>、<code>subtract</code>、<code>subtractByKey</code>)</li></ul></li></ol><h3 id="dagscheduler"><a class="markdownIt-Anchor" href="#dagscheduler"></a> DAGScheduler</h3><p>实现将Spark作业分解成一到多个Stage，每个Stage根据RDD的Partition个数决定Task的个数，然后生成相应的Task set放到TaskScheduler中。(挺好奇如何分解的，但先打住，后面填坑)<br />DAGScheduler是任务调度中的其中一个环节，是任务调度的第一步。DAGScheduler是Spark的较高层次的调度器，它实现了面向Stage（stage-oriented）的调度。它把一个通过RDD的转换操作（RDD Transformations）得到的血缘关系（RDD Lineage）转化成多个Stage，然后为每个Stage生成一个任务集（TaskSet），并把该任务集交给TaskScheduler处理。<br />DAGScheduler把每个Job划分成一个或多个Stage，计算和创建一个Stage的DAG，并跟踪RDD和Stage的输出，找出一个最小调度的DAG去执行该Job。然后，它把Stage作为TaskSets传递给TaskScheduler，一个TaskSet包含每个Stage中可以立即执行的独立任务集合。<br /><img src="10.jpg" alt="DAGScheduler的过程" /><br />具体来说DAGScheduler的功能如下：</p><ol><li>划分和创建Stage：根据RDD之间的依赖类型（窄依赖或宽依赖），为每个Job划分和创建Stage，多个Stage之间相互依赖，形成一个DAG（有向无环图）。</li><li>决定运行Task的最佳位置：根据RDD的依赖关系，缓存或Shuffling数据的位置来计算运行Task的最佳位置。</li><li>为每个Stage创建一个TaskSet，并把TaskSet作为参数传递给TaskScheduler。</li><li>处理失败的Stage：为了从失败中恢复，同样的Stage可能会提交多次。例如：由于前一个Stage的map输出文件丢失，TaskScheduler报告了一个任务失败，DAGScheduler会重新提交丢失的Stage。这是通过一个带有FetchFailed或ExecutorLost的CompletionEvent事件检测到的。DAGScheduler将等待一小段时间以查看其他节点或任务是否失败，然后为任何缺失的Stage重新提交TaskSet。</li><li>当任务运行完成后，清空所有的缓存和临时数据。</li><li>处理各种事件，包括内部的事件，也包括Executor端的状态更新等事件。</li></ol><h3 id="taskscheduler"><a class="markdownIt-Anchor" href="#taskscheduler"></a> TaskScheduler</h3><p>实现Task分配到Executor上执行。(偷个懒应该没人知道吧)<br />spark的Task的调度，我们要明白其调度过程，其根据不同的资源管理器拥有不同的调度策略，因此也拥有不同的调度守护进程，这个守护进程管理着集群的资源信息，spark提供了一个基本的守护进程的类，来完成与driver和executor的交互：CoarseGrainedSchedulerBackend，它应该运行在集群资源管理器上，比如yarn等。他收集了集群work机器的一般资源信息。当我们形成tasks将要进行调度的时候，driver进程会与其通信，请求资源的分配和调度，其会把最优的work节点分配给task来执行其任务。而TaskScheduleImpl实现了task调度的过程，采用的调度算法默认的是FIFO的策略，也可以采用公平调度策略。(有点不懂了，后面再回来看)<br /><img src="11.png" alt="源代码调用关系" /></p><h3 id="最后介绍下流程"><a class="markdownIt-Anchor" href="#最后介绍下流程"></a> 最后介绍下流程</h3><p><img src="8.png" alt="又是一张好图" /></p><ol><li>首先在SparkContext初始化的时候会创建DAGScheduler,这个DAGScheduelr每个应用只有一个。然后DAGScheduler创建的时候，会初始化一个事件捕获对象，并且开启监听。之后我们的任务都会发给这个事件监听器，它会按照任务的类型创建不同的任务。</li><li>再从客户端程序方面说，当我们调用action操作的时候，就会触发runjob，它内部其实就是向前面的那个事件监听器提交一个任务。</li><li>最后事件监听器调用DAGScheduler的handleJobSubmitted真正的处理。</li><li>处理的时候，会先创建一个resultStage，每个job只有一个resultstage，其余的都是shuffleStage.然后根据rdd的依赖关系，按照广度优先的思想遍历rdd，遇到shufflerdd就创建一个新的stage。</li><li>形成DAG图后，遍历等待执行的stage列表，如果这个stage所依赖的父stage执行完了，它就可以执行了；否则还需要继续等待。</li><li>最终stage会以taskset的形式，提交给TaskScheduler，然后最后提交给excutor。</li></ol><p><img src="9.png" alt="请叫我图片搬运工" /></p><ol><li>[Applicatio 1] Driver（代表一个Application）</li><li>[Job ==&gt;1] 在SparkContext的创建过程中，sc会创建DAGScheduler和TaskScheduler，DAGScheduler主要对application划分stage，创建一批task放到taskset中用于执行application</li><li>[stage ==&gt;2] 如何来划分stage，是有相应的stage的划分算法–&gt;就根据rdd是否宽依赖来划分的，</li><li>[TaskSet] 假设我们rdd有三个分区partition，那么会产生三个task，存放到TaskSet，</li><li>[Task] TaskScheduler就会接收到DAGScheduler的一个通知吧，从taskSet中推送task任务到worker中的executor进程中去执行任务，在taskscheduler中根据，程序的启动方式，创建一个实现ShedulerBackend</li><li>SchedulerBackend：不同的子类对应不同的集群模式</li></ol><h2 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h2><p>还有个<code>Executor</code>和<code>DataFrame</code>没看，<code>Executor</code>能猜个大概，后面的再找一天对比python库<code>Pandas</code>的<code>DataFrame</code>有哪些异同~<br />明天开始看官方文档，激动搓手手~</p>]]></content>
      
      
      <categories>
          
          <category> 技术栈 </category>
          
          <category> 大数据 </category>
          
          <category> Spark </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> Spark </tag>
            
            <tag> 数据挖掘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spark 深入学习(一)</title>
      <link href="/spark1/"/>
      <url>/spark1/</url>
      
        <content type="html"><![CDATA[<h1 id="开始"><a class="markdownIt-Anchor" href="#开始"></a> 开始</h1><blockquote><p>这段时间真的是忙，但大多数是自己给自己加戏，但是呢？感觉也没多少进步，一会想刷题，一会想看书，一会想娱乐…<br />最后一事无成，惭愧惭愧。<br />所以，想找一个时机，专注于学一样东西，Spark是不二之选。</p></blockquote><span id="more"></span><h2 id="目标"><a class="markdownIt-Anchor" href="#目标"></a> 目标</h2><p>选择 <code>Spark</code> 的原因是，它是目前我最经常使用的工具。但是呢，目前对它的使用仅限于 <code>pyspark</code>，<code>SparkSQL</code>，<code>Spark on Yarn</code>，越深入使用，越对这个框架赞不绝口。把原本龟速的 <code>MapReduce</code> 和 <code>hive</code> 甩飞两条街，以及对计算机内存的合理运用，有效减少了很多 <code>OOM</code> 和 <code>StackOverflow</code> 使得我完成了很多“不可思议”的壮举。这次是想深入了解原理性的东西（RDD）以及更多函数式编程的思想和内置数学计算函数。最后能够达到使用时随心所欲吧，或许学到一半转Flink了哈哈哈哈。</p><h2 id="方法"><a class="markdownIt-Anchor" href="#方法"></a> 方法</h2><p>以官方文档为脉络，从头走到尾。个别酌情跳过。其余不懂的地方大概按这个顺序作为参考或者了解细节</p><ol><li>官方文档</li><li>看别人博客</li><li>源码解析教程</li><li>源码</li><li>Spark论文</li></ol><h2 id="真的要开始了"><a class="markdownIt-Anchor" href="#真的要开始了"></a> 真的要开始了</h2><p>确定一下版本。故意安装不同的版本有助于对比个别更新。</p><ol><li>单机版：Spark 3.0.1</li><li>集群版：2.4.0-cdh6.2.1</li></ol><h2 id="下载"><a class="markdownIt-Anchor" href="#下载"></a> 下载</h2><p>官网下载: <a href="http://spark.apache.org/downloads.html">http://spark.apache.org/downloads.html</a></p><h2 id="基础知识"><a class="markdownIt-Anchor" href="#基础知识"></a> 基础知识</h2><ol><li>Spark : 实现快速通用的集群计算平台</li><li>基于MapReduce的计算引擎通常会将中间结果输出到磁盘上，进行存储和容错。而Spark是基于内存的计算，大部分的计算依赖于内存和缓存。所以速度会快。</li><li>能快速融入 <code>Hadoop</code> 大数据生态系统，函数的名称、数据类型又接近或相同于<code>python</code>的数据分析包 <code>Pandas</code> 和 <code>numpy</code>。学习成本超级无敌低。</li><li>有极强的语言兼容性，Scala是默认的编程语言，Java无缝支持(都是基于<code>JVM</code>)。另外支持 <code>python</code>(pyspark)，R (SparkR)</li><li>有极强的场景兼容性：Spark几乎贯穿了大数据的各种场合，大数据分析、挖掘、批处理、实时查询、流处理、图计算、机器学习。（几乎和 Java后端 的Spring全家桶一样了）</li><li>有极强的平台兼容性：除了兼容 <code>Hadoop</code> 大数据生态，还可以单机运行，运行在 <code>Mesos</code> 里面，运行在 <code>k8s</code> 里面…</li><li>机器学习，兼容（tensorflow）（pytorch）还有自己实现的常用机器学习算法库…</li><li>没了，想想别人要买多贵多贵的显卡去跑 <code>ML</code>，而我只需要把 tf 代码丢集群跑分布式，而且速度一点也不慢就激动地睡不着。</li></ol><h2 id="spark的组件"><a class="markdownIt-Anchor" href="#spark的组件"></a> Spark的组件</h2><p><img src="1.jpg" alt="盗来的图23333" /></p><ol><li>SparkCore：将分布式数据抽象为弹性分布式数据集（RDD），实现了应用任务调度、RPC、序列化和压缩，并为运行在其上的上层组件提供API。</li><li>SparkSQL：Spark Sql 是Spark来操作结构化数据的程序包，可以让我使用SQL语句的方式来查询数据，Spark支持多种数据源，包含Hive表、parquest、text文本、csv以及JSON等内容。</li><li>SparkStreaming： 是Spark提供的实时数据进行流式计算的组件。(<code>Impala</code>、<code>presto</code>、<code>ClickHouse</code> 比它快，但可做参考，优点是可以插入删除，而前两个只能查询)</li><li>MLlib：提供常用机器学习算法的实现库。</li><li>GraphX：提供一个分布式图计算框架，能高效进行图计算。</li><li>BlinkDB：用于在海量数据上进行交互式SQL的近似查询引擎。</li><li>Tachyon：以内存为中心高容错的的分布式文件系统。(用不到, 应该可以当做内存型<code>HDFS</code>)</li></ol><h2 id="rdd弹性分布式数据集"><a class="markdownIt-Anchor" href="#rdd弹性分布式数据集"></a> RDD(弹性分布式数据集)</h2><ol><li>RDD是Spark的核心数据模型，但是个抽象类，全称为<code>Resillient Distributed Dataset</code>，即弹性分布式数据集。</li><li>RDD在抽象上来说是一种元素集合，包含了数据。它是被分区的，分为多个分区，每个分区分布在集群中的不同节点上，从而让RDD中的数据可以被并行操作。(每个分区分配一个线程，多线程同时写入多个文件。并不是多线程同时写入一个文件)</li><li>RDD通常通过<code>Hadoop</code>上的文件，即<code>HDFS</code>文件或者<code>Hive</code>表，来进行创建；有时也可以通过应用程序中的集合来创建。(废话)</li><li>RDD最重要的特性就是，提供了容错性，可以自动从节点失败中恢复过来（极其重要，它能使不稳定的低配的计算节点从计算超时或者网络传输超时中恢复过来并继续计算而不崩溃或者写入部分数据导致数据出现重复或缺失）。即如果某个节点上的RDD Partition，因为节点故障，导致数据丢了，那么RDD会自动通过自己的数据来源重新计算该partition。这一切对使用者是透明的。</li><li>RDD的数据默认情况下存放在内存中的，但是在内存资源不足时，Spark会自动将RDD数据写入磁盘。（弹性）</li></ol><h2 id="明天计划"><a class="markdownIt-Anchor" href="#明天计划"></a> 明天计划</h2><ol><li>在开始啃官方文档前，用一天扫一遍Spark的专业术语。</li><li>学习时，没有统一规划知识结构。先以笔记形式记录，学到哪记到哪。等Spark专题完成后（不会吧不会吧不可能吧？？？如果能专心啃完，就就奖励自己一台MacBook Air M2）再来一次整理知识点~</li><li>内容会随时修改更新，错别字请指出~</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术栈 </category>
          
          <category> 大数据 </category>
          
          <category> Spark </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
            <tag> Spark </tag>
            
            <tag> 数据挖掘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云天池Python(三)</title>
      <link href="/AliyunTianci03/"/>
      <url>/AliyunTianci03/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><blockquote><p>第6-9天的课程：基本的Python基础, 不做详细罗列，这里只记录 <code>知识体系</code> 和 <code>重难点</code>。</p></blockquote><h2 id="星星"><a class="markdownIt-Anchor" href="#星星"></a> 星星</h2><ul><li>困难度 ==&gt; ★★★☆☆☆</li><li>知识量 ==&gt; ★★☆☆☆☆</li><li>掌握度 ==&gt; ★★★☆☆☆</li></ul><span id="more"></span><h2 id="知识体系"><a class="markdownIt-Anchor" href="#知识体系"></a> 知识体系</h2><ul><li>函数<ul><li>函数的定义</li><li>函数的调用</li><li>函数文档</li><li>函数参数</li><li>函数的返回值</li><li>变量作用域</li></ul></li><li>Lambda 表达式<ul><li>匿名函数的定义</li><li>匿名函数的应用</li></ul></li><li>类与对象<ul><li>对象 = 属性 + 方法</li><li>self 是什么？</li><li>Python 的魔法方法</li><li>公有和私有</li><li>继承</li><li>组合</li><li>类、类对象和实例对象</li><li>什么是绑定？</li><li>一些相关的内置函数（BIF）</li></ul></li><li>魔法方法<ul><li>基本的魔法方法</li><li>算术运算符</li><li>反算术运算符</li><li>增量赋值运算符</li><li>一元运算符</li><li>属性访问</li><li>描述符</li><li>定制序列</li><li>迭代器</li></ul></li></ul><h2 id="重难点"><a class="markdownIt-Anchor" href="#重难点"></a> 重难点</h2><h3 id="函数"><a class="markdownIt-Anchor" href="#函数"></a> 函数</h3><ol><li>一切皆对象，函数也为对象。可作为参数和返回值传递。(又有 <code>JS</code> 内味了)</li><li>参数形态</li></ol><ul><li>位置参数 (可相对位置传参, 可按参数名传参)</li><li>默认参数 (参数预设默认值)</li><li>可变参数[元组] (*args 保存可变参数)</li><li>关键字参数[字典] (传参时指定名称的参数, 参数名匹配除外)</li><li>命名关键字参数 (只能按参数名传参)<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nkw 只能按参数名传参否则报错</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">printinfo</span>(<span class="params">arg1, *, nkw, **kwargs</span>):</span><br></pre></td></tr></table></figure></li><li>参数组合：5种参数中的4个都可以一起使用，但是注意，参数定义的顺序必须是：<ul><li>位置参数 - 默认参数 - 可变参数 - 关键字参数</li><li>位置参数 - 默认参数 - 命名关键字参数 - 关键字参数</li></ul></li><li>内嵌函数，闭包(返回值是函数)</li><li>lambda<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 普通</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sqr</span>(<span class="params">x</span>):</span><br><span class="line">  <span class="keyword">return</span> x ** <span class="number">2</span></span><br><span class="line"><span class="comment"># lambda</span></span><br><span class="line"><span class="keyword">lambda</span> argument_list: expression</span><br><span class="line"><span class="comment"># 例子</span></span><br><span class="line">lbd_sqr = <span class="keyword">lambda</span> x: x ** <span class="number">2</span></span><br><span class="line">func = <span class="keyword">lambda</span> *args: <span class="built_in">sum</span>(args)</span><br></pre></td></tr></table></figure></li></ul><h2 id="类对象"><a class="markdownIt-Anchor" href="#类对象"></a> 类&amp;对象</h2><ol><li>继承写在括号里</li><li>构造/析构函数 ，self = this</li></ol>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">__init__, __del__, __new__</span><br><span class="line"><span class="built_in">issubclass</span>()</span><br><span class="line"><span class="built_in">isinstance</span>()</span><br><span class="line"><span class="built_in">hasattr</span>()</span><br><span class="line"><span class="built_in">setattr</span>()</span><br><span class="line"><span class="built_in">getattr</span>()</span><br><span class="line"><span class="built_in">delattr</span>()</span><br><span class="line"><span class="built_in">property</span>() <span class="comment"># 方便使用 class.property</span></span><br></pre></td></tr></table></figure><ol start="3"><li>魔术方法(相当于cpp的操作符重载???)/反运算符</li><li>迭代器/生成器/装饰器</li></ol><ul><li>iter()</li><li>next()</li><li>要实现类的迭代，需要定义__iter__()和__next__()</li><li>yield 返回当前值并保护现场，下次运行到此处继续下一步</li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 数据科学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 函数 </tag>
            
            <tag> 类 </tag>
            
            <tag> 对象 </tag>
            
            <tag> 魔术方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云天池Python(二)</title>
      <link href="/AliyunTianci02/"/>
      <url>/AliyunTianci02/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><blockquote><p>第4-6天的课程：基本的Python基础, 不做详细罗列，这里只记录 <code>知识体系</code> 和 <code>重难点</code>。由于这块涉及到数据结构，会较为详细~</p></blockquote><h2 id="星星"><a class="markdownIt-Anchor" href="#星星"></a> 星星</h2><ul><li>困难度 ==&gt; ★☆☆☆☆☆</li><li>知识量 ==&gt; ★★★★★★</li><li>掌握度 ==&gt; ★★★★★☆</li></ul><span id="more"></span><h2 id="知识体系"><a class="markdownIt-Anchor" href="#知识体系"></a> 知识体系</h2><ol><li>列表<ul><li>列表的定义</li><li>列表的创建</li><li>向列表中添加元素</li><li>删除列表中的元素</li><li>获取列表中的元素</li><li>列表的常用操作符</li><li>列表的其他方法</li></ul></li><li>元组<ul><li>创建和访问一个元组</li><li>更新和删除一个元组</li><li>元组相关的操作符</li><li>内置方法</li><li>解压元组</li></ul></li><li>字符串<ul><li>字符串的定义</li><li>字符串的切片与拼接</li><li>字符串的常用内置方法</li><li>字符串格式化</li></ul></li><li>字典<ul><li>可变类型与不可变类型</li><li>字典的定义</li><li>创建和访问字典</li><li>字典的内置方法</li></ul></li><li>集合<ul><li>集合的创建</li><li>访问集合中的值</li><li>集合的内置方法</li><li>集合的转换</li><li>不可变集合</li></ul></li><li>序列<ul><li>针对序列的内置函数</li></ul></li></ol><h2 id="重难点"><a class="markdownIt-Anchor" href="#重难点"></a> 重难点</h2><h3 id="列表"><a class="markdownIt-Anchor" href="#列表"></a> 列表</h3><ol><li><p>类型：list</p></li><li><p>特点：有序集合，元素可为不同类型，没有固定大小</p></li><li><p>表示：<code>[,,,]</code></p></li><li><p>列表存放的是指向元素的指针</p></li><li><p>推导式创建列表</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">x = [<span class="number">0</span>] * <span class="number">5</span></span><br><span class="line"><span class="comment"># [0, 0, 0, 0, 0]</span></span><br><span class="line">x = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>) <span class="keyword">if</span> (i % <span class="number">2</span>) != <span class="number">0</span> <span class="keyword">and</span> (i % <span class="number">3</span>) == <span class="number">0</span>]</span><br><span class="line"><span class="comment"># [3, 9, 15, 21, 27, 33, 39, 45, 51, 57, 63, 69, 75, 81, 87, 93, 99]</span></span><br><span class="line">x = [[<span class="number">0</span>] * <span class="number">3</span>] * <span class="number">4</span></span><br><span class="line"><span class="comment"># [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]</span></span><br><span class="line"><span class="comment"># ---</span></span><br><span class="line">a = [<span class="number">0</span>] * <span class="number">3</span></span><br><span class="line">y = [a] * <span class="number">4</span></span><br><span class="line">y[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line"><span class="comment"># [[1, 0, 0], [1, 0, 0], [1, 0, 0], [1, 0, 0]]</span></span><br></pre></td></tr></table></figure></li><li><p>函数</p><p>插入删除涉及到位置index, 具体为下图：<br /><img src="1.png" alt="index位置" /></p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">len</span>(<span class="built_in">list</span>) <span class="comment"># 求元素个数</span></span><br><span class="line"><span class="comment"># 添加元素 (如果 seq 为 list, 则 [a, b, c, [seq1, seq2, ...]])</span></span><br><span class="line"><span class="built_in">list</span>.append(obj)</span><br><span class="line"><span class="comment"># 扩展元素 (如果 seq 为 list, 则 [a, b, c, seq1, seq2, ...])</span></span><br><span class="line"><span class="built_in">list</span>.extend(seq)</span><br><span class="line"><span class="built_in">list</span>.insert(index, obj) <span class="comment"># 插入元素</span></span><br><span class="line"><span class="built_in">list</span>.remove(obj) <span class="comment"># 删除元素</span></span><br><span class="line"><span class="built_in">list</span>.pop([index=-<span class="number">1</span>]) <span class="comment"># 弹出元素</span></span><br><span class="line"><span class="keyword">del</span> [start index : end index] <span class="comment"># 删除指定范围元素</span></span><br><span class="line"><span class="built_in">list</span>.count(obj) <span class="comment"># 计算元素出现次数</span></span><br><span class="line"><span class="built_in">list</span>.index(x[, start[, end]]) <span class="comment"># 从指定的 start 到 end 中找到某元素返回索引值</span></span><br><span class="line"><span class="built_in">list</span>.reverse() <span class="comment"># 反转列表 list[::-1]</span></span><br><span class="line"><span class="comment"># 排序</span></span><br><span class="line"><span class="comment"># 1. key 用于排序的 index</span></span><br><span class="line"><span class="comment"># 2. reverse = True 降序， reverse = False 升序（默认）。</span></span><br><span class="line"><span class="built_in">list</span>.sort(key=<span class="literal">None</span>, reverse=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># pop example</span></span><br><span class="line">x = [<span class="string">&#x27;Monday&#x27;</span>, <span class="string">&#x27;Tuesday&#x27;</span>, <span class="string">&#x27;Wednesday&#x27;</span>, <span class="string">&#x27;Thursday&#x27;</span>, <span class="string">&#x27;Friday&#x27;</span>]</span><br><span class="line"><span class="comment"># index: 0(-5)    1(-4)      2(-3)        3(-2)       4(-1)</span></span><br><span class="line">y = x.pop()</span><br><span class="line"><span class="built_in">print</span>(y)  <span class="comment"># Friday</span></span><br><span class="line">y = x.pop(<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(y)  <span class="comment"># Monday</span></span><br><span class="line">y = x.pop(-<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(y)  <span class="comment"># Wednesday</span></span><br><span class="line"><span class="built_in">print</span>(x)  <span class="comment"># [&#x27;Tuesday&#x27;, &#x27;Thursday&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sort example 1</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">takeSecond</span>(<span class="params">elem</span>):</span><br><span class="line"><span class="keyword">return</span> elem[<span class="number">1</span>]</span><br><span class="line">x = [(<span class="number">2</span>, <span class="number">2</span>), (<span class="number">3</span>, <span class="number">4</span>), (<span class="number">4</span>, <span class="number">1</span>), (<span class="number">1</span>, <span class="number">3</span>)]</span><br><span class="line">x.sort(key=takeSecond)</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"><span class="comment"># [(4, 1), (2, 2), (1, 3), (3, 4)]</span></span><br><span class="line"><span class="comment"># sort example 2 lambda 表达式</span></span><br><span class="line">x.sort(key=<span class="keyword">lambda</span> a: a[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"><span class="comment"># [(1, 3), (2, 2), (3, 4), (4, 1)]  </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 浅拷贝与深拷贝</span></span><br><span class="line">list1 = [<span class="number">123</span>, <span class="number">456</span>, <span class="number">789</span>, <span class="number">213</span>]</span><br><span class="line">list2 = list1</span><br><span class="line">list3 = list1[:]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(list2)  <span class="comment"># [123, 456, 789, 213]</span></span><br><span class="line"><span class="built_in">print</span>(list3)  <span class="comment"># [123, 456, 789, 213]</span></span><br><span class="line">list1.sort()</span><br><span class="line"><span class="built_in">print</span>(list2)  <span class="comment"># [123, 213, 456, 789] </span></span><br><span class="line"><span class="built_in">print</span>(list3)  <span class="comment"># [123, 456, 789, 213]</span></span><br><span class="line"></span><br><span class="line">list1 = [[<span class="number">123</span>, <span class="number">456</span>], [<span class="number">789</span>, <span class="number">213</span>]]</span><br><span class="line">list2 = list1</span><br><span class="line">list3 = list1[:]</span><br><span class="line"><span class="built_in">print</span>(list2)  <span class="comment"># [[123, 456], [789, 213]]</span></span><br><span class="line"><span class="built_in">print</span>(list3)  <span class="comment"># [[123, 456], [789, 213]]</span></span><br><span class="line">list1[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">111</span></span><br><span class="line"><span class="built_in">print</span>(list2)  <span class="comment"># [[111, 456], [789, 213]]</span></span><br><span class="line"><span class="built_in">print</span>(list3)  <span class="comment"># [[111, 456], [789, 213]]</span></span><br></pre></td></tr></table></figure></li><li><p>操作符</p><ul><li>等号操作符 <code>==</code> (元素相同且位置相同)</li><li>连接操作符 <code>+</code>  ( = <code>extend()</code> )</li><li>重复操作符 <code>*</code>  (只能 <code>*</code> 整数)</li><li>成员关系操作符 <code>in</code>、<code>not in</code></li></ul></li></ol><h3 id="元组"><a class="markdownIt-Anchor" href="#元组"></a> 元组</h3><ol><li>类型：tuple</li><li>特点：有序集合，元素可为不同类型，固定大小，不可修改 ( <code>immutable</code> )</li><li>表示：<code>(,,,)</code></li><li>列表存放的是指向元素的指针</li><li>元组和列表都属于序列</li><li>列表属于可变序列，它的元素可以随时修改或者删除，而元组属于不可变序列，其中的元素是不能修改的，除非整体重新赋值。</li><li>列表可以使用多种方法实现添加和修改列表元素，而元组没有办法，因为不能想元组中添加或修改元素，同样也不能删除元素</li><li>列表可以使用切片方法访问和修改列表中的元素，元组也支持切片，但是它只支持通过切片访问元组中的元素，不支持修改</li><li>元组比列表中的访问和处理速度更快，所以如果只需要对其中的元素进行访问，而不进行任何修改，建议使用元组。</li><li>列表不能作为字典类型中的键，而元组是可以的。</li><li>元组中只包含一个元素时，需要在元素后面添加逗号，否则括号会被当作运算符使用。</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">x = (<span class="number">1</span>) <span class="comment"># &lt;class &#x27;int&#x27;&gt;</span></span><br><span class="line">x = (<span class="number">1</span>,) <span class="comment"># &lt;class &#x27;tuple&#x27;&gt;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">8</span> * (<span class="number">8</span>))  <span class="comment"># 64</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">8</span> * (<span class="number">8</span>,))  <span class="comment"># (8, 8, 8, 8, 8, 8, 8, 8)</span></span><br><span class="line">x = ((<span class="number">1</span>, <span class="number">10.31</span>, <span class="string">&#x27;python&#x27;</span>), (<span class="string">&#x27;data&#x27;</span>, <span class="number">11</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 只能整体赋值来修改元组</span></span><br><span class="line">week = (<span class="string">&#x27;Monday&#x27;</span>, <span class="string">&#x27;Tuesday&#x27;</span>, <span class="string">&#x27;Thursday&#x27;</span>, <span class="string">&#x27;Friday&#x27;</span>)</span><br><span class="line">week = week[:<span class="number">2</span>] + (<span class="string">&#x27;Wednesday&#x27;</span>,) + week[<span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 内置方法只有2个</span></span><br><span class="line">t = (<span class="number">1</span>, <span class="number">10.31</span>, <span class="string">&#x27;python&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(t.count(<span class="string">&#x27;python&#x27;</span>))  <span class="comment"># 1</span></span><br><span class="line"><span class="built_in">print</span>(t.index(<span class="number">10.31</span>))  <span class="comment"># 1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="12"><li>解压元组</li></ol><blockquote><p>解压元组挺有趣的，第一次听说和使用的是隔壁 JS 的 ES6 的语法 ~<br />（<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment">ES6 - 解构赋值</a>）</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">t = (<span class="number">1</span>, <span class="number">10.31</span>, (<span class="string">&#x27;OK&#x27;</span>, <span class="string">&#x27;python&#x27;</span>))</span><br><span class="line">(a, b, (c, d)) = t</span><br><span class="line"><span class="built_in">print</span>(a, b, c, d)</span><br><span class="line"><span class="comment"># 1 10.31 OK python</span></span><br><span class="line"></span><br><span class="line">t = <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span></span><br><span class="line">a, b, *rest, c = t</span><br><span class="line"><span class="built_in">print</span>(a, b, c)  <span class="comment"># 1 2 5</span></span><br><span class="line"><span class="built_in">print</span>(rest)  <span class="comment"># [3, 4]</span></span><br><span class="line"></span><br><span class="line">t = <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span></span><br><span class="line">a, b, *_ = t</span><br><span class="line"><span class="built_in">print</span>(a, b)  <span class="comment"># 1 2</span></span><br></pre></td></tr></table></figure><h3 id="字符串"><a class="markdownIt-Anchor" href="#字符串"></a> 字符串</h3><ol><li>可以用单引号也可以双引号， 类型 <code>str</code></li><li>转义<table><thead><tr><th style="text-align:center">转义字符</th><th>描述</th></tr></thead><tbody><tr><td style="text-align:center"><code>\\</code></td><td>反斜杠符号</td></tr><tr><td style="text-align:center"><code>\'</code></td><td>单引号</td></tr><tr><td style="text-align:center"><code>\&quot;</code></td><td>双引号</td></tr><tr><td style="text-align:center"><code>\n</code></td><td>换行</td></tr><tr><td style="text-align:center"><code>\t</code></td><td>横向制表符(TAB)</td></tr><tr><td style="text-align:center"><code>\r</code></td><td>回车</td></tr></tbody></table></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 前面加小 r 不转义</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;C:\\Program Files\\Intel\\Wifi\\Help&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">r&#x27;C:\Program Files\Intel\Wifi\Help&#x27;</span>)</span><br><span class="line"><span class="comment"># C:\Program Files\Intel\Wifi\Help</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 三引号为跨行字符串，字符串中 tab \n 会被翻译</span></span><br><span class="line">para_str = <span class="string">&#x27;&#x27;&#x27;这是一个多行字符串的实例</span></span><br><span class="line"><span class="string">多行字符串可以使用制表符</span></span><br><span class="line"><span class="string">TAB ( \t )。</span></span><br><span class="line"><span class="string">也可以使用换行符 [ \n ]。</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>字符串跟元组一样不可修改性，可理解为 C 的 <code>char[]</code>,</li><li>内置方法：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;xiaoxie&#x27;</span></span><br><span class="line"><span class="comment"># 首字符大写</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>.capitalize())  <span class="comment"># Xiaoxie</span></span><br><span class="line"><span class="comment"># 全体小写</span></span><br><span class="line">lower()</span><br><span class="line"><span class="comment"># 全体大写</span></span><br><span class="line">upper()</span><br><span class="line"><span class="comment"># 大小写切换</span></span><br><span class="line">swapcase()</span><br><span class="line"><span class="comment"># 返回字符串 str 在指定范围内出现的次数</span></span><br><span class="line">count(<span class="built_in">str</span>, beg=<span class="number">0</span>, end=<span class="built_in">len</span>(string))</span><br><span class="line"><span class="comment"># 返回在指定范围内是否以字符串 str 开头/结尾</span></span><br><span class="line">startswith(substr, beg=<span class="number">0</span>, end=<span class="built_in">len</span>(string))</span><br><span class="line">endswith(suffix, beg=<span class="number">0</span>, end=<span class="built_in">len</span>(string))</span><br><span class="line"><span class="comment"># 顺序/逆序查找指定范围内是否包含 str, 是返回索引，否则 -1</span></span><br><span class="line">find(<span class="built_in">str</span>, beg=<span class="number">0</span>, end=<span class="built_in">len</span>(string))</span><br><span class="line">rfind(<span class="built_in">str</span>, beg=<span class="number">0</span>, end=<span class="built_in">len</span>(string))</span><br><span class="line"><span class="comment"># 是否只包含数字</span></span><br><span class="line">isnumeric()</span><br><span class="line"><span class="comment"># 左/右对齐字符串，width是长度，fillchar是填充字符。</span></span><br><span class="line"><span class="comment"># 有 C 的 printf(&quot;%-10d\n&quot;, 101010); 内味了</span></span><br><span class="line">ljust(width[, fillchar])</span><br><span class="line">rjust(width[, fillchar])</span><br><span class="line"><span class="comment"># 截掉字符串 左边 / 右边 / 两边 的空格或指定字符</span></span><br><span class="line">lstrip([chars])</span><br><span class="line">rstrip([chars])</span><br><span class="line">strip([chars])</span><br><span class="line"><span class="comment"># 找到子字符串sub，把字符串分为一个三元组 (pre_sub, sub, fol_sub) (str, &#x27;&#x27;, &#x27;&#x27;)</span></span><br><span class="line">partition(sub)</span><br><span class="line"><span class="comment"># 替换/分割，次数</span></span><br><span class="line">replace(old, new [, <span class="built_in">max</span>])</span><br><span class="line">split(<span class="built_in">str</span>=<span class="string">&quot;&quot;</span>, num)</span><br><span class="line"><span class="comment"># 分行 keepends = True，则保留换行符</span></span><br><span class="line">splitlines([keepends])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 最后两个有点东西，方便加密吗</span></span><br><span class="line"><span class="comment"># 创建字符映射的转换表，第一个参数是字符串，表示需要转换的字符，第二个参数也是字符串表示转换的目标。</span></span><br><span class="line">maketrans(intab, outtab)</span><br><span class="line"><span class="comment"># 根据参数table给出的表，转换字符串的字符，要过滤掉的字符放到deletechars参数中。</span></span><br><span class="line">translate(table, deletechars=<span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="comment"># example</span></span><br><span class="line">str7 = <span class="string">&#x27;this is string example....wow!!!&#x27;</span></span><br><span class="line">intab = <span class="string">&#x27;aeiou&#x27;</span></span><br><span class="line">outtab = <span class="string">&#x27;12345&#x27;</span></span><br><span class="line">trantab = str7.maketrans(intab, outtab)</span><br><span class="line"><span class="built_in">print</span>(trantab)  <span class="comment"># &#123;97: 49, 111: 52, 117: 53, 101: 50, 105: 51&#125;</span></span><br><span class="line"><span class="built_in">print</span>(str7.translate(trantab))  <span class="comment"># th3s 3s str3ng 2x1mpl2....w4w!!!</span></span><br></pre></td></tr></table></figure><ol start="5"><li><p>格式化</p><p><code>printf</code> 换汤不换药，不多介绍。</p><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:center">%c</td><td style="text-align:left">格式化字符及其ASCII码</td></tr><tr><td style="text-align:center">%s</td><td style="text-align:left">格式化字符串，用str()方法处理对象</td></tr><tr><td style="text-align:center">%r</td><td style="text-align:left">格式化字符串，用rper()方法处理对象</td></tr><tr><td style="text-align:center">%d</td><td style="text-align:left">格式化整数</td></tr><tr><td style="text-align:center">%o</td><td style="text-align:left">格式化无符号八进制数</td></tr><tr><td style="text-align:center">%x</td><td style="text-align:left">格式化无符号十六进制数</td></tr><tr><td style="text-align:center">%X</td><td style="text-align:left">格式化无符号十六进制数（大写）</td></tr><tr><td style="text-align:center">%f</td><td style="text-align:left">格式化浮点数字，可指定小数点后的精度</td></tr><tr><td style="text-align:center">%e</td><td style="text-align:left">用科学计数法格式化浮点数</td></tr><tr><td style="text-align:center">%E</td><td style="text-align:left">作用同%e，用科学计数法格式化浮点数</td></tr><tr><td style="text-align:center">%g</td><td style="text-align:left">根据值的大小决定使用%f或%e</td></tr><tr><td style="text-align:center">%G</td><td style="text-align:left">作用同%g，根据值的大小决定使用%f或%E</td></tr></tbody></table><hr /><table><thead><tr><th style="text-align:center">符号</th><th style="text-align:left">功能</th></tr></thead><tbody><tr><td style="text-align:center"><code>m.n</code></td><td style="text-align:left">m 是显示的最小总宽度,n 是小数点后的位数（如果可用的话）</td></tr><tr><td style="text-align:center"><code>-</code></td><td style="text-align:left">用作左对齐</td></tr><tr><td style="text-align:center"><code>+</code></td><td style="text-align:left">在正数前面显示加号( + )</td></tr><tr><td style="text-align:center"><code>#</code></td><td style="text-align:left">在八进制数前面显示零(‘0’)，在十六进制前面显示’0x’或者’0X’(取决于用的是’x’还是’X’)</td></tr><tr><td style="text-align:center"><code>0</code></td><td style="text-align:left">显示的数字前面填充’0’而不是默认的空格</td></tr></tbody></table></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str8 = <span class="string">&#x27;&#123;0:.2f&#125;&#123;1&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="number">27.658</span>, <span class="string">&#x27;GB&#x27;</span>)  <span class="comment"># 保留小数点后两位</span></span><br><span class="line"><span class="built_in">print</span>(str8)  <span class="comment"># 27.66GB</span></span><br></pre></td></tr></table></figure><h3 id="字典"><a class="markdownIt-Anchor" href="#字典"></a> 字典</h3><ol><li>类型: <code>dict</code></li><li>无序，Key唯一且不可变<ul><li>能hash() ==&gt; 不可变 ==&gt; 数值字符元组 ==&gt; 修改后 id() 变化</li><li>不能hash() ==&gt; 可变 ==&gt; 列表集合字典 ==&gt; 修改后 id() 不变</li></ul></li><li>字典是 Python 唯一的一个 映射类型，字符串、元组、列表属于序列类型。</li><li>表示：<code>&#123;k:v, k1:v1, k2:v2, k3:v3, ...&#125;</code></li><li>Key唯一，如果多次赋值，后面会覆盖前面的值</li><li>创建字典</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dic1 = <span class="built_in">dict</span>([(<span class="string">&#x27;apple&#x27;</span>, <span class="number">4139</span>), (<span class="string">&#x27;peach&#x27;</span>, <span class="number">4127</span>), (<span class="string">&#x27;cherry&#x27;</span>, <span class="number">4098</span>)])</span><br><span class="line">dic2 = <span class="built_in">dict</span>(((<span class="string">&#x27;apple&#x27;</span>, <span class="number">4139</span>), (<span class="string">&#x27;peach&#x27;</span>, <span class="number">4127</span>), (<span class="string">&#x27;cherry&#x27;</span>, <span class="number">4098</span>)))</span><br><span class="line">dic = <span class="built_in">dict</span>(name=<span class="string">&#x27;Tom&#x27;</span>, age=<span class="number">10</span>)</span><br></pre></td></tr></table></figure><ol start="7"><li>内置方法：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dict</span>.fromkeys(seq) <span class="comment"># 用一个序列作为 key 创建字典</span></span><br><span class="line"><span class="built_in">dict</span>.fromkeys(seq, <span class="number">10</span>) <span class="comment"># 初始化值为10</span></span><br><span class="line"><span class="built_in">dict</span>.fromkeys(seq, (<span class="string">&#x27;小马&#x27;</span>, <span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;男&#x27;</span>)) <span class="comment"># 初始化序列值</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">dict</span>.keys() <span class="comment"># 返回 key 序列 可外面包括 list()</span></span><br><span class="line"><span class="built_in">dict</span>.values() <span class="comment"># 返回 values 序列 可外面包括 list()</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">dict</span>.items() <span class="comment"># 返回全部键值对，可用数组、元组接</span></span><br><span class="line"><span class="built_in">dict</span>.get(key, default=<span class="literal">None</span>) <span class="comment"># get, 和 C# 类似</span></span><br><span class="line"><span class="built_in">dict</span>.setdefault(key, default=<span class="literal">None</span>) <span class="comment"># set, 和 C# 类似</span></span><br><span class="line"></span><br><span class="line">key <span class="keyword">in</span> <span class="built_in">dict</span> <span class="comment"># 字面意思</span></span><br><span class="line">key <span class="keyword">not</span> <span class="keyword">in</span> <span class="built_in">dict</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">dict</span>.pop(key[,default]) <span class="comment"># 弹出 Key 的键值对，Key 不存在则拿 default</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不解释</span></span><br><span class="line"><span class="keyword">del</span> <span class="built_in">dict</span>[key]</span><br><span class="line"><span class="built_in">dict</span>.clear()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 浅复制（浅拷贝父对象（一级目录），子对象（二级目录）不拷贝，还是引用）</span></span><br><span class="line"><span class="comment"># 如果是 直接 a = b, 则只是 a 引用 b, a 随 b 变化而变化。</span></span><br><span class="line"><span class="built_in">dict</span>.copy()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 随机？？？弹出一个键值对，为空则报错 (奇怪的函数？？？)</span></span><br><span class="line"><span class="built_in">dict</span>.popitem()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 很有用的函数，把 dic2 有的键值对更新到 dic, 把重复的 key 更新上 value 值。</span></span><br><span class="line">dic.update(dic2)</span><br></pre></td></tr></table></figure><h3 id="集合"><a class="markdownIt-Anchor" href="#集合"></a> 集合</h3><ol><li>类型： <code>set</code></li><li>无序, Key唯一且不可变, 无索引, 不可切片</li><li>表示：<code>&#123;,,,,&#125;</code></li><li>内置函数：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>.add(elmnt) <span class="comment"># 添加元素 elmnt 可为 字符串，元组，数组，可用来去除重复元素</span></span><br><span class="line"><span class="comment"># 不重复添加，重复不更新，可以为字典，字典只以 key 参与添加</span></span><br><span class="line"><span class="built_in">set</span>.update(<span class="built_in">set</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># add 和 update 不同</span></span><br><span class="line"><span class="comment"># update 他的工作原理是，将 [可迭代对象] 进行 [遍历] 后的元素添加到集合中</span></span><br><span class="line"><span class="comment"># add 不遍历，无脑加</span></span><br><span class="line">x = &#123;<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;orange&quot;</span>, <span class="string">&quot;pear&quot;</span>&#125;</span><br><span class="line">x.add((<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>)) <span class="comment"># &#123;(&#x27;a&#x27;, &#x27;b&#x27;), &#x27;apple&#x27;, &#x27;orange&#x27;, &#x27;pear&#x27;&#125;</span></span><br><span class="line">x.update((<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>)) <span class="comment"># &#123;&#x27;a&#x27;, &#x27;apple&#x27;, &#x27;b&#x27;, &#x27;orange&#x27;, &#x27;pear&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span>.remove(item) <span class="comment"># 移除元素，元素不存在报错</span></span><br><span class="line"><span class="built_in">set</span>.discard(value) <span class="comment"># 移除元素，元素不存在则忽略</span></span><br><span class="line"><span class="built_in">set</span>.pop() <span class="comment"># 随机移除</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 交集</span></span><br><span class="line"><span class="built_in">set</span>.intersection(set1, set2)</span><br><span class="line">set1 &amp; set2</span><br><span class="line"><span class="built_in">set</span>.intersection_update(set1, set2) <span class="comment"># 无返回值，赋值在 set 上</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 并集</span></span><br><span class="line"><span class="built_in">set</span>.union(set1, set2)</span><br><span class="line">set1 | set2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 差集</span></span><br><span class="line"><span class="built_in">set</span>.difference(<span class="built_in">set</span>)</span><br><span class="line">set1 - set2</span><br><span class="line"><span class="built_in">set</span>.difference_update(<span class="built_in">set</span>) <span class="comment"># 无返回值，赋值在 set 上</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 异或</span></span><br><span class="line"><span class="built_in">set</span>.symmetric_difference(<span class="built_in">set</span>)</span><br><span class="line">set1 ^ set2</span><br><span class="line"><span class="built_in">set</span>.symmetric_difference_update(<span class="built_in">set</span>) <span class="comment"># 无返回值，赋值在 set 上</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在否包含(子集)</span></span><br><span class="line"><span class="built_in">set</span>.issubset(<span class="built_in">set</span>)</span><br><span class="line">set1 &lt;= set2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否被包含(超集)</span></span><br><span class="line"><span class="built_in">set</span>.issuperset(<span class="built_in">set</span>)</span><br><span class="line">set1 &gt;= set2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否有相交</span></span><br><span class="line"><span class="built_in">set</span>.isdisjoint(<span class="built_in">set</span>)</span><br></pre></td></tr></table></figure><h3 id="冻结集合不可变集合"><a class="markdownIt-Anchor" href="#冻结集合不可变集合"></a> 冻结集合(不可变集合)</h3><ol><li>类型：<code>frozenset([iterable])</code></li><li>Python 提供了不能改变元素的集合的实现版本，即不能增加或删除元素，类型名叫<code>frozenset</code>。需要注意的是<code>frozenset</code>仍然可以进行集合操作，只是不能用带有<code>update</code>的方法。</li></ol><h3 id="序列"><a class="markdownIt-Anchor" href="#序列"></a> 序列</h3><ol><li>只是一个抽象概念？？？或者是一个通用的接口，用于实现？？？</li><li>序列包括（字符串、列表、元组、集合和字典），其中集合和字典不支持索引、切片、相加和相乘操作。</li><li>内置函数：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不解释</span></span><br><span class="line"><span class="built_in">list</span>(sub)</span><br><span class="line"><span class="built_in">tuple</span>(sub)</span><br><span class="line"><span class="built_in">str</span>(obj)</span><br><span class="line"><span class="built_in">len</span>(s)</span><br><span class="line"><span class="built_in">reversed</span>(seq) <span class="comment"># 反转</span></span><br><span class="line"><span class="built_in">max</span>(sub) <span class="comment"># 取元素最大值，字母按ASCII码？？？</span></span><br><span class="line"><span class="built_in">min</span>(sub)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个函数有点怪怪的，返回序列iterable与可选参数start的总和。</span></span><br><span class="line"><span class="built_in">sum</span>(iterable[, start=<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 排序</span></span><br><span class="line"><span class="comment"># iterable 可迭代对象</span></span><br><span class="line"><span class="comment"># key 主要是用来进行比较的元素，只有一个参数，具体的函数的参数就是取自于可迭代对象中，指定可迭代对象中的一个元素来进行排序。</span></span><br><span class="line"><span class="comment"># reverse False 升序（默认） True 降序</span></span><br><span class="line"><span class="built_in">sorted</span>(iterable, key=<span class="literal">None</span>, reverse=<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">t = (&#123;<span class="string">&quot;age&quot;</span>: <span class="number">20</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;a&quot;</span>&#125;, &#123;<span class="string">&quot;age&quot;</span>: <span class="number">25</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;b&quot;</span>&#125;, &#123;<span class="string">&quot;age&quot;</span>: <span class="number">10</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;c&quot;</span>&#125;)</span><br><span class="line">x = <span class="built_in">sorted</span>(t, key=<span class="keyword">lambda</span> a: a[<span class="string">&quot;age&quot;</span>])</span><br><span class="line"><span class="comment"># [&#123;&#x27;age&#x27;: 10, &#x27;name&#x27;: &#x27;c&#x27;&#125;, &#123;&#x27;age&#x27;: 20, &#x27;name&#x27;: &#x27;a&#x27;&#125;, &#123;&#x27;age&#x27;: 25, &#x27;name&#x27;: &#x27;b&#x27;&#125;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回带索引的序列，索引从 start 开始</span></span><br><span class="line"><span class="built_in">enumerate</span>(sequence, [start=<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">seasons = [<span class="string">&#x27;Spring&#x27;</span>, <span class="string">&#x27;Summer&#x27;</span>, <span class="string">&#x27;Fall&#x27;</span>, <span class="string">&#x27;Winter&#x27;</span>]</span><br><span class="line">a = <span class="built_in">list</span>(<span class="built_in">enumerate</span>(seasons), <span class="number">1</span>)</span><br><span class="line"><span class="comment"># [(1, &#x27;Spring&#x27;), (2, &#x27;Summer&#x27;), (3, &#x27;Fall&#x27;), (4, &#x27;Winter&#x27;)]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩函数，有点东西</span></span><br><span class="line"><span class="comment"># 将对象中对应的元素打包成一个个元组，然后返回由这些元组组成的对象</span></span><br><span class="line"><span class="comment"># 如果各个迭代器的元素个数不一致，则返回列表长度与最短的对象相同</span></span><br><span class="line"><span class="comment"># 利用 * 号操作符，可以将元组解压为列表。</span></span><br><span class="line"><span class="built_in">zip</span>(iter1 [,iter2 [...]])</span><br><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">b = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">c = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line"></span><br><span class="line">zipped = <span class="built_in">zip</span>(a, b)</span><br><span class="line"><span class="built_in">print</span>(zipped)  <span class="comment"># &lt;zip object at 0x000000C5D89EDD88&gt;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(zipped))  <span class="comment"># [(1, 4), (2, 5), (3, 6)]</span></span><br><span class="line">zipped = <span class="built_in">zip</span>(a, c)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(zipped))  <span class="comment"># [(1, 4), (2, 5), (3, 6)]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 一开始不理解，实验后发现是个巨坑</span></span><br><span class="line"><span class="comment"># “zip对象” 是一个迭代器。 迭代器只能前进，不能后退。跟 C 的 next() 差不多</span></span><br><span class="line"><span class="comment"># zip(a, b) 是压缩, 外面的 zip(*)是解压, 解压后赋值a1, a2。</span></span><br><span class="line"><span class="comment"># *zip(a, b)容易看成是整体</span></span><br><span class="line">a1, a2 = <span class="built_in">zip</span>(*<span class="built_in">zip</span>(a, b))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(a1))  <span class="comment"># [1, 2, 3]</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>(a2))  <span class="comment"># [4, 5, 6]</span></span><br></pre></td></tr></table></figure><h2 id="完结撒花"><a class="markdownIt-Anchor" href="#完结撒花"></a> 完结撒花</h2><blockquote><p>坚持不容易, 巨长的内容和超多的知识量(虽然不怎么难), 对新手不容易坚持，就算是有点基础的能坚持不跳过也不容易…</p></blockquote><h3 id="总结一波"><a class="markdownIt-Anchor" href="#总结一波"></a> 总结一波</h3><ol><li>基本一个套路（类型，特点，表示方法，增删改查(切片)方法，内置函数）</li><li>还行的知识点（深拷贝浅拷贝引用，推导式，解压元组，集合的运算，lambda表达式，压缩函数，<code>maketrans</code> 和 <code>translate</code>）</li><li>奇怪的函数（可能为了某种）不知名的用途设计的吧…<ul><li><code>dict.popitem()</code>， <code>set.pop()</code> 为啥要随机弹出</li><li><code>sum(iterable[, start=0])</code> 求和就求和，为啥要加上后面的参数，名字还是 <code>start</code></li><li>序列是 python 实现的一个数据结构还是为了教学而抽象出来的一个概念，或者是 python 抽象的一个接口，其他数据结构来实现它的函数</li></ul></li><li>还有一节就可以开始机器学习啦 ~</li></ol>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 数据科学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云天池Python(一)</title>
      <link href="/AliyunTianci01/"/>
      <url>/AliyunTianci01/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><blockquote><p>第1-3天的课程：基本的Python基础, 不做详细罗列，这里只记录 <code>知识体系</code> 和 <code>重难点</code>。</p></blockquote><h2 id="星星"><a class="markdownIt-Anchor" href="#星星"></a> 星星</h2><ul><li>困难度 ==&gt; ☆☆☆☆☆☆</li><li>知识量 ==&gt; ★★★☆☆☆</li><li>掌握度 ==&gt; ★★★★★☆</li></ul><span id="more"></span><h2 id="知识体系"><a class="markdownIt-Anchor" href="#知识体系"></a> 知识体系</h2><ul><li>变量、运算符与数据类型<ul><li>注释</li><li>运算符</li><li>变量和赋值</li><li>数据类型与转换</li><li>print() 函数</li></ul></li><li>位运算<ul><li>原码、反码和补码</li><li>按位非操作 ~</li><li>按位与操作 &amp;</li><li>按位或操作 |</li><li>按位异或操作 ^</li><li>按位左移操作 &lt;&lt;</li><li>按位右移操作 &gt;&gt;</li><li>利用位运算实现快速计算</li><li>利用位运算实现整数集合</li></ul></li><li>条件语句<ul><li>if 语句</li><li>if - else 语句</li><li>if - elif - else 语句</li><li>assert 关键词</li></ul></li><li>循环语句<ul><li>while 循环</li><li>while - else 循环</li><li>for 循环</li><li>for - else 循环</li><li>range() 函数</li><li>enumerate()函数</li><li>break 语句</li><li>continue 语句</li><li>pass 语句</li><li>推导式</li></ul></li><li>异常处理<ul><li>Python 标准异常总结</li><li>Python 标准警告总结</li><li>try - except 语句</li><li>try - except - finally 语句</li><li>try - except - else 语句</li><li>raise语句</li></ul></li></ul><h2 id="重难点"><a class="markdownIt-Anchor" href="#重难点"></a> 重难点</h2><ol><li><p>多行注释</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">这是多行注释，用三个单引号</span></span><br><span class="line"><span class="string">这是多行注释，用三个单引号</span></span><br><span class="line"><span class="string">这是多行注释，用三个单引号</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello china&quot;</span>) </span><br><span class="line"><span class="comment"># Hello china</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">这是多行注释，用三个双引号</span></span><br><span class="line"><span class="string">这是多行注释，用三个双引号 </span></span><br><span class="line"><span class="string">这是多行注释，用三个双引号</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello china&quot;</span>) </span><br><span class="line"><span class="comment"># hello china</span></span><br></pre></td></tr></table></figure></li><li><p>运算符</p><blockquote><p>需要注意的是，与其他语言不同，个别运算符用法不一样。</p></blockquote> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注释分别是 运算结果 运算符意义 Java中的运算符</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">3</span> // <span class="number">4</span>)                  <span class="comment"># 0 整除 /</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">2</span> ** <span class="number">3</span>)                  <span class="comment"># 8 求幂 ^</span></span><br><span class="line"><span class="built_in">print</span>((<span class="number">3</span> &gt; <span class="number">2</span>) <span class="keyword">and</span> (<span class="number">3</span> &lt; <span class="number">5</span>))     <span class="comment"># True 与 &amp;&amp;</span></span><br><span class="line"><span class="built_in">print</span>((<span class="number">1</span> &gt; <span class="number">3</span>) <span class="keyword">or</span> (<span class="number">9</span> &lt; <span class="number">2</span>))      <span class="comment"># False 或 ||</span></span><br><span class="line"><span class="built_in">print</span>(<span class="keyword">not</span> (<span class="number">2</span> &gt; <span class="number">1</span>))             <span class="comment"># False 非 !</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">4</span> <span class="keyword">if</span> <span class="number">4</span> &lt; <span class="number">7</span> <span class="keyword">else</span> <span class="number">7</span>)       <span class="comment"># 4 三目(元)运算符 4 &lt; 7 ? 4 : 7</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;A&#x27;</span> <span class="keyword">in</span> [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>])  <span class="comment"># True 是否存在</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;A&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>])  <span class="comment"># False 是否不存在</span></span><br><span class="line"><span class="comment"># python 的 is, not is 比较内存地址; ==, != 比较数值</span></span><br><span class="line"><span class="comment"># java   的 ==, != 比较内存地址; Object.equals() 比较数值</span></span><br><span class="line"><span class="built_in">print</span>(a <span class="keyword">is</span> b)                  <span class="comment"># 是 ==</span></span><br><span class="line"><span class="built_in">print</span>(a <span class="keyword">not</span> <span class="keyword">is</span> b)              <span class="comment"># 不是 !=</span></span><br></pre></td></tr></table></figure></li><li><p>print函数原型</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(*objects, sep=<span class="string">&#x27; &#x27;</span>, end=<span class="string">&#x27;\n&#x27;</span>, file=sys.stdout, flush=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p>打印输出</p><ul><li><code>objects</code> 输出的对象</li><li><code>sep</code> 多参数输出分隔符</li><li><code>end</code> 输出结束字符</li><li><code>file</code> 输出的文件</li><li><code>flush</code> 输出到流文件，不作缓存</li></ul></li><li><p>流程控制</p><ul><li><code>elif</code> = <code>else if</code></li><li><code>while - else</code> 正常循环执行 <code>else</code> , 异常 ( <code>break</code> ) 不执行 <code>else</code>.</li><li><code>for - in</code> = <code>foreach</code></li><li><code>for - else</code> 正常循环执行 <code>else</code> , 异常 ( <code>break</code> ) 不执行 <code>else</code>.</li></ul></li><li><p>range 函数</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">range</span>([start,] stop[, step=<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>生成指定序列</p><ul><li><code>start</code> 开始(包括这个数)</li><li><code>stop</code> 结束(不包括这个数)</li><li><code>step</code> 步长</li></ul></li><li><p>enumerate()函数</p> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">enumerate</span>(sequence, [start=<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>生成枚举对象</p><ul><li>sequence：一个序列、迭代器或其他支持迭代对象。</li><li>start：下标起始位置。</li><li>返回 enumerate(枚举) 对象和索引值</li></ul> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">languages = [<span class="string">&#x27;Python&#x27;</span>, <span class="string">&#x27;R&#x27;</span>, <span class="string">&#x27;Matlab&#x27;</span>, <span class="string">&#x27;C++&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> i, language <span class="keyword">in</span> <span class="built_in">enumerate</span>(languages, <span class="number">2</span>):</span><br><span class="line">    <span class="built_in">print</span>(i, <span class="string">&#x27;I love&#x27;</span>, language)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Done!&#x27;</span>)</span><br><span class="line"><span class="comment"># 2 I love Python</span></span><br><span class="line"><span class="comment"># 3 I love R</span></span><br><span class="line"><span class="comment"># 4 I love Matlab</span></span><br><span class="line"><span class="comment"># 5 I love C++</span></span><br><span class="line"><span class="comment"># Done!</span></span><br></pre></td></tr></table></figure></li><li><p><code>pass</code> = <code>;</code></p></li><li><p>推导式</p><blockquote><p>Java 没有 !!!</p></blockquote> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ expr <span class="keyword">for</span> value <span class="keyword">in</span> collection [<span class="keyword">if</span> condition] ]</span><br></pre></td></tr></table></figure><ul><li><code>expr</code> 计算表达式</li><li><code>value</code> 集合中取出的值</li><li><code>collection</code> 遍历的集合</li><li><code>condition</code> 条件筛选</li></ul> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = [i * <span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>) <span class="keyword">if</span> (i % <span class="number">2</span>) != <span class="number">0</span> <span class="keyword">and</span> (i % <span class="number">3</span>) == <span class="number">0</span>]</span><br><span class="line"><span class="comment"># [6, 18, 30, 42, 54, 66, 78, 90, 102, 114, 126, 138, 150, 162, 174, 186, 198]</span></span><br></pre></td></tr></table></figure></li><li><p>异常处理</p></li></ol><blockquote><p>Python 标准异常总结</p></blockquote><pre><code>- BaseException：所有异常的基类- Exception：常规异常的基类- StandardError：所有的内建标准异常的基类- ArithmeticError：所有数值计算异常的基类- FloatingPointError：浮点计算异常- OverflowError：数值运算超出最大限制- ZeroDivisionError：除数为零- AssertionError：断言语句（assert）失败- AttributeError：尝试访问未知的对象属性- EOFError：没有内建输入，到达EOF标记- EnvironmentError：操作系统异常的基类- IOError：输入/输出操作失败- OSError：操作系统产生的异常（例如打开一个不存在的文件）- WindowsError：系统调用失败- ImportError：导入模块失败的时候- KeyboardInterrupt：用户中断执行- LookupError：无效数据查询的基类- IndexError：索引超出序列的范围- KeyError：字典中查找一个不存在的关键字- MemoryError：内存溢出（可通过删除对象释放内存）- NameError：尝试访问一个不存在的变量- UnboundLocalError：访问未初始化的本地变量- ReferenceError：弱引用试图访问已经垃圾回收了的对象- RuntimeError：一般的运行时异常- NotImplementedError：尚未实现的方法- SyntaxError：语法错误导致的异常- IndentationError：缩进错误导致的异常- TabError：Tab和空格混用- SystemError：一般的解释器系统异常- TypeError：不同类型间的无效操作- ValueError：传入无效的参数- UnicodeError：Unicode相关的异常- UnicodeDecodeError：Unicode解码时的异常- UnicodeEncodeError：Unicode编码错误导致的异常- UnicodeTranslateError：Unicode转换错误导致的异常</code></pre><p>异常体系内部有层次关系，Python异常体系中的部分关系如下所示：</p><p><img src="https://img-blog.csdnimg.cn/20200710131404548.png" alt="" /></p><blockquote><p>Python标准警告总结</p></blockquote><pre><code>- Warning：警告的基类- DeprecationWarning：关于被弃用的特征的警告- FutureWarning：关于构造将来语义会有改变的警告- UserWarning：用户代码生成的警告- PendingDeprecationWarning：关于特性将会被废弃的警告- RuntimeWarning：可疑的运行时行为(runtime behavior)的警告- SyntaxWarning：可疑语法的警告- ImportWarning：用于在导入模块过程中触发的警告- UnicodeWarning：与Unicode相关的警告- BytesWarning：与字节或字节码相关的警告- ResourceWarning：与资源使用相关的警告</code></pre><blockquote><p>异常捕捉</p></blockquote><ol><li><p><code>try - except</code> ：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>try - except - finally</code> :</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>try - except - else</code> :</p><p>如果在 <code>try</code> 子句执行时没有发生异常，Python将执行 <code>else</code> 语句后的语句。</p></li><li><p><code>raise</code> = <code>throw</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 数据科学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习资源汇总</title>
      <link href="/StudySummary/"/>
      <url>/StudySummary/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><blockquote><p>看过我的Chrome书签的小伙伴都知道，里面全部都是文件夹，每个文件夹里面都是大大小小的收藏的网站和二级文件夹，里面分了26大类和一些二级的类别，逐渐感觉比较臃肿庞大，除去少部分个人喜好的文件夹，剩下的全是技术网站的收藏，这也就是我创建博客的目的(一开始挺抵触的)。</p></blockquote><blockquote><p>在整理我所学习过的网站中，收藏的都是非常有用的一些技术文档和工具网站以及学习网站，由此萌生出一个想法，将这些非常有用的一些网站收集起来，加以分类，然后制作成超链接形式。方便自己和方便大家学习。</p></blockquote><span id="more"></span><h2 id="汇总状态"><a class="markdownIt-Anchor" href="#汇总状态"></a> 汇总状态：</h2><p><code>持续更新中......</code></p><p>如果你想提供学习资源网址，可以在下方评论，我看到会更新~ 😁</p><h1 id="汇总"><a class="markdownIt-Anchor" href="#汇总"></a> 汇总</h1><blockquote><p>人无完人，一个人的时间和经历终究有限。学海无涯，只有不断向前跑和不断总结，才能取得非凡成就。站的更高，看得更远，我们因为拥有前辈无数人的积累，计算机行业的发展才有如此迅速，才有现在各种技术萌芽和长大。但不要忘了，就算是多么伟大的技术的产生，都脱离不开基础算法和与或非门的逻辑元件和背后的设计思想，那才是人类文明的结晶。</p></blockquote><h2 id="开发语言"><a class="markdownIt-Anchor" href="#开发语言"></a> 开发语言</h2><h3 id="cccpp"><a class="markdownIt-Anchor" href="#cccpp"></a> C/C++(cpp)</h3><ul><li>C语言中文网 <a href="http://c.biancheng.net/">http://c.biancheng.net/</a></li><li>C++参考手册 <a href="https://zh.cppreference.com/">https://zh.cppreference.com/</a></li><li>Visual C++参考文档 <a href="https://docs.microsoft.com/zh-cn/cpp/">https://docs.microsoft.com/zh-cn/cpp/</a></li><li><a href="http://cplusplus.com/">http://cplusplus.com/</a></li><li>c++11最新特性(auto, 智能指针)</li><li>gdb 调试</li><li>make makefile</li><li>stl 六大组件(源码)</li><li>c++ 宏展开</li><li>静态链接和动态链接</li><li>struct 和 class 的区别</li><li>C++多重继承的构造与析构的顺序</li></ul><h4 id="编译器"><a class="markdownIt-Anchor" href="#编译器"></a> 编译器</h4><ul><li>MinGW <a href="http://www.mingw.org/">http://www.mingw.org/</a></li><li>MSVC <a href="https://visualstudio.microsoft.com/zh-hans/vs/">https://visualstudio.microsoft.com/zh-hans/vs/</a></li><li>TDM-GCC <a href="http://tdm-gcc.tdragon.net/download">http://tdm-gcc.tdragon.net/download</a></li><li>Cygwin <a href="http://www.cygwin.com/">http://www.cygwin.com/</a></li><li>LLVM <a href="http://llvm.org/">http://llvm.org/</a></li><li>Clang <a href="http://clang.llvm.org">http://clang.llvm.org</a></li></ul><h3 id="java"><a class="markdownIt-Anchor" href="#java"></a> Java</h3><blockquote><p>一个就够了。基础看<code>W3Cschool</code>和<code>runoob</code>。进阶看书和刷题(见算法)</p></blockquote><ul><li>Jdk8 API文档 <a href="https://docs.oracle.com/javase/8/docs/api/">https://docs.oracle.com/javase/8/docs/api/</a></li><li>java IO netty mina akka grizzly socket</li><li>java 排查工具 jps, jstack…</li><li>高阶搜索关键词：<ul><li><code>垃圾回收机制</code></li><li><code>Java代理模式</code></li><li><code>java反射机制</code></li><li><code>Java注解</code></li><li><code>依赖注入、泛型原理、解析与分派</code></li><li><code>Java内核、内存模型</code></li><li><code>IOC/AOP</code></li><li><code>多线程、各种锁</code></li><li><code>JVM内存模型、内存优化，内存泄漏排查，OOM、JMM、volatile, 100% CPU 排查</code></li><li><code>CPU过高处理</code></li><li><code>类加载器</code></li><li><code>Hashmap, HashTable, ConcurrentHashMap底层实现原理</code></li></ul></li></ul><h3 id="python"><a class="markdownIt-Anchor" href="#python"></a> Python</h3><blockquote><p>简洁的代码和超快的开发速度。Python2已经不维护了，不要使用了。学完基础，看官方文档，然后就可以做自己喜欢的事情了。</p></blockquote><ul><li>Python3官方文档 <a href="https://docs.python.org/zh-cn/3/">https://docs.python.org/zh-cn/3/</a></li><li>pip</li></ul><h4 id="爬虫"><a class="markdownIt-Anchor" href="#爬虫"></a> 爬虫</h4><ul><li>requests</li><li>Selenium(无头浏览器)</li><li>lxml</li><li>Beautiful Soup</li><li>Scrapy</li><li>cola</li><li>PySpider</li></ul><h4 id="科学计算"><a class="markdownIt-Anchor" href="#科学计算"></a> 科学计算</h4><ul><li>numpy</li><li>Scipy</li><li>matplotlib</li><li>pandas</li><li>tensorflow</li><li>Anaconda</li></ul><h4 id="web应用开发"><a class="markdownIt-Anchor" href="#web应用开发"></a> Web应用开发</h4><ul><li>Django <a href="http://www.djangoproject.com/">http://www.djangoproject.com/</a></li><li>Bottle <a href="http://www.bottlepy.org/docs/dev/">http://www.bottlepy.org/docs/dev/</a></li><li>Flask <a href="http://flask.pocoo.org/">http://flask.pocoo.org/</a></li></ul><h4 id="图形界面应用开发"><a class="markdownIt-Anchor" href="#图形界面应用开发"></a> 图形界面应用开发</h4><ul><li>PyQt</li></ul><h4 id="3d游戏"><a class="markdownIt-Anchor" href="#3d游戏"></a> 3D游戏</h4><ul><li>Pygame</li><li>cocos2d <a href="http://python.cocos2d.org">http://python.cocos2d.org</a></li></ul><h3 id="c"><a class="markdownIt-Anchor" href="#c"></a> C#</h3><h3 id="visual-basic"><a class="markdownIt-Anchor" href="#visual-basic"></a> Visual Basic</h3><h3 id="javascript"><a class="markdownIt-Anchor" href="#javascript"></a> Javascript</h3><h4 id="dom"><a class="markdownIt-Anchor" href="#dom"></a> DOM</h4><h4 id="bom"><a class="markdownIt-Anchor" href="#bom"></a> BOM</h4><h4 id="ecmascript"><a class="markdownIt-Anchor" href="#ecmascript"></a> ECMAscript</h4><h3 id="php"><a class="markdownIt-Anchor" href="#php"></a> PHP</h3><h3 id="sql"><a class="markdownIt-Anchor" href="#sql"></a> SQL</h3><h3 id="go"><a class="markdownIt-Anchor" href="#go"></a> Go</h3><h3 id="matlab"><a class="markdownIt-Anchor" href="#matlab"></a> Matlab</h3><h3 id="assembly-language"><a class="markdownIt-Anchor" href="#assembly-language"></a> Assembly Language</h3><ul><li>debug程序</li></ul><h3 id="kotlin"><a class="markdownIt-Anchor" href="#kotlin"></a> Kotlin</h3><h3 id="lua"><a class="markdownIt-Anchor" href="#lua"></a> Lua</h3><h3 id="typescript"><a class="markdownIt-Anchor" href="#typescript"></a> TypeScript</h3><h3 id="julia"><a class="markdownIt-Anchor" href="#julia"></a> Julia</h3><h3 id="erlang"><a class="markdownIt-Anchor" href="#erlang"></a> Erlang</h3><h2 id="软件工程或相关概念性"><a class="markdownIt-Anchor" href="#软件工程或相关概念性"></a> 软件工程(或相关概念性)</h2><h3 id="设计模式使用场景"><a class="markdownIt-Anchor" href="#设计模式使用场景"></a> 设计模式(使用场景)</h3><ul><li>单例模式</li><li>工厂模式</li><li>适配器模式</li><li>门面与状态模式</li></ul><h3 id="版本管理"><a class="markdownIt-Anchor" href="#版本管理"></a> 版本管理</h3><p>git/svn</p><h3 id="软件测试"><a class="markdownIt-Anchor" href="#软件测试"></a> 软件测试</h3><h3 id="分布式"><a class="markdownIt-Anchor" href="#分布式"></a> 分布式</h3><h3 id="负载均衡"><a class="markdownIt-Anchor" href="#负载均衡"></a> 负载均衡</h3><h2 id="前端"><a class="markdownIt-Anchor" href="#前端"></a> 前端</h2><h3 id="htmlcss"><a class="markdownIt-Anchor" href="#htmlcss"></a> HTML+CSS</h3><h3 id="html5css3"><a class="markdownIt-Anchor" href="#html5css3"></a> HTML5+CSS3</h3><h3 id="javascript-2"><a class="markdownIt-Anchor" href="#javascript-2"></a> JavaScript</h3><ol><li>Js基础教程、js内置对象常用方法、常见DOM树操作大全、ECMAscript、DOM、BOM、定时器和焦点图。</li><li>常见特效、例如：tab、导航、整页滚动、轮播图、JS制作幻灯片、弹出层、手风琴菜单、瀑布流布局、滚动事件、滚差视图。</li><li>正则表达式、排序算法、递归算法、闭包、函数节流、作用域链、基于距离运动框架、面向对象基础。</li></ol><h3 id="jquery"><a class="markdownIt-Anchor" href="#jquery"></a> JQuery</h3><h3 id="bootstrap"><a class="markdownIt-Anchor" href="#bootstrap"></a> Bootstrap</h3><h3 id="ajax"><a class="markdownIt-Anchor" href="#ajax"></a> AJAX</h3><p>JSON和JSON解析、数据绑定和模板技术、JSONP、跨域技术、图片预读取和lazy-load技术、JQuery框架中的AjaxAPI、使用Ajax实现爆布流案例额。</p><h3 id="es6"><a class="markdownIt-Anchor" href="#es6"></a> ES6</h3><h3 id="模块化"><a class="markdownIt-Anchor" href="#模块化"></a> 模块化</h3><p>AMD设计规范、CMD设计规范、RequireJS，LoadJS、淘宝的SeaJS。</p><h3 id="nodejs"><a class="markdownIt-Anchor" href="#nodejs"></a> Node.js</h3><p>Yeoman脚手架、NPM/Bower依赖管理工具、Grunt/Gulp/Webpack。</p><h3 id="mvcmvvmmvw"><a class="markdownIt-Anchor" href="#mvcmvvmmvw"></a> MVC/MVVM/MVW</h3><p>Angular.js、Backbone.js、Knockout/Ember、React.js、Vue.js、Zepto.js。</p><h3 id="html5移动端"><a class="markdownIt-Anchor" href="#html5移动端"></a> HTML5移动端</h3><h4 id="cordova"><a class="markdownIt-Anchor" href="#cordova"></a> Cordova：</h4><p>WebApp/NativeApp/HybirdApp简介、Cordova简介、与PhoneGap之间的关系、开发环境搭建、Cordova实战（创建项目，配置，编译，调试，部署发布）。<br />Ionic：<br />Ionic简介和同类对比、模板项目解析、常见组件及使用、结合Angular构建APP、常见效果（下拉刷新，上拉加载，侧滑导航，选项卡）。</p><p>React Native：<br />React Native简介、React Native环境配置、创建项目，配置，编译，调试，部署发布、原生模块和UI组件、原生常用API。</p><p>HTML5+：<br />HTML5+中国产业联盟、HTML5 Plus Runtime环境、HBuilder开发工具、MUI框架、H5+开发和部署。</p><h2 id="后端"><a class="markdownIt-Anchor" href="#后端"></a> 后端</h2><blockquote><p>以Java为主，其他语言的后端都在对应语言中介绍<br />从servlet到SpringCloud</p></blockquote><h3 id="servlet"><a class="markdownIt-Anchor" href="#servlet"></a> servlet</h3><h3 id="struct2"><a class="markdownIt-Anchor" href="#struct2"></a> struct2</h3><h3 id="tomcat-webxml"><a class="markdownIt-Anchor" href="#tomcat-webxml"></a> tomcat web.xml</h3><h3 id="springmvcspring-bean-spring-context-aop-ioc"><a class="markdownIt-Anchor" href="#springmvcspring-bean-spring-context-aop-ioc"></a> SpringMVC(Spring bean Spring Context, AOP, IOC)</h3><h3 id="springboot"><a class="markdownIt-Anchor" href="#springboot"></a> SpringBoot</h3><h3 id="springcloud"><a class="markdownIt-Anchor" href="#springcloud"></a> SpringCloud</h3><h2 id="数据库"><a class="markdownIt-Anchor" href="#数据库"></a> 数据库</h2><p>第二范式，第三范式，星型模型，雪花模型，E-R模型<br />SQL执行顺序(from, join, where, having, order by, group by, limit )<br />inner join, left join</p><h3 id="连接池驱动"><a class="markdownIt-Anchor" href="#连接池驱动"></a> 连接池(驱动)</h3><ul><li>JDBC</li><li>C3PO</li><li>durid</li></ul><h3 id="mysql索引"><a class="markdownIt-Anchor" href="#mysql索引"></a> MySQL(索引)</h3><h3 id="redis"><a class="markdownIt-Anchor" href="#redis"></a> Redis</h3><ul><li>redis持久化方式</li><li>key过期策略</li></ul><h3 id="mongodb"><a class="markdownIt-Anchor" href="#mongodb"></a> Mongodb</h3><h3 id="neo4j"><a class="markdownIt-Anchor" href="#neo4j"></a> neo4j</h3><h3 id="hive"><a class="markdownIt-Anchor" href="#hive"></a> hive</h3><h3 id="hbase"><a class="markdownIt-Anchor" href="#hbase"></a> hbase</h3><h2 id="网络"><a class="markdownIt-Anchor" href="#网络"></a> 网络</h2><ul><li>四次挥手(第几次挥手, 最后一次ACK没收到怎么办)</li><li>TCP/UDP区别使用场景</li><li>TCP/UDP报文结构</li><li>滑动窗口协议</li><li>socket</li><li>accept方法阻塞（Java和C++实现）</li><li>长连接</li><li>keep-alive</li><li>time_wait状态</li><li>session token cookies</li><li>http、tcp/ip restful风格</li><li>网络状态码( 200, 302, 404, 500)</li><li>网络拓扑结构</li><li>epoll (水平触发/边缘触发)</li><li>HttpDNS / LocalDNS</li><li>DNS 导流</li></ul><h2 id="中间件"><a class="markdownIt-Anchor" href="#中间件"></a> 中间件</h2><ul><li>apache http</li><li>nginx<br />反向代理，https配置</li><li>tomcat</li><li>rabbitmq</li><li>rocketmq</li><li>rpc框架</li><li>kafka</li><li>ribbon</li><li>feign</li><li>spring config</li><li>hystrix</li><li>dubbo</li><li>ZooKeeper</li><li>sentinel</li><li>nacos / eureka</li><li>netflix</li><li>spring stream</li></ul><h2 id="产品架构"><a class="markdownIt-Anchor" href="#产品架构"></a> 产品架构</h2><p>要点，实现难点</p><ul><li>直播架构(广播风暴)</li><li>秒杀系统(高并发，并发量，吞吐评估)</li><li>多人协作在线文档(版本冲突等问题)</li><li>微服务架构</li><li>业务中台/数据中台，大中台，小前台</li><li>同城容灾/异地容灾</li><li>分布式架构(rpc远程调用, 分布式文件系统, 幂等性[业务幂等, 请求幂等], 分布式事务[AT, XA, SA, GA, TCC], 集群容错)</li></ul><h2 id="linux相关"><a class="markdownIt-Anchor" href="#linux相关"></a> linux相关</h2><ul><li>linux信号机制</li><li>swap 分区</li></ul><h3 id="命令"><a class="markdownIt-Anchor" href="#命令"></a> 命令</h3><ul><li>ps -ef</li><li>kill -9</li><li>端口号/进程互查</li><li>top/htop</li><li>系统信息/硬件信息/网络信息( netstat / tcpdump / ipcs / ipcrm )</li><li>cat / nano / vi / vim / tail -f / head -n / grep</li><li>linux管道符</li><li>文件 cd / pwd / . / … / ~ /</li></ul><h2 id="安卓开发"><a class="markdownIt-Anchor" href="#安卓开发"></a> 安卓开发</h2><h2 id="ios开发"><a class="markdownIt-Anchor" href="#ios开发"></a> IOS开发</h2><h2 id="小程序开发"><a class="markdownIt-Anchor" href="#小程序开发"></a> 小程序开发</h2><h3 id="微信小程序"><a class="markdownIt-Anchor" href="#微信小程序"></a> 微信小程序</h3><h3 id="支付宝小程序"><a class="markdownIt-Anchor" href="#支付宝小程序"></a> 支付宝小程序</h3><h2 id="混合式开发"><a class="markdownIt-Anchor" href="#混合式开发"></a> 混合式开发</h2><ul><li>react native</li><li>混合式开发平台</li></ul><h2 id="windows客户端开发"><a class="markdownIt-Anchor" href="#windows客户端开发"></a> Windows客户端开发</h2><ul><li>PE文件(EXE、DLL、OCX、SYS、COM)结构</li></ul><h2 id="算法与数据结构"><a class="markdownIt-Anchor" href="#算法与数据结构"></a> 算法与数据结构</h2><h3 id="排序"><a class="markdownIt-Anchor" href="#排序"></a> 排序</h3><p>复杂度（时间复杂度和空间复杂度）</p><h4 id="常见排序"><a class="markdownIt-Anchor" href="#常见排序"></a> 常见排序</h4><p>有序数组排序<br />二分法<br />拓扑排序</p><h3 id="递归"><a class="markdownIt-Anchor" href="#递归"></a> 递归</h3><h3 id="搜索"><a class="markdownIt-Anchor" href="#搜索"></a> 搜索</h3><ul><li>深度优先搜索</li><li>广度优先搜索</li></ul><h3 id="哈希算法"><a class="markdownIt-Anchor" href="#哈希算法"></a> 哈希算法</h3><h3 id="gc算法"><a class="markdownIt-Anchor" href="#gc算法"></a> GC算法</h3><h3 id="rpc有关"><a class="markdownIt-Anchor" href="#rpc有关"></a> rpc有关</h3><ul><li>流量调度的最短路径</li><li>容错算法</li><li>拥堵算法</li><li>排名堆算法</li></ul><h3 id="分布式全局id生成器snowflake雪花算法"><a class="markdownIt-Anchor" href="#分布式全局id生成器snowflake雪花算法"></a> 分布式全局ID生成器(snowflake雪花算法)</h3><h3 id="数据结构"><a class="markdownIt-Anchor" href="#数据结构"></a> 数据结构</h3><h4 id="数组"><a class="markdownIt-Anchor" href="#数组"></a> 数组</h4><ul><li>队列</li><li>链表</li><li>散列表？</li><li>跳表？</li></ul><h4 id="树"><a class="markdownIt-Anchor" href="#树"></a> 树</h4><ul><li>二叉树(前序, 中序, 后序遍历)</li><li>红黑树</li><li>B+树</li><li>B-树</li><li>字典树</li><li>哈夫曼树</li></ul><h4 id="图"><a class="markdownIt-Anchor" href="#图"></a> 图</h4><h4 id="堆"><a class="markdownIt-Anchor" href="#堆"></a> 堆</h4><ul><li>最大堆/最小堆</li><li>小顶堆</li></ul><h4 id="栈"><a class="markdownIt-Anchor" href="#栈"></a> 栈</h4><h4 id="并查集"><a class="markdownIt-Anchor" href="#并查集"></a> 并查集</h4><h3 id="文件结构"><a class="markdownIt-Anchor" href="#文件结构"></a> 文件结构</h3><ul><li>json</li><li>yml</li><li>key-value</li><li>xml</li><li>protobuf?(谷歌?)</li><li>公司笔记本记录了一个</li></ul><h3 id="编译原理重构代码提示"><a class="markdownIt-Anchor" href="#编译原理重构代码提示"></a> 编译原理(重构代码提示)</h3><h2 id="计算机组成原理"><a class="markdownIt-Anchor" href="#计算机组成原理"></a> 计算机组成原理</h2><ul><li>进程/线程</li><li>进程死锁</li><li>多进程/多线程(python)</li><li>协程(lua)</li><li>伪线程(js)</li><li>进程通信方式</li><li>CPU执行方式(调度)</li><li>PCB进程控制块</li><li>proc文件系统(linux)</li><li>大小端</li><li>文件描述符/文件描述表/文件指针/(文件流stream)读取返回FILE结构指针</li><li>鸵鸟算法</li></ul><h2 id="虚拟技术"><a class="markdownIt-Anchor" href="#虚拟技术"></a> 虚拟技术</h2><h3 id="虚拟机"><a class="markdownIt-Anchor" href="#虚拟机"></a> 虚拟机</h3><ul><li>VMware</li></ul><h3 id="docker"><a class="markdownIt-Anchor" href="#docker"></a> docker</h3><h3 id="k8s-pod"><a class="markdownIt-Anchor" href="#k8s-pod"></a> k8s pod</h3><p>事件驱动，服务编排无依赖，服务关联性解耦</p><h2 id="信息安全"><a class="markdownIt-Anchor" href="#信息安全"></a> 信息安全</h2><h3 id="网络攻防"><a class="markdownIt-Anchor" href="#网络攻防"></a> 网络攻防</h3><ul><li>https 443</li><li>nmap kali</li><li>xss 攻击</li><li>dns欺骗</li><li>ddos</li></ul><h3 id="逆向工程"><a class="markdownIt-Anchor" href="#逆向工程"></a> 逆向工程</h3><h2 id="大数据hadoop生态"><a class="markdownIt-Anchor" href="#大数据hadoop生态"></a> 大数据(Hadoop生态)</h2><h3 id="hadoop"><a class="markdownIt-Anchor" href="#hadoop"></a> Hadoop</h3><h2 id="机器学习"><a class="markdownIt-Anchor" href="#机器学习"></a> 机器学习</h2><h2 id="个性化推荐"><a class="markdownIt-Anchor" href="#个性化推荐"></a> 个性化推荐</h2><h2 id="知识图谱"><a class="markdownIt-Anchor" href="#知识图谱"></a> 知识图谱</h2><h2 id="区块链"><a class="markdownIt-Anchor" href="#区块链"></a> 区块链</h2><h2 id="硬件驱动开发"><a class="markdownIt-Anchor" href="#硬件驱动开发"></a> 硬件驱动开发</h2><h2 id="web-30"><a class="markdownIt-Anchor" href="#web-30"></a> WEB 3.0</h2><h2 id="元宇宙"><a class="markdownIt-Anchor" href="#元宇宙"></a> 元宇宙</h2><h2 id="5g"><a class="markdownIt-Anchor" href="#5g"></a> 5G</h2><h2 id="开发板"><a class="markdownIt-Anchor" href="#开发板"></a> 开发板</h2><h3 id="树莓派"><a class="markdownIt-Anchor" href="#树莓派"></a> 树莓派</h3><h3 id="32"><a class="markdownIt-Anchor" href="#32"></a> ???32</h3><h2 id="游戏开发"><a class="markdownIt-Anchor" href="#游戏开发"></a> 游戏开发</h2><blockquote><p>xxx引擎</p></blockquote><h2 id="优秀blog"><a class="markdownIt-Anchor" href="#优秀blog"></a> 优秀Blog</h2><h2 id="论坛"><a class="markdownIt-Anchor" href="#论坛"></a> 论坛</h2><h2 id="开源代码库"><a class="markdownIt-Anchor" href="#开源代码库"></a> 开源代码库</h2><h2 id="工具网站"><a class="markdownIt-Anchor" href="#工具网站"></a> 工具网站</h2><h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><ol><li>i++是不是原子操作？</li><li>redis内存数据库共享内存吗？</li><li>10亿个数和10w个数求交集？(对小数组做hash, 遍历大数组)</li><li></li></ol><h1 id="待分类"><a class="markdownIt-Anchor" href="#待分类"></a> 待分类</h1><p>make makefile</p><p>通用<br /><a href="https://www.runoob.com/">https://www.runoob.com/</a><br />W3Cschool<br />掘金和思否<br />CSDN<br />bilibili<br />github,gitlab,码云<br />v2ex<br />stackoverflow<br />程序员都知道的GitHub：<a href="https://github.com/%E5%8D%9A%E5%AE%A2%E5%B9%B3%E5%8F%B0%EF%BC%9Ahttps://segmentfault.com/%E5%8D%9A%E5%AE%A2%E5%B9%B3%E5%8F%B0%EF%BC%9Ahttps://juejin.im/timeline%E8%8F%9C%E9%B8%9F%E6%95%99%E7%A8%8B%EF%BC%88%E5%89%8D%E7%AB%AF%EF%BC%89%EF%BC%9Ahttps://www.runoob.com/%E5%A8%B1%E4%B9%90&amp;%E5%AD%A6%E4%B9%A0%E7%BD%91%E7%AB%99%EF%BC%9Ahttps://www.bilibili.com/v2ex%EF%BC%88%E6%8A%80%E6%9C%AF%E5%92%8C%E5%B7%A5%E4%BD%9C%EF%BC%89%EF%BC%9Ahttps://www.v2ex.com/%E6%9F%A5%E9%97%AE%E9%A2%98%EF%BC%9Ahttps://stackoverflow.com/%E7%A7%91%E6%8A%80%E6%96%B0%E9%97%BB%E8%B5%84%E8%AE%AF%E7%B1%BB%EF%BC%9Ahttps://36kr.com/%E5%AD%A6%E4%B9%A0&amp;%E5%A8%B1%E4%B9%90%EF%BC%9Ahttps://www.youtube.com/%E5%88%B7%E9%A2%98%EF%BC%9Ahttps://leetcode.com/%E5%88%B7%E9%A2%98%EF%BC%9Ahttps://www.lintcode.com/">https://github.com/博客平台：https://segmentfault.com/博客平台：https://juejin.im/timeline菜鸟教程（前端）：https://www.runoob.com/娱乐&amp;学习网站：https://www.bilibili.com/v2ex（技术和工作）：https://www.v2ex.com/查问题：https://stackoverflow.com/科技新闻资讯类：https://36kr.com/学习&amp;娱乐：https://www.youtube.com/刷题：https://leetcode.com/刷题：https://www.lintcode.com/</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术栈 </category>
          
          <category> 汇总 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> study </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL 基础</title>
      <link href="/SQL_Base/"/>
      <url>/SQL_Base/</url>
      
        <content type="html"><![CDATA[<h1 id="总结一波数据库相关"><a class="markdownIt-Anchor" href="#总结一波数据库相关"></a> 总结一波数据库相关</h1><p>数据库有点忘了，总结一波，顺便学一学数据库高深方面的内容(譬如各种锁，索引，查询优化等等)<br />大概会分为三篇~</p><ol><li>SQL 基础(CURD)</li><li>SQL 进阶(多表联查, 分页, 子查询, 事务, union, except, join, group by, etc…)</li><li>SQL 高级(各种锁，索引，视图, 查询优化, 理论知识, etc…)</li></ol><span id="more"></span><h2 id="登录"><a class="markdownIt-Anchor" href="#登录"></a> 登录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -h localhost -P 3306 -p</span><br><span class="line">Enter password: ******</span><br></pre></td></tr></table></figure><p>其他常用参数：</p><ul><li>-V 输出版本信息并且退出</li><li>–help 帮助</li><li>-D 打开指定的数据库</li><li>–prompt 设置提示符，默认为<code>mysql&gt;</code><ul><li>\D 完整的日期</li><li>\d 当前数据库</li><li>\h 服务器名称</li><li>\u 当前用户</li></ul></li></ul><h2 id="退出"><a class="markdownIt-Anchor" href="#退出"></a> 退出</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">quit;</span><br><span class="line">exit;</span><br><span class="line">\q;</span><br></pre></td></tr></table></figure><h2 id="数据库"><a class="markdownIt-Anchor" href="#数据库"></a> 数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建数据库</span></span><br><span class="line"><span class="keyword">create</span> database testblog;</span><br><span class="line"><span class="comment">-- 显示所有数据库</span></span><br><span class="line"><span class="keyword">show</span> databases;</span><br><span class="line"><span class="comment">-- 删除数据库</span></span><br><span class="line"><span class="keyword">drop</span> database abcde;</span><br><span class="line"><span class="comment">-- 切换数据库</span></span><br><span class="line">use testblog;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="表"><a class="markdownIt-Anchor" href="#表"></a> 表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建新表</span></span><br><span class="line"><span class="comment">-- 存储引擎有 MEMORY, MyISAM, InnoDB, 默认新版本引擎. MEMORY数据存在内存中,处理速度最快,但是不安全。</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> `account`(</span><br><span class="line">  `id` <span class="type">int</span> unsigned auto_increment,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">  `age` <span class="type">varchar</span>(<span class="number">2</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">  `sex` <span class="type">varchar</span>(<span class="number">1</span>),</span><br><span class="line">   <span class="keyword">primary</span> key (`id`)</span><br><span class="line">)engine<span class="operator">=</span>InnoDB <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看表结构</span></span><br><span class="line"><span class="keyword">desc</span> account;</span><br><span class="line"><span class="comment">-- 从已有的表创建新表(仅结构)</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> `<span class="keyword">user</span>` <span class="keyword">like</span> `account`;</span><br><span class="line"><span class="comment">-- 从已有的表创建新表(结构+记录)</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> if <span class="keyword">not</span> <span class="keyword">exists</span> `<span class="keyword">user</span>` <span class="keyword">as</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `account`;</span><br><span class="line"><span class="comment">-- 修改表名</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> `users` rename <span class="keyword">to</span> `<span class="keyword">user</span>`;</span><br><span class="line"><span class="comment">-- 删除表</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> `<span class="keyword">user</span>`;</span><br><span class="line"><span class="comment">-- 表增加一个列(加在最后面)</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> `<span class="keyword">user</span>` <span class="keyword">add</span> <span class="keyword">column</span> `username` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>;</span><br><span class="line"><span class="comment">-- 表增加一个列(加在第一列)</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> `<span class="keyword">user</span>` <span class="keyword">add</span> <span class="keyword">column</span> `uid` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">first</span>;</span><br><span class="line"><span class="comment">-- 表增加一个列(加在某一列后面)</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> `<span class="keyword">user</span>` <span class="keyword">add</span> <span class="keyword">column</span> `location` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> after `sex`;</span><br><span class="line"><span class="comment">-- 修改列名</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> `<span class="keyword">user</span>` change `sex` `sexual` <span class="type">char</span>;</span><br><span class="line"><span class="comment">-- 删除列</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> `<span class="keyword">user</span>` <span class="keyword">drop</span> <span class="keyword">column</span> `sexual`;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="记录"><a class="markdownIt-Anchor" href="#记录"></a> 记录</h2><h3 id="查询"><a class="markdownIt-Anchor" href="#查询"></a> 查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询表所有列的记录</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `<span class="keyword">user</span>`;</span><br><span class="line"><span class="comment">-- 查询特定列的记录</span></span><br><span class="line"><span class="keyword">SELECT</span> `name`, `title` <span class="keyword">FROM</span> `<span class="keyword">user</span>`;</span><br></pre></td></tr></table></figure><h4 id="查询条件"><a class="markdownIt-Anchor" href="#查询条件"></a> 查询条件</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 精确条件 (不等于&lt;&gt;, !=  【&gt;, &gt;=, &lt;, &lt;=】)</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `<span class="keyword">user</span>` <span class="keyword">where</span> `name` <span class="operator">=</span> <span class="string">&#x27;ada&#x27;</span>;</span><br><span class="line"><span class="comment">-- 条件连接 (and, or)</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `<span class="keyword">user</span>` <span class="keyword">where</span> `name` <span class="operator">=</span> <span class="string">&#x27;ada&#x27;</span> <span class="keyword">and</span> `id` <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="comment">-- 模糊查询记录</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `<span class="keyword">user</span>` <span class="keyword">where</span> `name` <span class="keyword">like</span> <span class="string">&#x27;%John%&#x27;</span>;</span><br><span class="line"><span class="comment">-- 模糊排除查询记录</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `<span class="keyword">user</span>` <span class="keyword">where</span> `name` <span class="keyword">not</span> <span class="keyword">like</span> <span class="string">&#x27;%John%&#x27;</span>;</span><br><span class="line"><span class="comment">-- 加上 BINARY 操作符 来区分大小写</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `<span class="keyword">user</span>` <span class="keyword">WHERE</span> <span class="keyword">LIKE</span> <span class="type">BINARY</span> <span class="string">&#x27;%azz%&#x27;</span>;</span><br><span class="line"><span class="comment">-- 多条件模糊查询，且有先后顺序(%匹配多个字符)</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `<span class="keyword">user</span>` <span class="keyword">where</span> `name` <span class="keyword">like</span> <span class="string">&#x27;%Jo%n%&#x27;</span>;</span><br><span class="line"><span class="comment">-- 模糊匹配单个字符</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `<span class="keyword">user</span>` <span class="keyword">where</span> `name` <span class="keyword">like</span> <span class="string">&#x27;Jo_n&#x27;</span>;</span><br><span class="line"><span class="comment">-- 多选一字符 (匹配 a1, b1, c1)</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `<span class="keyword">user</span>` <span class="keyword">where</span> `name` <span class="keyword">like</span> <span class="string">&#x27;[abc]1&#x27;</span>;</span><br><span class="line"><span class="comment">-- 多选一字符 (连续数字或字母)</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `<span class="keyword">user</span>` <span class="keyword">where</span> `name` <span class="keyword">like</span> <span class="string">&#x27;[a-z][0-9]&#x27;</span>;</span><br><span class="line"><span class="comment">-- 多选一字符 (排除某字符 除了 1a, 2a, 3a)</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `<span class="keyword">user</span>` <span class="keyword">where</span> `name` <span class="keyword">like</span> <span class="string">&#x27;[^123]a&#x27;</span>;</span><br><span class="line"><span class="comment">-- escape，转义字符后面的%或_，使其不作为通配符，而是普通字符匹配</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> `<span class="keyword">user</span>` <span class="keyword">where</span> `name` <span class="keyword">like</span> <span class="string">&#x27;Lucy/_%&#x27;</span> <span class="keyword">escape</span><span class="string">&#x27;/&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="聚合-group-by"><a class="markdownIt-Anchor" href="#聚合-group-by"></a> 聚合 (group by)</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="排序"><a class="markdownIt-Anchor" href="#排序"></a> 排序</h4><h4 id="限制记录"><a class="markdownIt-Anchor" href="#限制记录"></a> 限制记录</h4><h3 id="插入"><a class="markdownIt-Anchor" href="#插入"></a> 插入</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 插入一条记录</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `<span class="keyword">user</span>` <span class="keyword">values</span> (<span class="number">1</span>, <span class="number">2</span>, <span class="string">&#x27;amy&#x27;</span>, <span class="number">13</span>, <span class="string">&#x27;china&#x27;</span>, <span class="string">&#x27;Amy&#x27;</span>);</span><br><span class="line"><span class="comment">-- 插入一条记录(指定某列)</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `<span class="keyword">user</span>` (`id`, `uid`, `age`, `name`) <span class="keyword">values</span> (<span class="number">3</span>, <span class="string">&#x27;ES283268950&#x27;</span>, <span class="number">18</span>, <span class="string">&#x27;&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="备份"><a class="markdownIt-Anchor" href="#备份"></a> 备份</h2><ol><li>mysqldump</li><li>直接复制文件夹</li><li>mysqlhotcopy</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份数据库 weekly</span></span><br><span class="line">mysqldump -u root -h localhost -p weekly &gt; D:/aa.sql</span><br><span class="line">Enter password: ******</span><br><span class="line"><span class="comment"># 备份数据库 weekly 的product表</span></span><br><span class="line">mysqldump -u root -h localhost -p weekly product&gt; D:/aa.sql</span><br><span class="line">Enter password: ******</span><br><span class="line"><span class="comment"># 备份数据库 weekly 的多个表</span></span><br><span class="line">mysqldump -u root -h localhost -p weekly product, tag&gt; D:/aa.sql</span><br><span class="line">Enter password: ******</span><br><span class="line"><span class="comment"># 备份多个数据库</span></span><br><span class="line">mysqldump -u root -h localhost -p --databases blog weekly&gt; D:/aa.sql</span><br><span class="line">Enter password: ******</span><br><span class="line"><span class="comment"># 备份所有数据库</span></span><br><span class="line">mysqldump -u root -h localhost -p --all-databases &gt; D:/aa.sql</span><br><span class="line">Enter password: ******</span><br></pre></td></tr></table></figure><h2 id="常用函数"><a class="markdownIt-Anchor" href="#常用函数"></a> 常用函数</h2><h2 id="还原"><a class="markdownIt-Anchor" href="#还原"></a> 还原</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p weekly &lt; D:/aa.sql</span><br><span class="line">Enter password: ******</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> source D:<span class="operator">/</span>aa.sql;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.00</span> sec)</span><br><span class="line">......</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术栈 </category>
          
          <category> 后端 </category>
          
          <category> SQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL </tag>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LocalDateTime的探索源代码及使用</title>
      <link href="/LocalDateTime/"/>
      <url>/LocalDateTime/</url>
      
        <content type="html"><![CDATA[<h1 id="why"><a class="markdownIt-Anchor" href="#why"></a> Why?</h1><p>在项目开发过程中中经常遇到时间处理。一般是用了<code>Date</code>配合<code>Calendar</code>再配合<code>SimpleDateFormat</code>使用。但是</p><ol><li>阿里巴巴开发手册中却禁用SimpleDateFormat.因为线程不安全。</li><li>而且<code>Date</code>中好多方法已经过时</li><li>方法返回的值不直观,可读性差。</li><li>jdk8新出的比较先进, 更新了好多东西。</li></ol><span id="more"></span><h1 id="what"><a class="markdownIt-Anchor" href="#what"></a> What?</h1><h2 id="localdate"><a class="markdownIt-Anchor" href="#localdate"></a> LocalDate</h2><h3 id="使用"><a class="markdownIt-Anchor" href="#使用"></a> 使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取当前年月日</span></span><br><span class="line"><span class="type">LocalDate</span> <span class="variable">localDate</span> <span class="operator">=</span> LocalDate.now();</span><br><span class="line"><span class="comment">//构造指定的年月日</span></span><br><span class="line"><span class="type">LocalDate</span> <span class="variable">localDate1</span> <span class="operator">=</span> LocalDate.of(<span class="number">2020</span>, <span class="number">1</span>, <span class="number">10</span>);</span><br><span class="line">System.out.println(localDate);<span class="comment">//2020-01-21</span></span><br><span class="line">System.out.println(localDate1);<span class="comment">//2020-01-10</span></span><br><span class="line"></span><br><span class="line">System.out.println(localDate.get(ChronoField.YEAR));<span class="comment">//2020</span></span><br><span class="line">System.out.println(localDate.getDayOfMonth());<span class="comment">//21</span></span><br><span class="line">System.out.println(localDate.getDayOfYear());<span class="comment">//21</span></span><br><span class="line">System.out.println(localDate.getLong(ChronoField.DAY_OF_MONTH));<span class="comment">//21</span></span><br><span class="line">System.out.println(localDate.getMonthValue());<span class="comment">//1</span></span><br><span class="line">System.out.println(localDate.getYear());<span class="comment">//2020</span></span><br><span class="line">System.out.println(localDate.getChronology());<span class="comment">//ISO</span></span><br><span class="line">System.out.println(localDate.getDayOfWeek());<span class="comment">//TUESDAY</span></span><br><span class="line">System.out.println(localDate.getEra());<span class="comment">//CE</span></span><br><span class="line">System.out.println(localDate.getMonth());<span class="comment">//JANUARY</span></span><br><span class="line">System.out.println(localDate.lengthOfMonth());<span class="comment">//31</span></span><br><span class="line">System.out.println(localDate.lengthOfYear());<span class="comment">//366</span></span><br><span class="line">System.out.println(localDate.range(ChronoField.MONTH_OF_YEAR));<span class="comment">//1 - 12</span></span><br><span class="line">System.out.println(localDate.compareTo(localDate1));<span class="comment">//11</span></span><br><span class="line">System.out.println(localDate.format(DateTimeFormatter.ofPattern(<span class="string">&quot;YYYY--MM--dd&quot;</span>)));<span class="comment">//2020--01--21</span></span><br><span class="line">System.out.println(localDate.isAfter(localDate1));<span class="comment">//true</span></span><br><span class="line">System.out.println(localDate.isBefore(localDate1));<span class="comment">//false</span></span><br><span class="line">System.out.println(localDate.isEqual(localDate1));<span class="comment">//false</span></span><br></pre></td></tr></table></figure><h3 id="源码"><a class="markdownIt-Anchor" href="#源码"></a> 源码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">LocalDate</span> <span class="keyword">implements</span> <span class="title class_">Temporal</span>, TemporalAdjuster, ChronoLocalDate, Serializable &#123;</span><br><span class="line">    <span class="comment">//支持的最小日期：最小年的1月1日==&gt;+999999999-12-31</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">LocalDate</span> <span class="variable">MIN</span> <span class="operator">=</span> LocalDate.of(Year.MIN_VALUE, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    <span class="comment">//支持的最大日期：最大年的12月31日==&gt;-999999999-01-01</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">LocalDate</span> <span class="variable">MAX</span> <span class="operator">=</span> LocalDate.of(Year.MAX_VALUE, <span class="number">12</span>, <span class="number">31</span>);</span><br><span class="line">    <span class="comment">//序列化版本UID</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">2942565459149668126L</span>;</span><br><span class="line">    <span class="comment">//每400年一个大周期(平年闰年等等)等于146097天</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DAYS_PER_CYCLE</span> <span class="operator">=</span> <span class="number">146097</span>;</span><br><span class="line">    <span class="comment">//从0年到1970年经过的天数==&gt;5个400年大周期减去30年(其中1970-2000有7个闰年所以加上7天)</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">DAYS_0000_TO_1970</span> <span class="operator">=</span> (DAYS_PER_CYCLE * <span class="number">5L</span>) - (<span class="number">30L</span> * <span class="number">365L</span> + <span class="number">7L</span>);</span><br><span class="line">    <span class="comment">//年月日用不同数据类型保存节省资源</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> year;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">short</span> month;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">short</span> day;</span><br><span class="line">    <span class="comment">//获取当地的当前时间,调用了Clock.systemDefaultZone()--&gt;SystemClock[Asia/Shanghai]</span></span><br><span class="line">    <span class="comment">//然后return new SystemClock(ZoneId.systemDefault());</span></span><br><span class="line">    <span class="comment">//然后return TimeZone.getDefault().toZoneId();</span></span><br><span class="line">    <span class="comment">//此时区的字符串标识符。这是一个编程标识符，用于在内部从系统表中查找时区对象，并将它们映射到其本地化的显示名称。ID值在系统表中是唯一的，但不能用于动态创建的区域</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> LocalDate <span class="title function_">now</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> now(Clock.systemDefaultZone());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取指定地区的当前时间,调用了Clock.system(zone)</span></span><br><span class="line">    <span class="comment">//然后return new SystemClock(zone);</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> LocalDate <span class="title function_">now</span><span class="params">(ZoneId zone)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> now(Clock.system(zone));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取指定的Clock的当前时间,Clock是时钟抽象类,实现类有4个,其中SystemClock是用System.currentTimeMillis()来实现获取时间。</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> LocalDate <span class="title function_">now</span><span class="params">(Clock clock)</span> &#123;</span><br><span class="line">        Objects.requireNonNull(clock, <span class="string">&quot;clock&quot;</span>);</span><br><span class="line">        <span class="comment">// clock.instant()--&gt;Instant.ofEpochMilli(millis())--&gt;Instant.ofEpochMilli(System.currentTimeMillis())</span></span><br><span class="line">        <span class="comment">//其中Instant.ofEpochMilli()把精确到微妙强行精确到纳秒,存到Instant.nanoOfSecond里面</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">Instant</span> <span class="variable">now</span> <span class="operator">=</span> clock.instant();  <span class="comment">// called once</span></span><br><span class="line">        <span class="type">ZoneOffset</span> <span class="variable">offset</span> <span class="operator">=</span> clock.getZone().getRules().getOffset(now);  <span class="comment">// 根据时区获取不同地区偏移量规则来获取秒偏移量</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">epochSec</span> <span class="operator">=</span> now.getEpochSecond() + offset.getTotalSeconds();  <span class="comment">// 加上去</span></span><br><span class="line">        <span class="comment">//一天多少秒 static final int SECONDS_PER_DAY = SECONDS_PER_HOUR * HOURS_PER_DAY;</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">epochDay</span> <span class="operator">=</span> Math.floorDiv(epochSec, SECONDS_PER_DAY); <span class="comment">// 计算出当前日</span></span><br><span class="line">        <span class="keyword">return</span> LocalDate.ofEpochDay(epochDay);  <span class="comment">// 转化为年月日返回</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取指定年月日的LocalDate对象</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> LocalDate <span class="title function_">of</span><span class="params">(<span class="type">int</span> year, Month month, <span class="type">int</span> dayOfMonth)</span> &#123;</span><br><span class="line">        YEAR.checkValidValue(year);  <span class="comment">//return (value &gt;= getMinimum() &amp;&amp; value &lt;= getMaximum());</span></span><br><span class="line">        Objects.requireNonNull(month, <span class="string">&quot;month&quot;</span>);</span><br><span class="line">        DAY_OF_MONTH.checkValidValue(dayOfMonth);</span><br><span class="line">        <span class="comment">//检查年、日合理，且月非空后返回创建后的LocalDate, create方法有检查月合理且二月29日等错误</span></span><br><span class="line">        <span class="keyword">return</span> create(year, month.getValue(), dayOfMonth);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//一样，检查年月日合理</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> LocalDate <span class="title function_">of</span><span class="params">(<span class="type">int</span> year, <span class="type">int</span> month, <span class="type">int</span> dayOfMonth)</span> &#123;</span><br><span class="line">        YEAR.checkValidValue(year);</span><br><span class="line">        MONTH_OF_YEAR.checkValidValue(month);</span><br><span class="line">        DAY_OF_MONTH.checkValidValue(dayOfMonth);</span><br><span class="line">        <span class="keyword">return</span> create(year, month, dayOfMonth);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取指定年日的LocalDate对象,月份根据日来计算</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> LocalDate <span class="title function_">ofYearDay</span><span class="params">(<span class="type">int</span> year, <span class="type">int</span> dayOfYear)</span> &#123;</span><br><span class="line">        YEAR.checkValidValue(year);</span><br><span class="line">        DAY_OF_YEAR.checkValidValue(dayOfYear);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">leap</span> <span class="operator">=</span> IsoChronology.INSTANCE.isLeapYear(year);</span><br><span class="line">        <span class="keyword">if</span> (dayOfYear == <span class="number">366</span> &amp;&amp; leap == <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">DateTimeException</span>(<span class="string">&quot;Invalid date &#x27;DayOfYear 366&#x27; as &#x27;&quot;</span> + year + <span class="string">&quot;&#x27; is not a leap year&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">Month</span> <span class="variable">moy</span> <span class="operator">=</span> Month.of((dayOfYear - <span class="number">1</span>) / <span class="number">31</span> + <span class="number">1</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">monthEnd</span> <span class="operator">=</span> moy.firstDayOfYear(leap) + moy.length(leap) - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (dayOfYear &gt; monthEnd) &#123;</span><br><span class="line">            moy = moy.plus(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">dom</span> <span class="operator">=</span> dayOfYear - moy.firstDayOfYear(leap) + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">LocalDate</span>(year, moy.getValue(), dom);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取指定日的LocalDate对象,年月根据日来计算(日期从1970年开始)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> LocalDate <span class="title function_">ofEpochDay</span><span class="params">(<span class="type">long</span> epochDay)</span> &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">zeroDay</span> <span class="operator">=</span> epochDay + DAYS_0000_TO_1970;</span><br><span class="line">        zeroDay -= <span class="number">60</span>;</span><br><span class="line">        <span class="type">long</span> <span class="variable">adjust</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (zeroDay &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">long</span> <span class="variable">adjustCycles</span> <span class="operator">=</span> (zeroDay + <span class="number">1</span>) / DAYS_PER_CYCLE - <span class="number">1</span>;</span><br><span class="line">            adjust = adjustCycles * <span class="number">400</span>;</span><br><span class="line">            zeroDay += -adjustCycles * DAYS_PER_CYCLE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">yearEst</span> <span class="operator">=</span> (<span class="number">400</span> * zeroDay + <span class="number">591</span>) / DAYS_PER_CYCLE;</span><br><span class="line">        <span class="type">long</span> <span class="variable">doyEst</span> <span class="operator">=</span> zeroDay - (<span class="number">365</span> * yearEst + yearEst / <span class="number">4</span> - yearEst / <span class="number">100</span> + yearEst / <span class="number">400</span>);</span><br><span class="line">        <span class="keyword">if</span> (doyEst &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            yearEst--;</span><br><span class="line">            doyEst = zeroDay - (<span class="number">365</span> * yearEst + yearEst / <span class="number">4</span> - yearEst / <span class="number">100</span> + yearEst / <span class="number">400</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        yearEst += adjust;</span><br><span class="line">        <span class="type">int</span> <span class="variable">marchDoy0</span> <span class="operator">=</span> (<span class="type">int</span>) doyEst;</span><br><span class="line">        <span class="type">int</span> <span class="variable">marchMonth0</span> <span class="operator">=</span> (marchDoy0 * <span class="number">5</span> + <span class="number">2</span>) / <span class="number">153</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">month</span> <span class="operator">=</span> (marchMonth0 + <span class="number">2</span>) % <span class="number">12</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">dom</span> <span class="operator">=</span> marchDoy0 - (marchMonth0 * <span class="number">306</span> + <span class="number">5</span>) / <span class="number">10</span> + <span class="number">1</span>;</span><br><span class="line">        yearEst += marchMonth0 / <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">year</span> <span class="operator">=</span> YEAR.checkValidIntValue(yearEst);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">LocalDate</span>(year, month, dom);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取指定时间的LocalDate对象</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> LocalDate <span class="title function_">from</span><span class="params">(TemporalAccessor temporal)</span> &#123;</span><br><span class="line">        Objects.requireNonNull(temporal, <span class="string">&quot;temporal&quot;</span>);</span><br><span class="line">        <span class="type">LocalDate</span> <span class="variable">date</span> <span class="operator">=</span> temporal.query(TemporalQueries.localDate());</span><br><span class="line">        <span class="keyword">if</span> (date == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">DateTimeException</span>(<span class="string">&quot;Unable to obtain LocalDate from TemporalAccessor: &quot;</span> +</span><br><span class="line">                    temporal + <span class="string">&quot; of type &quot;</span> + temporal.getClass().getName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> date;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取指定字符串的LocalDate对象,调用了下面那个方法,默认用ISO_LOCAL_DATE</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> LocalDate <span class="title function_">parse</span><span class="params">(CharSequence text)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> parse(text, DateTimeFormatter.ISO_LOCAL_DATE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取指定字符串的LocalDate对象,验证DateTimeFormatter非空,然后通过formatter.parse解析。</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> LocalDate <span class="title function_">parse</span><span class="params">(CharSequence text, DateTimeFormatter formatter)</span> &#123;</span><br><span class="line">        Objects.requireNonNull(formatter, <span class="string">&quot;formatter&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> formatter.parse(text, LocalDate::from);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//通过年月日创建的LocalDate对象</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> LocalDate <span class="title function_">create</span><span class="params">(<span class="type">int</span> year, <span class="type">int</span> month, <span class="type">int</span> dayOfMonth)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (dayOfMonth &gt; <span class="number">28</span>) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">dom</span> <span class="operator">=</span> <span class="number">31</span>;</span><br><span class="line">            <span class="keyword">switch</span> (month) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    dom = (IsoChronology.INSTANCE.isLeapYear(year) ? <span class="number">29</span> : <span class="number">28</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                    dom = <span class="number">30</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (dayOfMonth &gt; dom) &#123;</span><br><span class="line">                <span class="keyword">if</span> (dayOfMonth == <span class="number">29</span>) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">DateTimeException</span>(<span class="string">&quot;Invalid date &#x27;February 29&#x27; as &#x27;&quot;</span> + year + <span class="string">&quot;&#x27; is not a leap year&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">DateTimeException</span>(<span class="string">&quot;Invalid date &#x27;&quot;</span> + Month.of(month).name() + <span class="string">&quot; &quot;</span> + dayOfMonth + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">LocalDate</span>(year, month, dayOfMonth);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">////通过年月日创建的LocalDate对象,保证日期正确</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> LocalDate <span class="title function_">resolvePreviousValid</span><span class="params">(<span class="type">int</span> year, <span class="type">int</span> month, <span class="type">int</span> day)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (month) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                day = Math.min(day, IsoChronology.INSTANCE.isLeapYear(year) ? <span class="number">29</span> : <span class="number">28</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                day = Math.min(day, <span class="number">30</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">LocalDate</span>(year, month, day);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//年月日构造LocalDate</span></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">LocalDate</span><span class="params">(<span class="type">int</span> year, <span class="type">int</span> month, <span class="type">int</span> dayOfMonth)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.year = year;</span><br><span class="line">        <span class="built_in">this</span>.month = (<span class="type">short</span>) month;</span><br><span class="line">        <span class="built_in">this</span>.day = (<span class="type">short</span>) dayOfMonth;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查是否支持指定的字段,比如ChronoField.DAY_OF_WEEK</span></span><br><span class="line">    <span class="meta">@Override</span>  <span class="comment">// override for Javadoc</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isSupported</span><span class="params">(TemporalField field)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ChronoLocalDate.<span class="built_in">super</span>.isSupported(field);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查是否支持指定的字段,比如ChronoUnit.DAYS</span></span><br><span class="line">    <span class="meta">@Override</span>  <span class="comment">// override for Javadoc</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isSupported</span><span class="params">(TemporalUnit unit)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ChronoLocalDate.<span class="built_in">super</span>.isSupported(unit);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取指定时间的范围localDate.range(ChronoField.DAY_OF_WEEK)输出为1 - 7</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ValueRange <span class="title function_">range</span><span class="params">(TemporalField field)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (field <span class="keyword">instanceof</span> ChronoField) &#123;</span><br><span class="line">            <span class="type">ChronoField</span> <span class="variable">f</span> <span class="operator">=</span> (ChronoField) field;</span><br><span class="line">            <span class="keyword">if</span> (f.isDateBased()) &#123;</span><br><span class="line">                <span class="keyword">switch</span> (f) &#123;</span><br><span class="line">                    <span class="keyword">case</span> DAY_OF_MONTH: <span class="keyword">return</span> ValueRange.of(<span class="number">1</span>, lengthOfMonth());</span><br><span class="line">                    <span class="keyword">case</span> DAY_OF_YEAR: <span class="keyword">return</span> ValueRange.of(<span class="number">1</span>, lengthOfYear());</span><br><span class="line">                    <span class="keyword">case</span> ALIGNED_WEEK_OF_MONTH: <span class="keyword">return</span> ValueRange.of(<span class="number">1</span>, getMonth() == Month.FEBRUARY &amp;&amp; isLeapYear() == <span class="literal">false</span> ? <span class="number">4</span> : <span class="number">5</span>);</span><br><span class="line">                    <span class="keyword">case</span> YEAR_OF_ERA:</span><br><span class="line">                        <span class="keyword">return</span> (getYear() &lt;= <span class="number">0</span> ? ValueRange.of(<span class="number">1</span>, Year.MAX_VALUE + <span class="number">1</span>) : ValueRange.of(<span class="number">1</span>, Year.MAX_VALUE));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> field.range();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnsupportedTemporalTypeException</span>(<span class="string">&quot;Unsupported field: &quot;</span> + field);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> field.rangeRefinedBy(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取LocalDate指定字段的信息,验证一下调get0</span></span><br><span class="line">    <span class="meta">@Override</span>  <span class="comment">// override for Javadoc and performance</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">get</span><span class="params">(TemporalField field)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (field <span class="keyword">instanceof</span> ChronoField) &#123;</span><br><span class="line">            <span class="keyword">return</span> get0(field);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ChronoLocalDate.<span class="built_in">super</span>.get(field);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取LocalDate指定字段的信息(返回Long)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getLong</span><span class="params">(TemporalField field)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (field <span class="keyword">instanceof</span> ChronoField) &#123;</span><br><span class="line">            <span class="keyword">if</span> (field == EPOCH_DAY) &#123;</span><br><span class="line">                <span class="keyword">return</span> toEpochDay();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (field == PROLEPTIC_MONTH) &#123;</span><br><span class="line">                <span class="keyword">return</span> getProlepticMonth();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> get0(field);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> field.getFrom(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取LocalDate指定字段的信息</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">get0</span><span class="params">(TemporalField field)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> ((ChronoField) field) &#123;</span><br><span class="line">            <span class="keyword">case</span> DAY_OF_WEEK: <span class="keyword">return</span> getDayOfWeek().getValue();</span><br><span class="line">            <span class="keyword">case</span> ALIGNED_DAY_OF_WEEK_IN_MONTH: <span class="keyword">return</span> ((day - <span class="number">1</span>) % <span class="number">7</span>) + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">case</span> ALIGNED_DAY_OF_WEEK_IN_YEAR: <span class="keyword">return</span> ((getDayOfYear() - <span class="number">1</span>) % <span class="number">7</span>) + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">case</span> DAY_OF_MONTH: <span class="keyword">return</span> day;</span><br><span class="line">            <span class="keyword">case</span> DAY_OF_YEAR: <span class="keyword">return</span> getDayOfYear();</span><br><span class="line">            <span class="keyword">case</span> EPOCH_DAY: <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnsupportedTemporalTypeException</span>(<span class="string">&quot;Invalid field &#x27;EpochDay&#x27; for get() method, use getLong() instead&quot;</span>);</span><br><span class="line">            <span class="keyword">case</span> ALIGNED_WEEK_OF_MONTH: <span class="keyword">return</span> ((day - <span class="number">1</span>) / <span class="number">7</span>) + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">case</span> ALIGNED_WEEK_OF_YEAR: <span class="keyword">return</span> ((getDayOfYear() - <span class="number">1</span>) / <span class="number">7</span>) + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">case</span> MONTH_OF_YEAR: <span class="keyword">return</span> month;</span><br><span class="line">            <span class="keyword">case</span> PROLEPTIC_MONTH: <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnsupportedTemporalTypeException</span>(<span class="string">&quot;Invalid field &#x27;ProlepticMonth&#x27; for get() method, use getLong() instead&quot;</span>);</span><br><span class="line">            <span class="keyword">case</span> YEAR_OF_ERA: <span class="keyword">return</span> (year &gt;= <span class="number">1</span> ? year : <span class="number">1</span> - year);</span><br><span class="line">            <span class="keyword">case</span> YEAR: <span class="keyword">return</span> year;</span><br><span class="line">            <span class="keyword">case</span> ERA: <span class="keyword">return</span> (year &gt;= <span class="number">1</span> ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnsupportedTemporalTypeException</span>(<span class="string">&quot;Unsupported field: &quot;</span> + field);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//不公开，获取以月为计时的时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> <span class="title function_">getProlepticMonth</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (year * <span class="number">12L</span> + month - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取时间标准：ISO国际标准时间</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> IsoChronology <span class="title function_">getChronology</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> IsoChronology.INSTANCE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取纪年,返回CE(Common Era)公历纪元,耶稣生年开始。BCE(Common Era)为公元前。</span></span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">// override for Javadoc</span></span><br><span class="line">    <span class="keyword">public</span> Era <span class="title function_">getEra</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ChronoLocalDate.<span class="built_in">super</span>.getEra();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getYear</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> year;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMonthValue</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> month;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Month <span class="title function_">getMonth</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> Month.of(month);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getDayOfMonth</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> day;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getDayOfYear</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> getMonth().firstDayOfYear(isLeapYear()) + day - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> DayOfWeek <span class="title function_">getDayOfWeek</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">dow0</span> <span class="operator">=</span> (<span class="type">int</span>)Math.floorMod(toEpochDay() + <span class="number">3</span>, <span class="number">7</span>);</span><br><span class="line">        <span class="keyword">return</span> DayOfWeek.of(dow0 + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断是否为闰年</span></span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">// override for Javadoc and performance</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isLeapYear</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> IsoChronology.INSTANCE.isLeapYear(year);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">lengthOfMonth</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (month) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">return</span> (isLeapYear() ? <span class="number">29</span> : <span class="number">28</span>);</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">30</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">31</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">// override for Javadoc and performance</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">lengthOfYear</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (isLeapYear() ? <span class="number">366</span> : <span class="number">365</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回指定的日期，传入java.time.temporal.TemporalAdjusters的实现类</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> LocalDate <span class="title function_">with</span><span class="params">(TemporalAdjuster adjuster)</span> &#123;</span><br><span class="line">        <span class="comment">// optimizations</span></span><br><span class="line">        <span class="keyword">if</span> (adjuster <span class="keyword">instanceof</span> LocalDate) &#123;</span><br><span class="line">            <span class="keyword">return</span> (LocalDate) adjuster;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (LocalDate) adjuster.adjustInto(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回指定修改字段后的日期</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> LocalDate <span class="title function_">with</span><span class="params">(TemporalField field, <span class="type">long</span> newValue)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (field <span class="keyword">instanceof</span> ChronoField) &#123;</span><br><span class="line">            <span class="type">ChronoField</span> <span class="variable">f</span> <span class="operator">=</span> (ChronoField) field;</span><br><span class="line">            f.checkValidValue(newValue);</span><br><span class="line">            <span class="keyword">switch</span> (f) &#123;</span><br><span class="line">                <span class="keyword">case</span> DAY_OF_WEEK: <span class="keyword">return</span> plusDays(newValue - getDayOfWeek().getValue());</span><br><span class="line">                <span class="keyword">case</span> ALIGNED_DAY_OF_WEEK_IN_MONTH: <span class="keyword">return</span> plusDays(newValue - getLong(ALIGNED_DAY_OF_WEEK_IN_MONTH));</span><br><span class="line">                <span class="keyword">case</span> ALIGNED_DAY_OF_WEEK_IN_YEAR: <span class="keyword">return</span> plusDays(newValue - getLong(ALIGNED_DAY_OF_WEEK_IN_YEAR));</span><br><span class="line">                <span class="keyword">case</span> DAY_OF_MONTH: <span class="keyword">return</span> withDayOfMonth((<span class="type">int</span>) newValue);</span><br><span class="line">                <span class="keyword">case</span> DAY_OF_YEAR: <span class="keyword">return</span> withDayOfYear((<span class="type">int</span>) newValue);</span><br><span class="line">                <span class="keyword">case</span> EPOCH_DAY: <span class="keyword">return</span> LocalDate.ofEpochDay(newValue);</span><br><span class="line">                <span class="keyword">case</span> ALIGNED_WEEK_OF_MONTH: <span class="keyword">return</span> plusWeeks(newValue - getLong(ALIGNED_WEEK_OF_MONTH));</span><br><span class="line">                <span class="keyword">case</span> ALIGNED_WEEK_OF_YEAR: <span class="keyword">return</span> plusWeeks(newValue - getLong(ALIGNED_WEEK_OF_YEAR));</span><br><span class="line">                <span class="keyword">case</span> MONTH_OF_YEAR: <span class="keyword">return</span> withMonth((<span class="type">int</span>) newValue);</span><br><span class="line">                <span class="keyword">case</span> PROLEPTIC_MONTH: <span class="keyword">return</span> plusMonths(newValue - getProlepticMonth());</span><br><span class="line">                <span class="keyword">case</span> YEAR_OF_ERA: <span class="keyword">return</span> withYear((<span class="type">int</span>) (year &gt;= <span class="number">1</span> ? newValue : <span class="number">1</span> - newValue));</span><br><span class="line">                <span class="keyword">case</span> YEAR: <span class="keyword">return</span> withYear((<span class="type">int</span>) newValue);</span><br><span class="line">                <span class="keyword">case</span> ERA: <span class="keyword">return</span> (getLong(ERA) == newValue ? <span class="built_in">this</span> : withYear(<span class="number">1</span> - year));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnsupportedTemporalTypeException</span>(<span class="string">&quot;Unsupported field: &quot;</span> + field);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> field.adjustInto(<span class="built_in">this</span>, newValue);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回修改年后的日期</span></span><br><span class="line">    <span class="keyword">public</span> LocalDate <span class="title function_">withYear</span><span class="params">(<span class="type">int</span> year)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.year == year) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        YEAR.checkValidValue(year);</span><br><span class="line">        <span class="keyword">return</span> resolvePreviousValid(year, month, day);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回修改月后的日期</span></span><br><span class="line">    <span class="keyword">public</span> LocalDate <span class="title function_">withMonth</span><span class="params">(<span class="type">int</span> month)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.month == month) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        MONTH_OF_YEAR.checkValidValue(month);</span><br><span class="line">        <span class="keyword">return</span> resolvePreviousValid(year, month, day);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回修改日后的日期</span></span><br><span class="line">    <span class="keyword">public</span> LocalDate <span class="title function_">withDayOfMonth</span><span class="params">(<span class="type">int</span> dayOfMonth)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.day == dayOfMonth) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> of(year, month, dayOfMonth);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回修改dayOfYear后的日期</span></span><br><span class="line">    <span class="keyword">public</span> LocalDate <span class="title function_">withDayOfYear</span><span class="params">(<span class="type">int</span> dayOfYear)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span>.getDayOfYear() == dayOfYear) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ofYearDay(year, dayOfYear);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//时间加上某字段后的日期，比如加上两个月localDate.plus(Period.ofMonths(2))</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> LocalDate <span class="title function_">plus</span><span class="params">(TemporalAmount amountToAdd)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (amountToAdd <span class="keyword">instanceof</span> Period) &#123;</span><br><span class="line">            <span class="type">Period</span> <span class="variable">periodToAdd</span> <span class="operator">=</span> (Period) amountToAdd;</span><br><span class="line">            <span class="keyword">return</span> plusMonths(periodToAdd.toTotalMonths()).plusDays(periodToAdd.getDays());</span><br><span class="line">        &#125;</span><br><span class="line">        Objects.requireNonNull(amountToAdd, <span class="string">&quot;amountToAdd&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> (LocalDate) amountToAdd.addTo(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//时间加上某字段后的日期，比如加上两年localDate.plus(2, ChronoUnit.YEARS)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> LocalDate <span class="title function_">plus</span><span class="params">(<span class="type">long</span> amountToAdd, TemporalUnit unit)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (unit <span class="keyword">instanceof</span> ChronoUnit) &#123;</span><br><span class="line">            <span class="type">ChronoUnit</span> <span class="variable">f</span> <span class="operator">=</span> (ChronoUnit) unit;</span><br><span class="line">            <span class="keyword">switch</span> (f) &#123;</span><br><span class="line">                <span class="keyword">case</span> DAYS: <span class="keyword">return</span> plusDays(amountToAdd);</span><br><span class="line">                <span class="keyword">case</span> WEEKS: <span class="keyword">return</span> plusWeeks(amountToAdd);</span><br><span class="line">                <span class="keyword">case</span> MONTHS: <span class="keyword">return</span> plusMonths(amountToAdd);</span><br><span class="line">                <span class="keyword">case</span> YEARS: <span class="keyword">return</span> plusYears(amountToAdd);</span><br><span class="line">                <span class="keyword">case</span> DECADES: <span class="keyword">return</span> plusYears(Math.multiplyExact(amountToAdd, <span class="number">10</span>));</span><br><span class="line">                <span class="keyword">case</span> CENTURIES: <span class="keyword">return</span> plusYears(Math.multiplyExact(amountToAdd, <span class="number">100</span>));</span><br><span class="line">                <span class="keyword">case</span> MILLENNIA: <span class="keyword">return</span> plusYears(Math.multiplyExact(amountToAdd, <span class="number">1000</span>));</span><br><span class="line">                <span class="keyword">case</span> ERAS: <span class="keyword">return</span> with(ERA, Math.addExact(getLong(ERA), amountToAdd));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnsupportedTemporalTypeException</span>(<span class="string">&quot;Unsupported unit: &quot;</span> + unit);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> unit.addTo(<span class="built_in">this</span>, amountToAdd);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//加上年</span></span><br><span class="line">    <span class="keyword">public</span> LocalDate <span class="title function_">plusYears</span><span class="params">(<span class="type">long</span> yearsToAdd)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (yearsToAdd == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">newYear</span> <span class="operator">=</span> YEAR.checkValidIntValue(year + yearsToAdd);  <span class="comment">// safe overflow</span></span><br><span class="line">        <span class="keyword">return</span> resolvePreviousValid(newYear, month, day);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//加上月</span></span><br><span class="line">    <span class="keyword">public</span> LocalDate <span class="title function_">plusMonths</span><span class="params">(<span class="type">long</span> monthsToAdd)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (monthsToAdd == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">monthCount</span> <span class="operator">=</span> year * <span class="number">12L</span> + (month - <span class="number">1</span>);</span><br><span class="line">        <span class="type">long</span> <span class="variable">calcMonths</span> <span class="operator">=</span> monthCount + monthsToAdd;  <span class="comment">// safe overflow</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">newYear</span> <span class="operator">=</span> YEAR.checkValidIntValue(Math.floorDiv(calcMonths, <span class="number">12</span>));</span><br><span class="line">        <span class="type">int</span> <span class="variable">newMonth</span> <span class="operator">=</span> (<span class="type">int</span>)Math.floorMod(calcMonths, <span class="number">12</span>) + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> resolvePreviousValid(newYear, newMonth, day);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//加上周</span></span><br><span class="line">    <span class="keyword">public</span> LocalDate <span class="title function_">plusWeeks</span><span class="params">(<span class="type">long</span> weeksToAdd)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> plusDays(Math.multiplyExact(weeksToAdd, <span class="number">7</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//加上日</span></span><br><span class="line">    <span class="keyword">public</span> LocalDate <span class="title function_">plusDays</span><span class="params">(<span class="type">long</span> daysToAdd)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (daysToAdd == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">mjDay</span> <span class="operator">=</span> Math.addExact(toEpochDay(), daysToAdd);</span><br><span class="line">        <span class="keyword">return</span> LocalDate.ofEpochDay(mjDay);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//下面同理都是减</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> LocalDate <span class="title function_">minus</span><span class="params">(TemporalAmount amountToSubtract)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (amountToSubtract <span class="keyword">instanceof</span> Period) &#123;</span><br><span class="line">            <span class="type">Period</span> <span class="variable">periodToSubtract</span> <span class="operator">=</span> (Period) amountToSubtract;</span><br><span class="line">            <span class="keyword">return</span> minusMonths(periodToSubtract.toTotalMonths()).minusDays(periodToSubtract.getDays());</span><br><span class="line">        &#125;</span><br><span class="line">        Objects.requireNonNull(amountToSubtract, <span class="string">&quot;amountToSubtract&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> (LocalDate) amountToSubtract.subtractFrom(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> LocalDate <span class="title function_">minus</span><span class="params">(<span class="type">long</span> amountToSubtract, TemporalUnit unit)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (amountToSubtract == Long.MIN_VALUE ? plus(Long.MAX_VALUE, unit).plus(<span class="number">1</span>, unit) : plus(-amountToSubtract, unit));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> LocalDate <span class="title function_">minusYears</span><span class="params">(<span class="type">long</span> yearsToSubtract)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (yearsToSubtract == Long.MIN_VALUE ? plusYears(Long.MAX_VALUE).plusYears(<span class="number">1</span>) : plusYears(-yearsToSubtract));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> LocalDate <span class="title function_">minusMonths</span><span class="params">(<span class="type">long</span> monthsToSubtract)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (monthsToSubtract == Long.MIN_VALUE ? plusMonths(Long.MAX_VALUE).plusMonths(<span class="number">1</span>) : plusMonths(-monthsToSubtract));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> LocalDate <span class="title function_">minusWeeks</span><span class="params">(<span class="type">long</span> weeksToSubtract)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (weeksToSubtract == Long.MIN_VALUE ? plusWeeks(Long.MAX_VALUE).plusWeeks(<span class="number">1</span>) : plusWeeks(-weeksToSubtract));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> LocalDate <span class="title function_">minusDays</span><span class="params">(<span class="type">long</span> daysToSubtract)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (daysToSubtract == Long.MIN_VALUE ? plusDays(Long.MAX_VALUE).plusDays(<span class="number">1</span>) : plusDays(-daysToSubtract));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//使用指定的查询查询此瞬间</span></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> &lt;R&gt; R <span class="title function_">query</span><span class="params">(TemporalQuery&lt;R&gt; query)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (query == TemporalQueries.localDate()) &#123;</span><br><span class="line">            <span class="keyword">return</span> (R) <span class="built_in">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ChronoLocalDate.<span class="built_in">super</span>.query(query);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//调整指定的时间对象，使其具有与此对象相同的日期。</span></span><br><span class="line">    <span class="meta">@Override</span>  <span class="comment">// override for Javadoc</span></span><br><span class="line">    <span class="keyword">public</span> Temporal <span class="title function_">adjustInto</span><span class="params">(Temporal temporal)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> ChronoLocalDate.<span class="built_in">super</span>.adjustInto(temporal);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据指定的单位计算到另一个日期的时间量。</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">until</span><span class="params">(Temporal endExclusive, TemporalUnit unit)</span> &#123;</span><br><span class="line">        <span class="type">LocalDate</span> <span class="variable">end</span> <span class="operator">=</span> LocalDate.from(endExclusive);</span><br><span class="line">        <span class="keyword">if</span> (unit <span class="keyword">instanceof</span> ChronoUnit) &#123;</span><br><span class="line">            <span class="keyword">switch</span> ((ChronoUnit) unit) &#123;</span><br><span class="line">                <span class="keyword">case</span> DAYS: <span class="keyword">return</span> daysUntil(end);</span><br><span class="line">                <span class="keyword">case</span> WEEKS: <span class="keyword">return</span> daysUntil(end) / <span class="number">7</span>;</span><br><span class="line">                <span class="keyword">case</span> MONTHS: <span class="keyword">return</span> monthsUntil(end);</span><br><span class="line">                <span class="keyword">case</span> YEARS: <span class="keyword">return</span> monthsUntil(end) / <span class="number">12</span>;</span><br><span class="line">                <span class="keyword">case</span> DECADES: <span class="keyword">return</span> monthsUntil(end) / <span class="number">120</span>;</span><br><span class="line">                <span class="keyword">case</span> CENTURIES: <span class="keyword">return</span> monthsUntil(end) / <span class="number">1200</span>;</span><br><span class="line">                <span class="keyword">case</span> MILLENNIA: <span class="keyword">return</span> monthsUntil(end) / <span class="number">12000</span>;</span><br><span class="line">                <span class="keyword">case</span> ERAS: <span class="keyword">return</span> end.getLong(ERA) - getLong(ERA);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnsupportedTemporalTypeException</span>(<span class="string">&quot;Unsupported unit: &quot;</span> + unit);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> unit.between(<span class="built_in">this</span>, end);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">long</span> <span class="title function_">daysUntil</span><span class="params">(LocalDate end)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> end.toEpochDay() - toEpochDay();  <span class="comment">// no overflow</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> <span class="title function_">monthsUntil</span><span class="params">(LocalDate end)</span> &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">packed1</span> <span class="operator">=</span> getProlepticMonth() * <span class="number">32L</span> + getDayOfMonth();  <span class="comment">// no overflow</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">packed2</span> <span class="operator">=</span> end.getProlepticMonth() * <span class="number">32L</span> + end.getDayOfMonth();  <span class="comment">// no overflow</span></span><br><span class="line">        <span class="keyword">return</span> (packed2 - packed1) / <span class="number">32</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//计算此日期与另一日期之间的期间作为Period</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Period <span class="title function_">until</span><span class="params">(ChronoLocalDate endDateExclusive)</span> &#123;</span><br><span class="line">        <span class="type">LocalDate</span> <span class="variable">end</span> <span class="operator">=</span> LocalDate.from(endDateExclusive);</span><br><span class="line">        <span class="type">long</span> <span class="variable">totalMonths</span> <span class="operator">=</span> end.getProlepticMonth() - <span class="built_in">this</span>.getProlepticMonth();  <span class="comment">// safe</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">days</span> <span class="operator">=</span> end.day - <span class="built_in">this</span>.day;</span><br><span class="line">        <span class="keyword">if</span> (totalMonths &gt; <span class="number">0</span> &amp;&amp; days &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            totalMonths--;</span><br><span class="line">            <span class="type">LocalDate</span> <span class="variable">calcDate</span> <span class="operator">=</span> <span class="built_in">this</span>.plusMonths(totalMonths);</span><br><span class="line">            days = (<span class="type">int</span>) (end.toEpochDay() - calcDate.toEpochDay());  <span class="comment">// safe</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (totalMonths &lt; <span class="number">0</span> &amp;&amp; days &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            totalMonths++;</span><br><span class="line">            days -= end.lengthOfMonth();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">long</span> <span class="variable">years</span> <span class="operator">=</span> totalMonths / <span class="number">12</span>;  <span class="comment">// safe</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">months</span> <span class="operator">=</span> (<span class="type">int</span>) (totalMonths % <span class="number">12</span>);  <span class="comment">// safe</span></span><br><span class="line">        <span class="keyword">return</span> Period.of(Math.toIntExact(years), months, days);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用特定的字符串格式化时间</span></span><br><span class="line">    <span class="meta">@Override</span>  <span class="comment">// override for Javadoc and performance</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">format</span><span class="params">(DateTimeFormatter formatter)</span> &#123;</span><br><span class="line">        Objects.requireNonNull(formatter, <span class="string">&quot;formatter&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> formatter.format(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将此日期与时间组合以创建LocalDateTime</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> LocalDateTime <span class="title function_">atTime</span><span class="params">(LocalTime time)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> LocalDateTime.of(<span class="built_in">this</span>, time);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> LocalDateTime <span class="title function_">atTime</span><span class="params">(<span class="type">int</span> hour, <span class="type">int</span> minute)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> atTime(LocalTime.of(hour, minute));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> LocalDateTime <span class="title function_">atTime</span><span class="params">(<span class="type">int</span> hour, <span class="type">int</span> minute, <span class="type">int</span> second)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> atTime(LocalTime.of(hour, minute, second));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> LocalDateTime <span class="title function_">atTime</span><span class="params">(<span class="type">int</span> hour, <span class="type">int</span> minute, <span class="type">int</span> second, <span class="type">int</span> nanoOfSecond)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> atTime(LocalTime.of(hour, minute, second, nanoOfSecond));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> OffsetDateTime <span class="title function_">atTime</span><span class="params">(OffsetTime time)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> OffsetDateTime.of(LocalDateTime.of(<span class="built_in">this</span>, time.toLocalTime()), time.getOffset());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将此日期与午夜时间相结合以创建LocalDateTime</span></span><br><span class="line">    <span class="keyword">public</span> LocalDateTime <span class="title function_">atStartOfDay</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> LocalDateTime.of(<span class="built_in">this</span>, LocalTime.MIDNIGHT);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据时区中的规则，在最早的有效时间返回从该日期开始的分区日期时间。</span></span><br><span class="line">    <span class="keyword">public</span> ZonedDateTime <span class="title function_">atStartOfDay</span><span class="params">(ZoneId zone)</span> &#123;</span><br><span class="line">        Objects.requireNonNull(zone, <span class="string">&quot;zone&quot;</span>);</span><br><span class="line">        <span class="comment">// need to handle case where there is a gap from 11:30 to 00:30</span></span><br><span class="line">        <span class="comment">// standard ZDT factory would result in 01:00 rather than 00:30</span></span><br><span class="line">        <span class="type">LocalDateTime</span> <span class="variable">ldt</span> <span class="operator">=</span> atTime(LocalTime.MIDNIGHT);</span><br><span class="line">        <span class="keyword">if</span> (zone <span class="keyword">instanceof</span> ZoneOffset == <span class="literal">false</span>) &#123;</span><br><span class="line">            <span class="type">ZoneRules</span> <span class="variable">rules</span> <span class="operator">=</span> zone.getRules();</span><br><span class="line">            <span class="type">ZoneOffsetTransition</span> <span class="variable">trans</span> <span class="operator">=</span> rules.getTransition(ldt);</span><br><span class="line">            <span class="keyword">if</span> (trans != <span class="literal">null</span> &amp;&amp; trans.isGap()) &#123;</span><br><span class="line">                ldt = trans.getDateTimeAfter();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ZonedDateTime.of(ldt, zone);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//转换为公元日(从1970年1月1日到现在经过了多少天)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">toEpochDay</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">long</span> <span class="variable">y</span> <span class="operator">=</span> year;</span><br><span class="line">        <span class="type">long</span> <span class="variable">m</span> <span class="operator">=</span> month;</span><br><span class="line">        <span class="type">long</span> <span class="variable">total</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        total += <span class="number">365</span> * y;</span><br><span class="line">        <span class="keyword">if</span> (y &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            total += (y + <span class="number">3</span>) / <span class="number">4</span> - (y + <span class="number">99</span>) / <span class="number">100</span> + (y + <span class="number">399</span>) / <span class="number">400</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            total -= y / -<span class="number">4</span> - y / -<span class="number">100</span> + y / -<span class="number">400</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        total += ((<span class="number">367</span> * m - <span class="number">362</span>) / <span class="number">12</span>);</span><br><span class="line">        total += day - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (m &gt; <span class="number">2</span>) &#123;</span><br><span class="line">            total--;</span><br><span class="line">            <span class="keyword">if</span> (isLeapYear() == <span class="literal">false</span>) &#123;</span><br><span class="line">                total--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> total - DAYS_0000_TO_1970;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//与指定时间比较，调用compareTo0()</span></span><br><span class="line">    <span class="meta">@Override</span>  <span class="comment">// override for Javadoc and performance</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compareTo</span><span class="params">(ChronoLocalDate other)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (other <span class="keyword">instanceof</span> LocalDate) &#123;</span><br><span class="line">            <span class="keyword">return</span> compareTo0((LocalDate) other);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ChronoLocalDate.<span class="built_in">super</span>.compareTo(other);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//与指定时间比较</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">compareTo0</span><span class="params">(LocalDate otherDate)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">cmp</span> <span class="operator">=</span> (year - otherDate.year);</span><br><span class="line">        <span class="keyword">if</span> (cmp == <span class="number">0</span>) &#123;</span><br><span class="line">            cmp = (month - otherDate.month);</span><br><span class="line">            <span class="keyword">if</span> (cmp == <span class="number">0</span>) &#123;</span><br><span class="line">                cmp = (day - otherDate.day);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cmp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断时间的先后，判断时间是在指定时间的前面</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAfter</span><span class="params">(ChronoLocalDate other)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (other <span class="keyword">instanceof</span> LocalDate) &#123;</span><br><span class="line">            <span class="keyword">return</span> compareTo0((LocalDate) other) &gt; <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ChronoLocalDate.<span class="built_in">super</span>.isAfter(other);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断时间的先后，判断时间是在指定时间的后面</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isBefore</span><span class="params">(ChronoLocalDate other)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (other <span class="keyword">instanceof</span> LocalDate) &#123;</span><br><span class="line">            <span class="keyword">return</span> compareTo0((LocalDate) other) &lt; <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ChronoLocalDate.<span class="built_in">super</span>.isBefore(other);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断时间是否相等</span></span><br><span class="line">    <span class="meta">@Override</span>  <span class="comment">// override for Javadoc and performance</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEqual</span><span class="params">(ChronoLocalDate other)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (other <span class="keyword">instanceof</span> LocalDate) &#123;</span><br><span class="line">            <span class="keyword">return</span> compareTo0((LocalDate) other) == <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ChronoLocalDate.<span class="built_in">super</span>.isEqual(other);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object obj)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">this</span> == obj) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> LocalDate) &#123;</span><br><span class="line">            <span class="keyword">return</span> compareTo0((LocalDate) obj) == <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//重写时间的hashCode</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">hashCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">yearValue</span> <span class="operator">=</span> year;</span><br><span class="line">        <span class="type">int</span> <span class="variable">monthValue</span> <span class="operator">=</span> month;</span><br><span class="line">        <span class="type">int</span> <span class="variable">dayValue</span> <span class="operator">=</span> day;</span><br><span class="line">        <span class="keyword">return</span> (yearValue &amp; <span class="number">0xFFFFF800</span>) ^ ((yearValue &lt;&lt; <span class="number">11</span>) + (monthValue &lt;&lt; <span class="number">6</span>) + (dayValue));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//以&#123;@code 2007-12-03&#125;的形式输出字符串</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">yearValue</span> <span class="operator">=</span> year;</span><br><span class="line">        <span class="type">int</span> <span class="variable">monthValue</span> <span class="operator">=</span> month;</span><br><span class="line">        <span class="type">int</span> <span class="variable">dayValue</span> <span class="operator">=</span> day;</span><br><span class="line">        <span class="type">int</span> <span class="variable">absYear</span> <span class="operator">=</span> Math.abs(yearValue);</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">buf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">if</span> (absYear &lt; <span class="number">1000</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (yearValue &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                buf.append(yearValue - <span class="number">10000</span>).deleteCharAt(<span class="number">1</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                buf.append(yearValue + <span class="number">10000</span>).deleteCharAt(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (yearValue &gt; <span class="number">9999</span>) &#123;</span><br><span class="line">                buf.append(<span class="string">&#x27;+&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            buf.append(yearValue);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> buf.append(monthValue &lt; <span class="number">10</span> ? <span class="string">&quot;-0&quot;</span> : <span class="string">&quot;-&quot;</span>)</span><br><span class="line">            .append(monthValue)</span><br><span class="line">            .append(dayValue &lt; <span class="number">10</span> ? <span class="string">&quot;-0&quot;</span> : <span class="string">&quot;-&quot;</span>)</span><br><span class="line">            .append(dayValue)</span><br><span class="line">            .toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用java.time.Ser序列化时间对象</span></span><br><span class="line">    <span class="keyword">private</span> Object <span class="title function_">writeReplace</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Ser</span>(Ser.LOCAL_DATE_TYPE, <span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//防止恶意的Stream,直接抛异常</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">readObject</span><span class="params">(ObjectInputStream s)</span> <span class="keyword">throws</span> InvalidObjectException &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">InvalidObjectException</span>(<span class="string">&quot;Deserialization via serialization delegate&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//把时间写到输出流里面</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">writeExternal</span><span class="params">(DataOutput out)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        out.writeInt(year);</span><br><span class="line">        out.writeByte(month);</span><br><span class="line">        out.writeByte(day);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//从输出流里面读取时间创建对象</span></span><br><span class="line">    <span class="keyword">static</span> LocalDate <span class="title function_">readExternal</span><span class="params">(DataInput in)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">year</span> <span class="operator">=</span> in.readInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">month</span> <span class="operator">=</span> in.readByte();</span><br><span class="line">        <span class="type">int</span> <span class="variable">dayOfMonth</span> <span class="operator">=</span> in.readByte();</span><br><span class="line">        <span class="keyword">return</span> LocalDate.of(year, month, dayOfMonth);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="后记"><a class="markdownIt-Anchor" href="#后记"></a> 后记</h3><ol><li>源码是真的长，一度想放弃了。</li><li>以后源码计划，只挑重点，只挑核心。不做API翻译…</li><li>后面可能会有看一些 Spring redis nginx 等等…</li><li>新挖一个坑：数据库</li><li>尽量做到至少月更一次 (Maybe)</li><li>半入坑<code>C#</code>。里面的委托有点意思 类似<code>C++</code>函数指针。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术栈 </category>
          
          <category> 后端 </category>
          
          <category> Java </category>
          
          <category> 源码计划 </category>
          
          <category> jdk </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 时间 </tag>
            
            <tag> Java </tag>
            
            <tag> JDK8 </tag>
            
            <tag> 源码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Katex插件渲染测试</title>
      <link href="/KatexRenderTest/"/>
      <url>/KatexRenderTest/</url>
      
        <content type="html"><![CDATA[<h1 id="测试katex插件"><a class="markdownIt-Anchor" href="#测试katex插件"></a> 测试Katex插件</h1><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>6</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>8</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>9</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\begin{pmatrix}2&amp;3&amp;4\\5&amp;6&amp;7\\7&amp;8&amp;9\\5&amp;2&amp;3\end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎜</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">6</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500299999999997em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-2.805em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-3.4050100000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎟</span></span></span><span style="top:-4.65003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi><mo>=</mo><mfrac><mrow><mo>−</mo><mi>b</mi><mo>±</mo><msqrt><mrow><msup><mi>b</mi><mn>2</mn></msup><mo>−</mo><mn>4</mn><mi>a</mi><mi>c</mi></mrow></msqrt></mrow><mrow><mn>2</mn><mi>a</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">x=\frac{-b\pm\sqrt{b^2-4ac}}{2a}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.384482em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.039482em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">a</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.3939999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">b</span><span class="mbin mtight">±</span><span class="mord sqrt mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9221171428571429em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight" style="padding-left:0.833em;"><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">4</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">c</span></span></span><span style="top:-2.882117142857143em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail mtight" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z M834 80H400000v40H845z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.11788285714285718em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mo>=</mo><msub><mi>d</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub><mn>1</mn><msup><mn>0</mn><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>d</mi><mn>1</mn></msub><mn>1</mn><msup><mn>0</mn><mn>1</mn></msup><mo>+</mo><msub><mi>d</mi><mn>0</mn></msub><mo stretchy="false">(</mo><mn>0</mn><mo>≤</mo><msub><mi>d</mi><mi>i</mi></msub><mo>≤</mo><mn>9</mn><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>d</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>&gt;</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N=d_{k-1}10^{k-1}+...+d_110^1+d_0(0≤d_i≤9,i=0,...,k-1,d_{k-1}&gt;0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0574389999999998em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.964108em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord">9</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>S</mi><mi>T</mi><mi>L</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi>G</mi><mi>o</mi><mi>o</mi><mi>d</mi><mi>E</mi><mi>v</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>s</mi></mrow><mrow><mi>V</mi><mi>a</mi><mi>l</mi><mi>i</mi><mi>d</mi><mi>E</mi><mi>v</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>s</mi></mrow></mfrac></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>∗</mo><mn>100</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">STL = \begin{bmatrix}\frac{Good Events}{Valid Events}\end{bmatrix}*100\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.240108em;vertical-align:-0.37005399999999994em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8700540000000001em;"><span style="top:-2.9899459999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">s</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">G</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">E</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight">n</span><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.37005399999999994em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">%</span></span></span></span></li></ul>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
          <category> Katex </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
            <tag> develop </tag>
            
            <tag> Katex </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Emoji表情测试</title>
      <link href="/emojitest/"/>
      <url>/emojitest/</url>
      
        <content type="html"><![CDATA[<h1 id="emoji"><a class="markdownIt-Anchor" href="#emoji"></a> Emoji</h1><p>测试Hexo emoji渲染引擎</p><span id="more"></span><table><thead><tr><th style="text-align:center">emoji</th><th style="text-align:left">word</th><th style="text-align:center">emoji</th><th style="text-align:left">word</th><th style="text-align:center">emoji</th><th style="text-align:left">word</th><th style="text-align:center">emoji</th><th style="text-align:left">word</th><th style="text-align:center">emoji</th><th style="text-align:left">word</th><th style="text-align:center">emoji</th><th style="text-align:left">word</th></tr></thead><tbody><tr><td style="text-align:center">💯</td><td style="text-align:left">100</td><td style="text-align:center">🔢</td><td style="text-align:left">1234</td><td style="text-align:center">😀</td><td style="text-align:left">grinning</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🔢</td><td style="text-align:left">1234</td><td style="text-align:center">😃</td><td style="text-align:left">smiley</td><td style="text-align:center">😁</td><td style="text-align:left">grin</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😀</td><td style="text-align:left">grinning</td><td style="text-align:center">😁</td><td style="text-align:left">grin</td><td style="text-align:center">😅</td><td style="text-align:left">sweat_smile</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😃</td><td style="text-align:left">smiley</td><td style="text-align:center">😆</td><td style="text-align:left">satisfied</td><td style="text-align:center">☺️</td><td style="text-align:left">relaxed</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😄</td><td style="text-align:left">smile</td><td style="text-align:center">😂</td><td style="text-align:left">joy</td><td style="text-align:center">🙂</td><td style="text-align:left">slightly_smiling_face</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😁</td><td style="text-align:left">grin</td><td style="text-align:center">☺️</td><td style="text-align:left">relaxed</td><td style="text-align:center">😌</td><td style="text-align:left">relieved</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😆</td><td style="text-align:left">laughing</td><td style="text-align:center">😇</td><td style="text-align:left">innocent</td><td style="text-align:center">😗</td><td style="text-align:left">kissing</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😆</td><td style="text-align:left">satisfied</td><td style="text-align:center">🙃</td><td style="text-align:left">upside_down_face</td><td style="text-align:center">😋</td><td style="text-align:left">yum</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😅</td><td style="text-align:left">sweat_smile</td><td style="text-align:center">😌</td><td style="text-align:left">relieved</td><td style="text-align:center">😛</td><td style="text-align:left">stuck_out_tongue</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😂</td><td style="text-align:left">joy</td><td style="text-align:center">😘</td><td style="text-align:left">kissing_heart</td><td style="text-align:center">🤓</td><td style="text-align:left">nerd_face</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤣</td><td style="text-align:left">rofl</td><td style="text-align:center">😙</td><td style="text-align:left">kissing_smiling_eyes</td><td style="text-align:center">🤠</td><td style="text-align:left">cowboy_hat_face</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">☺️</td><td style="text-align:left">relaxed</td><td style="text-align:center">😋</td><td style="text-align:left">yum</td><td style="text-align:center">😞</td><td style="text-align:left">disappointed</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😊</td><td style="text-align:left">blush</td><td style="text-align:center">😝</td><td style="text-align:left">stuck_out_tongue_closed_eyes</td><td style="text-align:center">😕</td><td style="text-align:left">confused</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😇</td><td style="text-align:left">innocent</td><td style="text-align:center">🤑</td><td style="text-align:left">money_mouth_face</td><td style="text-align:center">😣</td><td style="text-align:left">persevere</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙂</td><td style="text-align:left">slightly_smiling_face</td><td style="text-align:center">🤓</td><td style="text-align:left">nerd_face</td><td style="text-align:center">😩</td><td style="text-align:left">weary</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙃</td><td style="text-align:left">upside_down_face</td><td style="text-align:center">🤡</td><td style="text-align:left">clown_face</td><td style="text-align:center">😡</td><td style="text-align:left">rage</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😉</td><td style="text-align:left">wink</td><td style="text-align:center">😏</td><td style="text-align:left">smirk</td><td style="text-align:center">😐</td><td style="text-align:left">neutral_face</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😌</td><td style="text-align:left">relieved</td><td style="text-align:center">😞</td><td style="text-align:left">disappointed</td><td style="text-align:center">😦</td><td style="text-align:left">frowning</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😍</td><td style="text-align:left">heart_eyes</td><td style="text-align:center">😟</td><td style="text-align:left">worried</td><td style="text-align:center">😲</td><td style="text-align:left">astonished</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😘</td><td style="text-align:left">kissing_heart</td><td style="text-align:center">🙁</td><td style="text-align:left">slightly_frowning_face</td><td style="text-align:center">😱</td><td style="text-align:left">scream</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😗</td><td style="text-align:left">kissing</td><td style="text-align:center">😣</td><td style="text-align:left">persevere</td><td style="text-align:center">😢</td><td style="text-align:left">cry</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😙</td><td style="text-align:left">kissing_smiling_eyes</td><td style="text-align:center">😫</td><td style="text-align:left">tired_face</td><td style="text-align:center">😭</td><td style="text-align:left">sob</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😚</td><td style="text-align:left">kissing_closed_eyes</td><td style="text-align:center">😤</td><td style="text-align:left">triumph</td><td style="text-align:center">😴</td><td style="text-align:left">sleeping</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😋</td><td style="text-align:left">yum</td><td style="text-align:center">😡</td><td style="text-align:left">rage</td><td style="text-align:center">🤥</td><td style="text-align:left">lying_face</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😜</td><td style="text-align:left">stuck_out_tongue_winking_eye</td><td style="text-align:center">😶</td><td style="text-align:left">no_mouth</td><td style="text-align:center">🤢</td><td style="text-align:left">nauseated_face</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😝</td><td style="text-align:left">stuck_out_tongue_closed_eyes</td><td style="text-align:center">😑</td><td style="text-align:left">expressionless</td><td style="text-align:center">🤒</td><td style="text-align:left">face_with_thermometer</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😛</td><td style="text-align:left">stuck_out_tongue</td><td style="text-align:center">😦</td><td style="text-align:left">frowning</td><td style="text-align:center">👿</td><td style="text-align:left">imp</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤑</td><td style="text-align:left">money_mouth_face</td><td style="text-align:center">😮</td><td style="text-align:left">open_mouth</td><td style="text-align:center">💩</td><td style="text-align:left">hankey</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤗</td><td style="text-align:left">hugs</td><td style="text-align:center">😵</td><td style="text-align:left">dizzy_face</td><td style="text-align:center">👻</td><td style="text-align:left">ghost</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤓</td><td style="text-align:left">nerd_face</td><td style="text-align:center">😱</td><td style="text-align:left">scream</td><td style="text-align:center">👽</td><td style="text-align:left">alien</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😎</td><td style="text-align:left">sunglasses</td><td style="text-align:center">😰</td><td style="text-align:left">cold_sweat</td><td style="text-align:center">🎃</td><td style="text-align:left">jack_o_lantern</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤡</td><td style="text-align:left">clown_face</td><td style="text-align:center">😥</td><td style="text-align:left">disappointed_relieved</td><td style="text-align:center">😹</td><td style="text-align:left">joy_cat</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤠</td><td style="text-align:left">cowboy_hat_face</td><td style="text-align:center">😭</td><td style="text-align:left">sob</td><td style="text-align:center">😽</td><td style="text-align:left">kissing_cat</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😏</td><td style="text-align:left">smirk</td><td style="text-align:center">😪</td><td style="text-align:left">sleepy</td><td style="text-align:center">😾</td><td style="text-align:left">pouting_cat</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😒</td><td style="text-align:left">unamused</td><td style="text-align:center">🙄</td><td style="text-align:left">roll_eyes</td><td style="text-align:center">👏</td><td style="text-align:left">clap</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😞</td><td style="text-align:left">disappointed</td><td style="text-align:center">🤥</td><td style="text-align:left">lying_face</td><td style="text-align:center">👍</td><td style="text-align:left">+1</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😔</td><td style="text-align:left">pensive</td><td style="text-align:center">🤐</td><td style="text-align:left">zipper_mouth_face</td><td style="text-align:center">👎</td><td style="text-align:left">thumbsdown</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😟</td><td style="text-align:left">worried</td><td style="text-align:center">🤧</td><td style="text-align:left">sneezing_face</td><td style="text-align:center">👊</td><td style="text-align:left">punch</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😕</td><td style="text-align:left">confused</td><td style="text-align:center">🤒</td><td style="text-align:left">face_with_thermometer</td><td style="text-align:center">🤛</td><td style="text-align:left">fist_left</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙁</td><td style="text-align:left">slightly_frowning_face</td><td style="text-align:center">😈</td><td style="text-align:left">smiling_imp</td><td style="text-align:center">✌️</td><td style="text-align:left">v</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">☹️</td><td style="text-align:left">frowning_face</td><td style="text-align:center">👹</td><td style="text-align:left">japanese_ogre</td><td style="text-align:center">👈</td><td style="text-align:left">point_left</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😣</td><td style="text-align:left">persevere</td><td style="text-align:center">💩</td><td style="text-align:left">hankey</td><td style="text-align:center">👇</td><td style="text-align:left">point_down</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😖</td><td style="text-align:left">confounded</td><td style="text-align:center">💩</td><td style="text-align:left">shit</td><td style="text-align:center">✋</td><td style="text-align:left">raised_hand</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😫</td><td style="text-align:left">tired_face</td><td style="text-align:center">💀</td><td style="text-align:left">skull</td><td style="text-align:center">🖖</td><td style="text-align:left">vulcan_salute</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😩</td><td style="text-align:left">weary</td><td style="text-align:center">👽</td><td style="text-align:left">alien</td><td style="text-align:center">💪</td><td style="text-align:left">muscle</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😤</td><td style="text-align:left">triumph</td><td style="text-align:center">🤖</td><td style="text-align:left">robot</td><td style="text-align:center">✍️</td><td style="text-align:left">writing_hand</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😠</td><td style="text-align:left">angry</td><td style="text-align:center">😺</td><td style="text-align:left">smiley_cat</td><td style="text-align:center">💍</td><td style="text-align:left">ring</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😡</td><td style="text-align:left">rage</td><td style="text-align:center">😹</td><td style="text-align:left">joy_cat</td><td style="text-align:center">👄</td><td style="text-align:left">lips</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😡</td><td style="text-align:left">pout</td><td style="text-align:center">😼</td><td style="text-align:left">smirk_cat</td><td style="text-align:center">👃</td><td style="text-align:left">nose</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😶</td><td style="text-align:left">no_mouth</td><td style="text-align:center">🙀</td><td style="text-align:left">scream_cat</td><td style="text-align:center">👀</td><td style="text-align:left">eyes</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😐</td><td style="text-align:left">neutral_face</td><td style="text-align:center">😾</td><td style="text-align:left">pouting_cat</td><td style="text-align:center">👥</td><td style="text-align:left">busts_in_silhouette</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😑</td><td style="text-align:left">expressionless</td><td style="text-align:center">🙌</td><td style="text-align:left">raised_hands</td><td style="text-align:center">👧</td><td style="text-align:left">girl</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😯</td><td style="text-align:left">hushed</td><td style="text-align:center">🙏</td><td style="text-align:left">pray</td><td style="text-align:center">👱‍♀</td><td style="text-align:left">blonde_woman</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😦</td><td style="text-align:left">frowning</td><td style="text-align:center">👍</td><td style="text-align:left">+1</td><td style="text-align:center">👴</td><td style="text-align:left">older_man</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😧</td><td style="text-align:left">anguished</td><td style="text-align:center">👎</td><td style="text-align:left">-1</td><td style="text-align:center">👳‍♀</td><td style="text-align:left">woman_with_turban</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😮</td><td style="text-align:left">open_mouth</td><td style="text-align:center">👊</td><td style="text-align:left">fist_oncoming</td><td style="text-align:center">👮</td><td style="text-align:left">policeman</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😲</td><td style="text-align:left">astonished</td><td style="text-align:center">👊</td><td style="text-align:left">punch</td><td style="text-align:center">👷</td><td style="text-align:left">construction_worker_man</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😵</td><td style="text-align:left">dizzy_face</td><td style="text-align:center">✊</td><td style="text-align:left">fist</td><td style="text-align:center">💂</td><td style="text-align:left">guardsman</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😳</td><td style="text-align:left">flushed</td><td style="text-align:center">🤜</td><td style="text-align:left">fist_right</td><td style="text-align:center">🕵</td><td style="text-align:left">detective</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😱</td><td style="text-align:left">scream</td><td style="text-align:center">✌️</td><td style="text-align:left">v</td><td style="text-align:center">👩‍🌾</td><td style="text-align:left">woman_farmer</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😨</td><td style="text-align:left">fearful</td><td style="text-align:center">👌</td><td style="text-align:left">ok_hand</td><td style="text-align:center">👨‍🍳</td><td style="text-align:left">man_cook</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😰</td><td style="text-align:left">cold_sweat</td><td style="text-align:center">👉</td><td style="text-align:left">point_right</td><td style="text-align:center">👩‍🎤</td><td style="text-align:left">woman_singer</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😢</td><td style="text-align:left">cry</td><td style="text-align:center">👇</td><td style="text-align:left">point_down</td><td style="text-align:center">👨‍🏫</td><td style="text-align:left">man_teacher</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😥</td><td style="text-align:left">disappointed_relieved</td><td style="text-align:center">✋</td><td style="text-align:left">hand</td><td style="text-align:center">👩‍💻</td><td style="text-align:left">woman_technologist</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤤</td><td style="text-align:left">drooling_face</td><td style="text-align:center">🤚</td><td style="text-align:left">raised_back_of_hand</td><td style="text-align:center">👨‍💼</td><td style="text-align:left">man_office_worker</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😭</td><td style="text-align:left">sob</td><td style="text-align:center">🖖</td><td style="text-align:left">vulcan_salute</td><td style="text-align:center">👩‍🔬</td><td style="text-align:left">woman_scientist</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😓</td><td style="text-align:left">sweat</td><td style="text-align:center">🤙</td><td style="text-align:left">call_me_hand</td><td style="text-align:center">👨‍🎨</td><td style="text-align:left">man_artist</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😪</td><td style="text-align:left">sleepy</td><td style="text-align:center">🖕</td><td style="text-align:left">middle_finger</td><td style="text-align:center">👩‍✈</td><td style="text-align:left">woman_pilot</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😴</td><td style="text-align:left">sleeping</td><td style="text-align:center">✍️</td><td style="text-align:left">writing_hand</td><td style="text-align:center">👨‍🚀</td><td style="text-align:left">man_astronaut</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙄</td><td style="text-align:left">roll_eyes</td><td style="text-align:center">💅</td><td style="text-align:left">nail_care</td><td style="text-align:center">🤶</td><td style="text-align:left">mrs_claus</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤔</td><td style="text-align:left">thinking</td><td style="text-align:center">💄</td><td style="text-align:left">lipstick</td><td style="text-align:center">🤴</td><td style="text-align:left">prince</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤥</td><td style="text-align:left">lying_face</td><td style="text-align:center">👄</td><td style="text-align:left">lips</td><td style="text-align:center">👼</td><td style="text-align:left">angel</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😬</td><td style="text-align:left">grimacing</td><td style="text-align:center">👂</td><td style="text-align:left">ear</td><td style="text-align:center">🙇</td><td style="text-align:left">bowing_man</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤐</td><td style="text-align:left">zipper_mouth_face</td><td style="text-align:center">👣</td><td style="text-align:left">footprints</td><td style="text-align:center">💁</td><td style="text-align:left">information_desk_person</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤢</td><td style="text-align:left">nauseated_face</td><td style="text-align:center">👀</td><td style="text-align:left">eyes</td><td style="text-align:center">💁‍♂</td><td style="text-align:left">sassy_man</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤧</td><td style="text-align:left">sneezing_face</td><td style="text-align:center">👤</td><td style="text-align:left">bust_in_silhouette</td><td style="text-align:center">🙅</td><td style="text-align:left">ng_woman</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😷</td><td style="text-align:left">mask</td><td style="text-align:center">👶</td><td style="text-align:left">baby</td><td style="text-align:center">🙆</td><td style="text-align:left">ok_woman</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤒</td><td style="text-align:left">face_with_thermometer</td><td style="text-align:center">👧</td><td style="text-align:left">girl</td><td style="text-align:center">🙋</td><td style="text-align:left">raising_hand</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤕</td><td style="text-align:left">face_with_head_bandage</td><td style="text-align:center">👩</td><td style="text-align:left">woman</td><td style="text-align:center">🤦‍♂</td><td style="text-align:left">man_facepalming</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😈</td><td style="text-align:left">smiling_imp</td><td style="text-align:center">👱</td><td style="text-align:left">blonde_man</td><td style="text-align:center">🙎</td><td style="text-align:left">pouting_woman</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👿</td><td style="text-align:left">imp</td><td style="text-align:center">👴</td><td style="text-align:left">older_man</td><td style="text-align:center">🙍</td><td style="text-align:left">frowning_woman</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👹</td><td style="text-align:left">japanese_ogre</td><td style="text-align:center">👲</td><td style="text-align:left">man_with_gua_pi_mao</td><td style="text-align:center">💇</td><td style="text-align:left">haircut_woman</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👺</td><td style="text-align:left">japanese_goblin</td><td style="text-align:center">👳</td><td style="text-align:left">man_with_turban</td><td style="text-align:center">💆</td><td style="text-align:left">massage_woman</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💩</td><td style="text-align:left">hankey</td><td style="text-align:center">👮</td><td style="text-align:left">policeman</td><td style="text-align:center">🕴</td><td style="text-align:left">business_suit_levitating</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💩</td><td style="text-align:left">poop</td><td style="text-align:center">👷‍♀</td><td style="text-align:left">construction_worker_woman</td><td style="text-align:center">👯</td><td style="text-align:left">dancing_women</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💩</td><td style="text-align:left">shit</td><td style="text-align:center">👷</td><td style="text-align:left">construction_worker</td><td style="text-align:center">🚶‍♀</td><td style="text-align:left">walking_woman</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👻</td><td style="text-align:left">ghost</td><td style="text-align:center">💂</td><td style="text-align:left">guardsman</td><td style="text-align:center">🏃‍♀</td><td style="text-align:left">running_woman</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💀</td><td style="text-align:left">skull</td><td style="text-align:center">🕵</td><td style="text-align:left">male_detective</td><td style="text-align:center">🏃</td><td style="text-align:left">running</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">☠️</td><td style="text-align:left">skull_and_crossbones</td><td style="text-align:center">👩‍⚕</td><td style="text-align:left">woman_health_worker</td><td style="text-align:center">👬</td><td style="text-align:left">two_men_holding_hands</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👽</td><td style="text-align:left">alien</td><td style="text-align:center">👩‍🌾</td><td style="text-align:left">woman_farmer</td><td style="text-align:center">👩‍❤️‍👩</td><td style="text-align:left">couple_with_heart_woman_woman</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👾</td><td style="text-align:left">space_invader</td><td style="text-align:center">👩‍🍳</td><td style="text-align:left">woman_cook</td><td style="text-align:center">👩‍❤️‍💋‍👩</td><td style="text-align:left">couplekiss_woman_woman</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤖</td><td style="text-align:left">robot</td><td style="text-align:center">👩‍🎓</td><td style="text-align:left">woman_student</td><td style="text-align:center">👪</td><td style="text-align:left">family</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🎃</td><td style="text-align:left">jack_o_lantern</td><td style="text-align:center">👩‍🎤</td><td style="text-align:left">woman_singer</td><td style="text-align:center">👨‍👩‍👦‍👦</td><td style="text-align:left">family_man_woman_boy_boy</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😺</td><td style="text-align:left">smiley_cat</td><td style="text-align:center">👩‍🏫</td><td style="text-align:left">woman_teacher</td><td style="text-align:center">👩‍👩‍👧</td><td style="text-align:left">family_woman_woman_girl</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😸</td><td style="text-align:left">smile_cat</td><td style="text-align:center">👩‍🏭</td><td style="text-align:left">woman_factory_worker</td><td style="text-align:center">👩‍👩‍👧‍👧</td><td style="text-align:left">family_woman_woman_girl_girl</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😹</td><td style="text-align:left">joy_cat</td><td style="text-align:center">👩‍💻</td><td style="text-align:left">woman_technologist</td><td style="text-align:center">👨‍👨‍👧‍👦</td><td style="text-align:left">family_man_man_girl_boy</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😻</td><td style="text-align:left">heart_eyes_cat</td><td style="text-align:center">👩‍💼</td><td style="text-align:left">woman_office_worker</td><td style="text-align:center">👩‍👦</td><td style="text-align:left">family_woman_boy</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😼</td><td style="text-align:left">smirk_cat</td><td style="text-align:center">👩‍🔧</td><td style="text-align:left">woman_mechanic</td><td style="text-align:center">👩‍👦‍👦</td><td style="text-align:left">family_woman_boy_boy</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😽</td><td style="text-align:left">kissing_cat</td><td style="text-align:center">👩‍🔬</td><td style="text-align:left">woman_scientist</td><td style="text-align:center">👨‍👧</td><td style="text-align:left">family_man_girl</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙀</td><td style="text-align:left">scream_cat</td><td style="text-align:center">👩‍🎨</td><td style="text-align:left">woman_artist</td><td style="text-align:center">👨‍👧‍👧</td><td style="text-align:left">family_man_girl_girl</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😿</td><td style="text-align:left">crying_cat_face</td><td style="text-align:center">👩‍🚒</td><td style="text-align:left">woman_firefighter</td><td style="text-align:center">👕</td><td style="text-align:left">tshirt</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">😾</td><td style="text-align:left">pouting_cat</td><td style="text-align:center">👩‍✈</td><td style="text-align:left">woman_pilot</td><td style="text-align:center">👗</td><td style="text-align:left">dress</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👐</td><td style="text-align:left">open_hands</td><td style="text-align:center">👩‍🚀</td><td style="text-align:left">woman_astronaut</td><td style="text-align:center">👠</td><td style="text-align:left">high_heel</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙌</td><td style="text-align:left">raised_hands</td><td style="text-align:center">👩‍⚖</td><td style="text-align:left">woman_judge</td><td style="text-align:center">👞</td><td style="text-align:left">mans_shoe</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👏</td><td style="text-align:left">clap</td><td style="text-align:center">🤶</td><td style="text-align:left">mrs_claus</td><td style="text-align:center">👒</td><td style="text-align:left">womans_hat</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙏</td><td style="text-align:left">pray</td><td style="text-align:center">👸</td><td style="text-align:left">princess</td><td style="text-align:center">👑</td><td style="text-align:left">crown</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤝</td><td style="text-align:left">handshake</td><td style="text-align:center">👰</td><td style="text-align:left">bride_with_veil</td><td style="text-align:center">👝</td><td style="text-align:left">pouch</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👍</td><td style="text-align:left">+1</td><td style="text-align:center">👼</td><td style="text-align:left">angel</td><td style="text-align:center">💼</td><td style="text-align:left">briefcase</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👍</td><td style="text-align:left">thumbsup</td><td style="text-align:center">🙇‍♀</td><td style="text-align:left">bowing_woman</td><td style="text-align:center">🌂</td><td style="text-align:left">closed_umbrella</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👎</td><td style="text-align:left">-1</td><td style="text-align:center">🙇</td><td style="text-align:left">bow</td><td style="text-align:center">🐱</td><td style="text-align:left">cat</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👎</td><td style="text-align:left">thumbsdown</td><td style="text-align:center">💁</td><td style="text-align:left">information_desk_person</td><td style="text-align:center">🐰</td><td style="text-align:left">rabbit</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👊</td><td style="text-align:left">fist_oncoming</td><td style="text-align:center">💁‍♂</td><td style="text-align:left">tipping_hand_man</td><td style="text-align:center">🐼</td><td style="text-align:left">panda_face</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👊</td><td style="text-align:left">facepunch</td><td style="text-align:center">🙅</td><td style="text-align:left">no_good_woman</td><td style="text-align:center">🦁</td><td style="text-align:left">lion</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👊</td><td style="text-align:left">punch</td><td style="text-align:center">🙅</td><td style="text-align:left">ng_woman</td><td style="text-align:center">🐽</td><td style="text-align:left">pig_nose</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">✊</td><td style="text-align:left">fist_raised</td><td style="text-align:center">🙅‍♂</td><td style="text-align:left">ng_man</td><td style="text-align:center">🙈</td><td style="text-align:left">see_no_evil</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">✊</td><td style="text-align:left">fist</td><td style="text-align:center">🙆‍♂</td><td style="text-align:left">ok_man</td><td style="text-align:center">🐒</td><td style="text-align:left">monkey</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤛</td><td style="text-align:left">fist_left</td><td style="text-align:center">🙋</td><td style="text-align:left">raising_hand</td><td style="text-align:center">🐦</td><td style="text-align:left">bird</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤜</td><td style="text-align:left">fist_right</td><td style="text-align:center">🤦‍♀</td><td style="text-align:left">woman_facepalming</td><td style="text-align:center">🐥</td><td style="text-align:left">hatched_chick</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤞</td><td style="text-align:left">crossed_fingers</td><td style="text-align:center">🤷‍♀</td><td style="text-align:left">woman_shrugging</td><td style="text-align:center">🦉</td><td style="text-align:left">owl</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">✌️</td><td style="text-align:left">v</td><td style="text-align:center">🙎</td><td style="text-align:left">pouting_woman</td><td style="text-align:center">🐗</td><td style="text-align:left">boar</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤘</td><td style="text-align:left">metal</td><td style="text-align:center">🙎‍♂</td><td style="text-align:left">pouting_man</td><td style="text-align:center">🐝</td><td style="text-align:left">bee</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👌</td><td style="text-align:left">ok_hand</td><td style="text-align:center">🙍</td><td style="text-align:left">person_frowning</td><td style="text-align:center">🦋</td><td style="text-align:left">butterfly</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👈</td><td style="text-align:left">point_left</td><td style="text-align:center">💇</td><td style="text-align:left">haircut_woman</td><td style="text-align:center">🐞</td><td style="text-align:left">beetle</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👉</td><td style="text-align:left">point_right</td><td style="text-align:center">💇‍♂</td><td style="text-align:left">haircut_man</td><td style="text-align:center">🕸</td><td style="text-align:left">spider_web</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👆</td><td style="text-align:left">point_up_2</td><td style="text-align:center">💆</td><td style="text-align:left">massage</td><td style="text-align:center">🦎</td><td style="text-align:left">lizard</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👇</td><td style="text-align:left">point_down</td><td style="text-align:center">🕴</td><td style="text-align:left">business_suit_levitating</td><td style="text-align:center">🦑</td><td style="text-align:left">squid</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">☝️</td><td style="text-align:left">point_up</td><td style="text-align:center">🕺</td><td style="text-align:left">man_dancing</td><td style="text-align:center">🐠</td><td style="text-align:left">tropical_fish</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">✋</td><td style="text-align:left">hand</td><td style="text-align:center">👯</td><td style="text-align:left">dancers</td><td style="text-align:center">🐬</td><td style="text-align:left">dolphin</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">✋</td><td style="text-align:left">raised_hand</td><td style="text-align:center">🚶‍♀</td><td style="text-align:left">walking_woman</td><td style="text-align:center">🐳</td><td style="text-align:left">whale</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤚</td><td style="text-align:left">raised_back_of_hand</td><td style="text-align:center">🚶</td><td style="text-align:left">walking</td><td style="text-align:center">🐆</td><td style="text-align:left">leopard</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🖐</td><td style="text-align:left">raised_hand_with_fingers_splayed</td><td style="text-align:center">🏃</td><td style="text-align:left">running_man</td><td style="text-align:center">🐂</td><td style="text-align:left">ox</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🖖</td><td style="text-align:left">vulcan_salute</td><td style="text-align:center">🏃</td><td style="text-align:left">running</td><td style="text-align:center">🐪</td><td style="text-align:left">dromedary_camel</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👋</td><td style="text-align:left">wave</td><td style="text-align:center">👭</td><td style="text-align:left">two_women_holding_hands</td><td style="text-align:center">🦏</td><td style="text-align:left">rhinoceros</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤙</td><td style="text-align:left">call_me_hand</td><td style="text-align:center">💑</td><td style="text-align:left">couple_with_heart_woman_man</td><td style="text-align:center">🐖</td><td style="text-align:left">pig2</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💪</td><td style="text-align:left">muscle</td><td style="text-align:center">👩‍❤️‍👩</td><td style="text-align:left">couple_with_heart_woman_woman</td><td style="text-align:center">🐑</td><td style="text-align:left">sheep</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🖕</td><td style="text-align:left">middle_finger</td><td style="text-align:center">💏</td><td style="text-align:left">couplekiss_man_woman</td><td style="text-align:center">🐈</td><td style="text-align:left">cat2</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🖕</td><td style="text-align:left">fu</td><td style="text-align:center">👨‍❤️‍💋‍👨</td><td style="text-align:left">couplekiss_man_man</td><td style="text-align:center">🕊</td><td style="text-align:left">dove</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">✍️</td><td style="text-align:left">writing_hand</td><td style="text-align:center">👪</td><td style="text-align:left">family</td><td style="text-align:center">🐀</td><td style="text-align:left">rat</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤳</td><td style="text-align:left">selfie</td><td style="text-align:center">👨‍👩‍👧‍👦</td><td style="text-align:left">family_man_woman_girl_boy</td><td style="text-align:center">🐾</td><td style="text-align:left">paw_prints</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💅</td><td style="text-align:left">nail_care</td><td style="text-align:center">👨‍👩‍👧‍👧</td><td style="text-align:left">family_man_woman_girl_girl</td><td style="text-align:center">🌵</td><td style="text-align:left">cactus</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💍</td><td style="text-align:left">ring</td><td style="text-align:center">👩‍👩‍👧</td><td style="text-align:left">family_woman_woman_girl</td><td style="text-align:center">🌳</td><td style="text-align:left">deciduous_tree</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💄</td><td style="text-align:left">lipstick</td><td style="text-align:center">👩‍👩‍👦‍👦</td><td style="text-align:left">family_woman_woman_boy_boy</td><td style="text-align:center">🌿</td><td style="text-align:left">herb</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💋</td><td style="text-align:left">kiss</td><td style="text-align:center">👨‍👨‍👦</td><td style="text-align:left">family_man_man_boy</td><td style="text-align:center">🎍</td><td style="text-align:left">bamboo</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👄</td><td style="text-align:left">lips</td><td style="text-align:center">👨‍👨‍👧‍👦</td><td style="text-align:left">family_man_man_girl_boy</td><td style="text-align:center">🍂</td><td style="text-align:left">fallen_leaf</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👅</td><td style="text-align:left">tongue</td><td style="text-align:center">👨‍👨‍👧‍👧</td><td style="text-align:left">family_man_man_girl_girl</td><td style="text-align:center">🌾</td><td style="text-align:left">ear_of_rice</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👂</td><td style="text-align:left">ear</td><td style="text-align:center">👩‍👧</td><td style="text-align:left">family_woman_girl</td><td style="text-align:center">🌹</td><td style="text-align:left">rose</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👃</td><td style="text-align:left">nose</td><td style="text-align:center">👩‍👦‍👦</td><td style="text-align:left">family_woman_boy_boy</td><td style="text-align:center">🌼</td><td style="text-align:left">blossom</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👣</td><td style="text-align:left">footprints</td><td style="text-align:center">👨‍👦</td><td style="text-align:left">family_man_boy</td><td style="text-align:center">🌎</td><td style="text-align:left">earth_americas</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👁</td><td style="text-align:left">eye</td><td style="text-align:center">👨‍👧‍👦</td><td style="text-align:left">family_man_girl_boy</td><td style="text-align:center">🌕</td><td style="text-align:left">full_moon</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👀</td><td style="text-align:left">eyes</td><td style="text-align:center">👨‍👧‍👧</td><td style="text-align:left">family_man_girl_girl</td><td style="text-align:center">🌘</td><td style="text-align:left">waning_crescent_moon</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🗣</td><td style="text-align:left">speaking_head</td><td style="text-align:center">👕</td><td style="text-align:left">shirt</td><td style="text-align:center">🌓</td><td style="text-align:left">first_quarter_moon</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👤</td><td style="text-align:left">bust_in_silhouette</td><td style="text-align:center">👖</td><td style="text-align:left">jeans</td><td style="text-align:center">🌚</td><td style="text-align:left">new_moon_with_face</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👥</td><td style="text-align:left">busts_in_silhouette</td><td style="text-align:center">👗</td><td style="text-align:left">dress</td><td style="text-align:center">🌛</td><td style="text-align:left">first_quarter_moon_with_face</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👶</td><td style="text-align:left">baby</td><td style="text-align:center">👘</td><td style="text-align:left">kimono</td><td style="text-align:center">💫</td><td style="text-align:left">dizzy</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👦</td><td style="text-align:left">boy</td><td style="text-align:center">👡</td><td style="text-align:left">sandal</td><td style="text-align:center">✨</td><td style="text-align:left">sparkles</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👧</td><td style="text-align:left">girl</td><td style="text-align:center">👞</td><td style="text-align:left">mans_shoe</td><td style="text-align:center">💥</td><td style="text-align:left">boom</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨</td><td style="text-align:left">man</td><td style="text-align:center">👟</td><td style="text-align:left">athletic_shoe</td><td style="text-align:center">☀️</td><td style="text-align:left">sunny</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩</td><td style="text-align:left">woman</td><td style="text-align:center">🎩</td><td style="text-align:left">tophat</td><td style="text-align:center">🌥</td><td style="text-align:left">sun_behind_large_cloud</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👱‍♀</td><td style="text-align:left">blonde_woman</td><td style="text-align:center">👑</td><td style="text-align:left">crown</td><td style="text-align:center">☁️</td><td style="text-align:left">cloud</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👱</td><td style="text-align:left">blonde_man</td><td style="text-align:center">🎒</td><td style="text-align:left">school_satchel</td><td style="text-align:center">🌩</td><td style="text-align:left">cloud_with_lightning</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👱</td><td style="text-align:left">person_with_blond_hair</td><td style="text-align:center">👛</td><td style="text-align:left">purse</td><td style="text-align:center">⛄️</td><td style="text-align:left">snowman</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👴</td><td style="text-align:left">older_man</td><td style="text-align:center">💼</td><td style="text-align:left">briefcase</td><td style="text-align:center">💨</td><td style="text-align:left">dash</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👵</td><td style="text-align:left">older_woman</td><td style="text-align:center">🕶</td><td style="text-align:left">dark_sunglasses</td><td style="text-align:center">🌊</td><td style="text-align:left">ocean</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👲</td><td style="text-align:left">man_with_gua_pi_mao</td><td style="text-align:center">☂️</td><td style="text-align:left">open_umbrella</td><td style="text-align:center">☔️</td><td style="text-align:left">umbrella</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👳‍♀</td><td style="text-align:left">woman_with_turban</td><td style="text-align:center">🐱</td><td style="text-align:left">cat</td><td style="text-align:center">🍐</td><td style="text-align:left">pear</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👳</td><td style="text-align:left">man_with_turban</td><td style="text-align:center">🐹</td><td style="text-align:left">hamster</td><td style="text-align:center">🍊</td><td style="text-align:left">mandarin</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👮‍♀</td><td style="text-align:left">policewoman</td><td style="text-align:center">🦊</td><td style="text-align:left">fox_face</td><td style="text-align:center">🍉</td><td style="text-align:left">watermelon</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👮</td><td style="text-align:left">policeman</td><td style="text-align:center">🐼</td><td style="text-align:left">panda_face</td><td style="text-align:center">🍈</td><td style="text-align:left">melon</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👮</td><td style="text-align:left">cop</td><td style="text-align:center">🐯</td><td style="text-align:left">tiger</td><td style="text-align:center">🍍</td><td style="text-align:left">pineapple</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👷‍♀</td><td style="text-align:left">construction_worker_woman</td><td style="text-align:center">🐮</td><td style="text-align:left">cow</td><td style="text-align:center">🍅</td><td style="text-align:left">tomato</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👷</td><td style="text-align:left">construction_worker_man</td><td style="text-align:center">🐽</td><td style="text-align:left">pig_nose</td><td style="text-align:center">🥕</td><td style="text-align:left">carrot</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👷</td><td style="text-align:left">construction_worker</td><td style="text-align:center">🐵</td><td style="text-align:left">monkey_face</td><td style="text-align:center">🥔</td><td style="text-align:left">potato</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💂‍♀</td><td style="text-align:left">guardswoman</td><td style="text-align:center">🙉</td><td style="text-align:left">hear_no_evil</td><td style="text-align:center">🥜</td><td style="text-align:left">peanuts</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💂</td><td style="text-align:left">guardsman</td><td style="text-align:center">🐒</td><td style="text-align:left">monkey</td><td style="text-align:center">🍞</td><td style="text-align:left">bread</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🕵️‍♀️</td><td style="text-align:left">female_detective</td><td style="text-align:center">🐧</td><td style="text-align:left">penguin</td><td style="text-align:center">🥚</td><td style="text-align:left">egg</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🕵</td><td style="text-align:left">male_detective</td><td style="text-align:center">🐤</td><td style="text-align:left">baby_chick</td><td style="text-align:center">🥞</td><td style="text-align:left">pancakes</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🕵</td><td style="text-align:left">detective</td><td style="text-align:center">🐥</td><td style="text-align:left">hatched_chick</td><td style="text-align:center">🍖</td><td style="text-align:left">meat_on_bone</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍⚕</td><td style="text-align:left">woman_health_worker</td><td style="text-align:center">🦅</td><td style="text-align:left">eagle</td><td style="text-align:center">🍔</td><td style="text-align:left">hamburger</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍⚕</td><td style="text-align:left">man_health_worker</td><td style="text-align:center">🦇</td><td style="text-align:left">bat</td><td style="text-align:center">🌮</td><td style="text-align:left">taco</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍🌾</td><td style="text-align:left">woman_farmer</td><td style="text-align:center">🐗</td><td style="text-align:left">boar</td><td style="text-align:center">🥘</td><td style="text-align:left">shallow_pan_of_food</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍🌾</td><td style="text-align:left">man_farmer</td><td style="text-align:center">🦄</td><td style="text-align:left">unicorn</td><td style="text-align:center">🍲</td><td style="text-align:left">stew</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍🍳</td><td style="text-align:left">woman_cook</td><td style="text-align:center">🐝</td><td style="text-align:left">honeybee</td><td style="text-align:center">🍱</td><td style="text-align:left">bento</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍🍳</td><td style="text-align:left">man_cook</td><td style="text-align:center">🦋</td><td style="text-align:left">butterfly</td><td style="text-align:center">🍙</td><td style="text-align:left">rice_ball</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍🎓</td><td style="text-align:left">woman_student</td><td style="text-align:center">🐚</td><td style="text-align:left">shell</td><td style="text-align:center">🍡</td><td style="text-align:left">dango</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍🎓</td><td style="text-align:left">man_student</td><td style="text-align:center">🐜</td><td style="text-align:left">ant</td><td style="text-align:center">🍦</td><td style="text-align:left">icecream</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍🎤</td><td style="text-align:left">woman_singer</td><td style="text-align:center">🕸</td><td style="text-align:left">spider_web</td><td style="text-align:center">🍮</td><td style="text-align:left">custard</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍🎤</td><td style="text-align:left">man_singer</td><td style="text-align:center">🐍</td><td style="text-align:left">snake</td><td style="text-align:center">🍫</td><td style="text-align:left">chocolate_bar</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍🏫</td><td style="text-align:left">woman_teacher</td><td style="text-align:center">🦂</td><td style="text-align:left">scorpion</td><td style="text-align:center">🍪</td><td style="text-align:left">cookie</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍🏫</td><td style="text-align:left">man_teacher</td><td style="text-align:center">🦑</td><td style="text-align:left">squid</td><td style="text-align:center">☕️</td><td style="text-align:left">coffee</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍🏭</td><td style="text-align:left">woman_factory_worker</td><td style="text-align:center">🦐</td><td style="text-align:left">shrimp</td><td style="text-align:center">🍺</td><td style="text-align:left">beer</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍🏭</td><td style="text-align:left">man_factory_worker</td><td style="text-align:center">🐟</td><td style="text-align:left">fish</td><td style="text-align:center">🍷</td><td style="text-align:left">wine_glass</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍💻</td><td style="text-align:left">woman_technologist</td><td style="text-align:center">🐬</td><td style="text-align:left">dolphin</td><td style="text-align:center">🍹</td><td style="text-align:left">tropical_drink</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍💻</td><td style="text-align:left">man_technologist</td><td style="text-align:center">🦈</td><td style="text-align:left">shark</td><td style="text-align:center">🍴</td><td style="text-align:left">fork_and_knife</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍💼</td><td style="text-align:left">woman_office_worker</td><td style="text-align:center">🐋</td><td style="text-align:left">whale2</td><td style="text-align:center">🏀</td><td style="text-align:left">basketball</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍💼</td><td style="text-align:left">man_office_worker</td><td style="text-align:center">🐆</td><td style="text-align:left">leopard</td><td style="text-align:center">🎾</td><td style="text-align:left">tennis</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍🔧</td><td style="text-align:left">woman_mechanic</td><td style="text-align:center">🐃</td><td style="text-align:left">water_buffalo</td><td style="text-align:center">🎱</td><td style="text-align:left">8ball</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍🔧</td><td style="text-align:left">man_mechanic</td><td style="text-align:center">🐄</td><td style="text-align:left">cow2</td><td style="text-align:center">🥅</td><td style="text-align:left">goal_net</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍🔬</td><td style="text-align:left">woman_scientist</td><td style="text-align:center">🐪</td><td style="text-align:left">dromedary_camel</td><td style="text-align:center">🏏</td><td style="text-align:left">cricket</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍🔬</td><td style="text-align:left">man_scientist</td><td style="text-align:center">🐘</td><td style="text-align:left">elephant</td><td style="text-align:center">🎣</td><td style="text-align:left">fishing_pole_and_fish</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍🎨</td><td style="text-align:left">woman_artist</td><td style="text-align:center">🦍</td><td style="text-align:left">gorilla</td><td style="text-align:center">⛸</td><td style="text-align:left">ice_skate</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍🎨</td><td style="text-align:left">man_artist</td><td style="text-align:center">🐖</td><td style="text-align:left">pig2</td><td style="text-align:center">🏂</td><td style="text-align:left">snowboarder</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍🚒</td><td style="text-align:left">woman_firefighter</td><td style="text-align:center">🐏</td><td style="text-align:left">ram</td><td style="text-align:center">🤺</td><td style="text-align:left">person_fencing</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍🚒</td><td style="text-align:left">man_firefighter</td><td style="text-align:center">🐕</td><td style="text-align:left">dog2</td><td style="text-align:center">🤸‍♀</td><td style="text-align:left">woman_cartwheeling</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍✈</td><td style="text-align:left">woman_pilot</td><td style="text-align:center">🐈</td><td style="text-align:left">cat2</td><td style="text-align:center">⛹</td><td style="text-align:left">basketball_man</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍✈</td><td style="text-align:left">man_pilot</td><td style="text-align:center">🦃</td><td style="text-align:left">turkey</td><td style="text-align:center">🏌️‍♀️</td><td style="text-align:left">golfing_woman</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍🚀</td><td style="text-align:left">woman_astronaut</td><td style="text-align:center">🐇</td><td style="text-align:left">rabbit2</td><td style="text-align:center">🏄</td><td style="text-align:left">surfing_man</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍🚀</td><td style="text-align:left">man_astronaut</td><td style="text-align:center">🐀</td><td style="text-align:left">rat</td><td style="text-align:center">🏊</td><td style="text-align:left">swimming_man</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍⚖</td><td style="text-align:left">woman_judge</td><td style="text-align:center">🐾</td><td style="text-align:left">feet</td><td style="text-align:center">🤽‍♂</td><td style="text-align:left">man_playing_water_polo</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍⚖</td><td style="text-align:left">man_judge</td><td style="text-align:center">🐉</td><td style="text-align:left">dragon</td><td style="text-align:center">🚣</td><td style="text-align:left">rowboat</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤶</td><td style="text-align:left">mrs_claus</td><td style="text-align:center">🌵</td><td style="text-align:left">cactus</td><td style="text-align:center">🚴</td><td style="text-align:left">biking_man</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🎅</td><td style="text-align:left">santa</td><td style="text-align:center">🌲</td><td style="text-align:left">evergreen_tree</td><td style="text-align:center">🚵</td><td style="text-align:left">mountain_biking_man</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👸</td><td style="text-align:left">princess</td><td style="text-align:center">🌴</td><td style="text-align:left">palm_tree</td><td style="text-align:center">🏅</td><td style="text-align:left">medal_sports</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤴</td><td style="text-align:left">prince</td><td style="text-align:center">🌿</td><td style="text-align:left">herb</td><td style="text-align:center">🥈</td><td style="text-align:left">2nd_place_medal</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👰</td><td style="text-align:left">bride_with_veil</td><td style="text-align:center">🍀</td><td style="text-align:left">four_leaf_clover</td><td style="text-align:center">🏵</td><td style="text-align:left">rosette</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤵</td><td style="text-align:left">man_in_tuxedo</td><td style="text-align:center">🎋</td><td style="text-align:left">tanabata_tree</td><td style="text-align:center">🎟</td><td style="text-align:left">tickets</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👼</td><td style="text-align:left">angel</td><td style="text-align:center">🍂</td><td style="text-align:left">fallen_leaf</td><td style="text-align:center">🤹‍♂</td><td style="text-align:left">man_juggling</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤰</td><td style="text-align:left">pregnant_woman</td><td style="text-align:center">🍄</td><td style="text-align:left">mushroom</td><td style="text-align:center">🎬</td><td style="text-align:left">clapper</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙇‍♀</td><td style="text-align:left">bowing_woman</td><td style="text-align:center">💐</td><td style="text-align:left">bouquet</td><td style="text-align:center">🎼</td><td style="text-align:left">musical_score</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙇</td><td style="text-align:left">bowing_man</td><td style="text-align:center">🌹</td><td style="text-align:left">rose</td><td style="text-align:center">🎷</td><td style="text-align:left">saxophone</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙇</td><td style="text-align:left">bow</td><td style="text-align:center">🌻</td><td style="text-align:left">sunflower</td><td style="text-align:center">🎻</td><td style="text-align:left">violin</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💁</td><td style="text-align:left">tipping_hand_woman</td><td style="text-align:center">🌸</td><td style="text-align:left">cherry_blossom</td><td style="text-align:center">🎳</td><td style="text-align:left">bowling</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💁</td><td style="text-align:left">information_desk_person</td><td style="text-align:center">🌎</td><td style="text-align:left">earth_americas</td><td style="text-align:center">🚗</td><td style="text-align:left">car</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💁</td><td style="text-align:left">sassy_woman</td><td style="text-align:center">🌏</td><td style="text-align:left">earth_asia</td><td style="text-align:center">🚙</td><td style="text-align:left">blue_car</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💁‍♂</td><td style="text-align:left">tipping_hand_man</td><td style="text-align:center">🌖</td><td style="text-align:left">waning_gibbous_moon</td><td style="text-align:center">🏎</td><td style="text-align:left">racing_car</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💁‍♂</td><td style="text-align:left">sassy_man</td><td style="text-align:center">🌘</td><td style="text-align:left">waning_crescent_moon</td><td style="text-align:center">🚒</td><td style="text-align:left">fire_engine</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙅</td><td style="text-align:left">no_good_woman</td><td style="text-align:center">🌒</td><td style="text-align:left">waxing_crescent_moon</td><td style="text-align:center">🚛</td><td style="text-align:left">articulated_lorry</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙅</td><td style="text-align:left">no_good</td><td style="text-align:center">🌔</td><td style="text-align:left">moon</td><td style="text-align:center">🚲</td><td style="text-align:left">bike</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙅</td><td style="text-align:left">ng_woman</td><td style="text-align:center">🌚</td><td style="text-align:left">new_moon_with_face</td><td style="text-align:center">🚨</td><td style="text-align:left">rotating_light</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙅‍♂</td><td style="text-align:left">no_good_man</td><td style="text-align:center">🌞</td><td style="text-align:left">sun_with_face</td><td style="text-align:center">🚘</td><td style="text-align:left">oncoming_automobile</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙅‍♂</td><td style="text-align:left">ng_man</td><td style="text-align:center">🌜</td><td style="text-align:left">last_quarter_moon_with_face</td><td style="text-align:center">🚠</td><td style="text-align:left">mountain_cableway</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙆</td><td style="text-align:left">ok_woman</td><td style="text-align:center">💫</td><td style="text-align:left">dizzy</td><td style="text-align:center">🚋</td><td style="text-align:left">train</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙆‍♂</td><td style="text-align:left">ok_man</td><td style="text-align:center">🌟</td><td style="text-align:left">star2</td><td style="text-align:center">🚄</td><td style="text-align:left">bullettrain_side</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙋</td><td style="text-align:left">raising_hand_woman</td><td style="text-align:center">⚡️</td><td style="text-align:left">zap</td><td style="text-align:center">🚂</td><td style="text-align:left">steam_locomotive</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙋</td><td style="text-align:left">raising_hand</td><td style="text-align:center">💥</td><td style="text-align:left">boom</td><td style="text-align:center">🚊</td><td style="text-align:left">tram</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙋‍♂</td><td style="text-align:left">raising_hand_man</td><td style="text-align:center">☄</td><td style="text-align:left">comet</td><td style="text-align:center">🛩</td><td style="text-align:left">small_airplane</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤦‍♀</td><td style="text-align:left">woman_facepalming</td><td style="text-align:center">🌤</td><td style="text-align:left">sun_behind_small_cloud</td><td style="text-align:center">🛬</td><td style="text-align:left">flight_arrival</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤦‍♂</td><td style="text-align:left">man_facepalming</td><td style="text-align:center">🌥</td><td style="text-align:left">sun_behind_large_cloud</td><td style="text-align:center">💺</td><td style="text-align:left">seat</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤷‍♀</td><td style="text-align:left">woman_shrugging</td><td style="text-align:center">🌈</td><td style="text-align:left">rainbow</td><td style="text-align:center">⛵️</td><td style="text-align:left">sailboat</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🤷‍♂</td><td style="text-align:left">man_shrugging</td><td style="text-align:center">🌧</td><td style="text-align:left">cloud_with_rain</td><td style="text-align:center">🛳</td><td style="text-align:left">passenger_ship</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙎</td><td style="text-align:left">pouting_woman</td><td style="text-align:center">🌩</td><td style="text-align:left">cloud_with_lightning</td><td style="text-align:center">⚓️</td><td style="text-align:left">anchor</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙎</td><td style="text-align:left">person_with_pouting_face</td><td style="text-align:center">☃️</td><td style="text-align:left">snowman_with_snow</td><td style="text-align:center">🚏</td><td style="text-align:left">busstop</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙎‍♂</td><td style="text-align:left">pouting_man</td><td style="text-align:center">❄️</td><td style="text-align:left">snowflake</td><td style="text-align:center">🗺</td><td style="text-align:left">world_map</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙍</td><td style="text-align:left">frowning_woman</td><td style="text-align:center">💨</td><td style="text-align:left">dash</td><td style="text-align:center">⛲️</td><td style="text-align:left">fountain</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙍</td><td style="text-align:left">person_frowning</td><td style="text-align:center">🌫</td><td style="text-align:left">fog</td><td style="text-align:center">🏯</td><td style="text-align:left">japanese_castle</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙍‍♂</td><td style="text-align:left">frowning_man</td><td style="text-align:center">💧</td><td style="text-align:left">droplet</td><td style="text-align:center">🎢</td><td style="text-align:left">roller_coaster</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💇</td><td style="text-align:left">haircut_woman</td><td style="text-align:center">☔️</td><td style="text-align:left">umbrella</td><td style="text-align:center">🏖</td><td style="text-align:left">beach_umbrella</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💇</td><td style="text-align:left">haircut</td><td style="text-align:center">🍎</td><td style="text-align:left">apple</td><td style="text-align:center">🏔</td><td style="text-align:left">mountain_snow</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💇‍♂</td><td style="text-align:left">haircut_man</td><td style="text-align:center">🍊</td><td style="text-align:left">tangerine</td><td style="text-align:center">🏜</td><td style="text-align:left">desert</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💆</td><td style="text-align:left">massage_woman</td><td style="text-align:center">🍊</td><td style="text-align:left">mandarin</td><td style="text-align:center">🛤</td><td style="text-align:left">railway_track</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💆</td><td style="text-align:left">massage</td><td style="text-align:center">🍌</td><td style="text-align:left">banana</td><td style="text-align:center">🏭</td><td style="text-align:left">factory</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💆‍♂</td><td style="text-align:left">massage_man</td><td style="text-align:center">🍇</td><td style="text-align:left">grapes</td><td style="text-align:center">🏘</td><td style="text-align:left">houses</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🕴</td><td style="text-align:left">business_suit_levitating</td><td style="text-align:center">🍈</td><td style="text-align:left">melon</td><td style="text-align:center">🏬</td><td style="text-align:left">department_store</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💃</td><td style="text-align:left">dancer</td><td style="text-align:center">🍑</td><td style="text-align:left">peach</td><td style="text-align:center">🏥</td><td style="text-align:left">hospital</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🕺</td><td style="text-align:left">man_dancing</td><td style="text-align:center">🥝</td><td style="text-align:left">kiwi_fruit</td><td style="text-align:center">🏪</td><td style="text-align:left">convenience_store</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👯</td><td style="text-align:left">dancing_women</td><td style="text-align:center">🍅</td><td style="text-align:left">tomato</td><td style="text-align:center">💒</td><td style="text-align:left">wedding</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👯</td><td style="text-align:left">dancers</td><td style="text-align:center">🥒</td><td style="text-align:left">cucumber</td><td style="text-align:center">🕌</td><td style="text-align:left">mosque</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👯‍♂</td><td style="text-align:left">dancing_men</td><td style="text-align:center">🌽</td><td style="text-align:left">corn</td><td style="text-align:center">⛩</td><td style="text-align:left">shinto_shrine</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🚶‍♀</td><td style="text-align:left">walking_woman</td><td style="text-align:center">🥔</td><td style="text-align:left">potato</td><td style="text-align:center">🏞</td><td style="text-align:left">national_park</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🚶</td><td style="text-align:left">walking_man</td><td style="text-align:center">🌰</td><td style="text-align:left">chestnut</td><td style="text-align:center">🌠</td><td style="text-align:left">stars</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🚶</td><td style="text-align:left">walking</td><td style="text-align:center">🍯</td><td style="text-align:left">honey_pot</td><td style="text-align:center">🌇</td><td style="text-align:left">city_sunrise</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🏃‍♀</td><td style="text-align:left">running_woman</td><td style="text-align:center">🍞</td><td style="text-align:left">bread</td><td style="text-align:center">🌃</td><td style="text-align:left">night_with_stars</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🏃</td><td style="text-align:left">running_man</td><td style="text-align:center">🧀</td><td style="text-align:left">cheese</td><td style="text-align:center">🌁</td><td style="text-align:left">foggy</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🏃</td><td style="text-align:left">runner</td><td style="text-align:center">🍳</td><td style="text-align:left">fried_egg</td><td style="text-align:center">📲</td><td style="text-align:left">calling</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🏃</td><td style="text-align:left">running</td><td style="text-align:center">🥞</td><td style="text-align:left">pancakes</td><td style="text-align:center">🖥</td><td style="text-align:left">desktop_computer</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👫</td><td style="text-align:left">couple</td><td style="text-align:center">🍗</td><td style="text-align:left">poultry_leg</td><td style="text-align:center">🖲</td><td style="text-align:left">trackball</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👭</td><td style="text-align:left">two_women_holding_hands</td><td style="text-align:center">🍕</td><td style="text-align:left">pizza</td><td style="text-align:center">💽</td><td style="text-align:left">minidisc</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👬</td><td style="text-align:left">two_men_holding_hands</td><td style="text-align:center">🍔</td><td style="text-align:left">hamburger</td><td style="text-align:center">📀</td><td style="text-align:left">dvd</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💑</td><td style="text-align:left">couple_with_heart_woman_man</td><td style="text-align:center">🥙</td><td style="text-align:left">stuffed_flatbread</td><td style="text-align:center">📸</td><td style="text-align:left">camera_flash</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💑</td><td style="text-align:left">couple_with_heart</td><td style="text-align:center">🌯</td><td style="text-align:left">burrito</td><td style="text-align:center">📽</td><td style="text-align:left">film_projector</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍❤️‍👩</td><td style="text-align:left">couple_with_heart_woman_woman</td><td style="text-align:center">🥘</td><td style="text-align:left">shallow_pan_of_food</td><td style="text-align:center">☎️</td><td style="text-align:left">phone</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍❤️‍👨</td><td style="text-align:left">couple_with_heart_man_man</td><td style="text-align:center">🍜</td><td style="text-align:left">ramen</td><td style="text-align:center">📠</td><td style="text-align:left">fax</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💏</td><td style="text-align:left">couplekiss_man_woman</td><td style="text-align:center">🍥</td><td style="text-align:left">fish_cake</td><td style="text-align:center">🎙</td><td style="text-align:left">studio_microphone</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍❤️‍💋‍👩</td><td style="text-align:left">couplekiss_woman_woman</td><td style="text-align:center">🍱</td><td style="text-align:left">bento</td><td style="text-align:center">⏱</td><td style="text-align:left">stopwatch</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍❤️‍💋‍👨</td><td style="text-align:left">couplekiss_man_man</td><td style="text-align:center">🍚</td><td style="text-align:left">rice</td><td style="text-align:center">🕰</td><td style="text-align:left">mantelpiece_clock</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👪</td><td style="text-align:left">family_man_woman_boy</td><td style="text-align:center">🍘</td><td style="text-align:left">rice_cracker</td><td style="text-align:center">📡</td><td style="text-align:left">satellite</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👪</td><td style="text-align:left">family</td><td style="text-align:center">🍡</td><td style="text-align:left">dango</td><td style="text-align:center">💡</td><td style="text-align:left">bulb</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍👩‍👧</td><td style="text-align:left">family_man_woman_girl</td><td style="text-align:center">🍨</td><td style="text-align:left">ice_cream</td><td style="text-align:center">🗑</td><td style="text-align:left">wastebasket</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍👩‍👧‍👦</td><td style="text-align:left">family_man_woman_girl_boy</td><td style="text-align:center">🍰</td><td style="text-align:left">cake</td><td style="text-align:center">💵</td><td style="text-align:left">dollar</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍👩‍👦‍👦</td><td style="text-align:left">family_man_woman_boy_boy</td><td style="text-align:center">🍮</td><td style="text-align:left">custard</td><td style="text-align:center">💷</td><td style="text-align:left">pound</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍👩‍👧‍👧</td><td style="text-align:left">family_man_woman_girl_girl</td><td style="text-align:center">🍬</td><td style="text-align:left">candy</td><td style="text-align:center">💎</td><td style="text-align:left">gem</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍👩‍👦</td><td style="text-align:left">family_woman_woman_boy</td><td style="text-align:center">🍿</td><td style="text-align:left">popcorn</td><td style="text-align:center">🔨</td><td style="text-align:left">hammer</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍👩‍👧</td><td style="text-align:left">family_woman_woman_girl</td><td style="text-align:center">🍪</td><td style="text-align:left">cookie</td><td style="text-align:center">⛏</td><td style="text-align:left">pick</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍👩‍👧‍👦</td><td style="text-align:left">family_woman_woman_girl_boy</td><td style="text-align:center">🍼</td><td style="text-align:left">baby_bottle</td><td style="text-align:center">⛓</td><td style="text-align:left">chains</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍👩‍👦‍👦</td><td style="text-align:left">family_woman_woman_boy_boy</td><td style="text-align:center">🍵</td><td style="text-align:left">tea</td><td style="text-align:center">🔪</td><td style="text-align:left">hocho</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍👩‍👧‍👧</td><td style="text-align:left">family_woman_woman_girl_girl</td><td style="text-align:center">🍺</td><td style="text-align:left">beer</td><td style="text-align:center">⚔️</td><td style="text-align:left">crossed_swords</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍👨‍👦</td><td style="text-align:left">family_man_man_boy</td><td style="text-align:center">🥂</td><td style="text-align:left">clinking_glasses</td><td style="text-align:center">⚰️</td><td style="text-align:left">coffin</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍👨‍👧</td><td style="text-align:left">family_man_man_girl</td><td style="text-align:center">🥃</td><td style="text-align:left">tumbler_glass</td><td style="text-align:center">🔮</td><td style="text-align:left">crystal_ball</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍👨‍👧‍👦</td><td style="text-align:left">family_man_man_girl_boy</td><td style="text-align:center">🍹</td><td style="text-align:left">tropical_drink</td><td style="text-align:center">⚗️</td><td style="text-align:left">alembic</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍👨‍👦‍👦</td><td style="text-align:left">family_man_man_boy_boy</td><td style="text-align:center">🥄</td><td style="text-align:left">spoon</td><td style="text-align:center">🕳</td><td style="text-align:left">hole</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍👨‍👧‍👧</td><td style="text-align:left">family_man_man_girl_girl</td><td style="text-align:center">🍽</td><td style="text-align:left">plate_with_cutlery</td><td style="text-align:center">🌡</td><td style="text-align:left">thermometer</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍👦</td><td style="text-align:left">family_woman_boy</td><td style="text-align:center">🏀</td><td style="text-align:left">basketball</td><td style="text-align:center">🚿</td><td style="text-align:left">shower</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍👧</td><td style="text-align:left">family_woman_girl</td><td style="text-align:center">⚾️</td><td style="text-align:left">baseball</td><td style="text-align:center">🛎</td><td style="text-align:left">bellhop_bell</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍👧‍👦</td><td style="text-align:left">family_woman_girl_boy</td><td style="text-align:center">🏐</td><td style="text-align:left">volleyball</td><td style="text-align:center">🚪</td><td style="text-align:left">door</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍👦‍👦</td><td style="text-align:left">family_woman_boy_boy</td><td style="text-align:center">🎱</td><td style="text-align:left">8ball</td><td style="text-align:center">🛌</td><td style="text-align:left">sleeping_bed</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👩‍👧‍👧</td><td style="text-align:left">family_woman_girl_girl</td><td style="text-align:center">🏸</td><td style="text-align:left">badminton</td><td style="text-align:center">🛒</td><td style="text-align:left">shopping_cart</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍👦</td><td style="text-align:left">family_man_boy</td><td style="text-align:center">🏒</td><td style="text-align:left">ice_hockey</td><td style="text-align:center">🎏</td><td style="text-align:left">flags</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍👧</td><td style="text-align:left">family_man_girl</td><td style="text-align:center">🏏</td><td style="text-align:left">cricket</td><td style="text-align:center">🎉</td><td style="text-align:left">tada</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍👧‍👦</td><td style="text-align:left">family_man_girl_boy</td><td style="text-align:center">🏹</td><td style="text-align:left">bow_and_arrow</td><td style="text-align:center">🏮</td><td style="text-align:left">lantern</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍👦‍👦</td><td style="text-align:left">family_man_boy_boy</td><td style="text-align:center">🥊</td><td style="text-align:left">boxing_glove</td><td style="text-align:center">✉️</td><td style="text-align:left">envelope</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👨‍👧‍👧</td><td style="text-align:left">family_man_girl_girl</td><td style="text-align:center">⛸</td><td style="text-align:left">ice_skate</td><td style="text-align:center">📧</td><td style="text-align:left">e-mail</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👚</td><td style="text-align:left">womans_clothes</td><td style="text-align:center">⛷</td><td style="text-align:left">skier</td><td style="text-align:center">📤</td><td style="text-align:left">outbox_tray</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👕</td><td style="text-align:left">shirt</td><td style="text-align:center">🏋️‍♀️</td><td style="text-align:left">weight_lifting_woman</td><td style="text-align:center">📪</td><td style="text-align:left">mailbox_closed</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👕</td><td style="text-align:left">tshirt</td><td style="text-align:center">🤺</td><td style="text-align:left">person_fencing</td><td style="text-align:center">📭</td><td style="text-align:left">mailbox_with_no_mail</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👖</td><td style="text-align:left">jeans</td><td style="text-align:center">🤼‍♂</td><td style="text-align:left">men_wrestling</td><td style="text-align:center">📜</td><td style="text-align:left">scroll</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👔</td><td style="text-align:left">necktie</td><td style="text-align:center">🤸‍♂</td><td style="text-align:left">man_cartwheeling</td><td style="text-align:center">📑</td><td style="text-align:left">bookmark_tabs</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👗</td><td style="text-align:left">dress</td><td style="text-align:center">⛹</td><td style="text-align:left">basketball_man</td><td style="text-align:center">📉</td><td style="text-align:left">chart_with_downwards_trend</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👙</td><td style="text-align:left">bikini</td><td style="text-align:center">🤾‍♂</td><td style="text-align:left">man_playing_handball</td><td style="text-align:center">📆</td><td style="text-align:left">calendar</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👘</td><td style="text-align:left">kimono</td><td style="text-align:center">🏌</td><td style="text-align:left">golfing_man</td><td style="text-align:center">🗃</td><td style="text-align:left">card_file_box</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👠</td><td style="text-align:left">high_heel</td><td style="text-align:center">🏄</td><td style="text-align:left">surfing_man</td><td style="text-align:center">📋</td><td style="text-align:left">clipboard</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👡</td><td style="text-align:left">sandal</td><td style="text-align:center">🏊‍♀</td><td style="text-align:left">swimming_woman</td><td style="text-align:center">🗂</td><td style="text-align:left">card_index_dividers</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👢</td><td style="text-align:left">boot</td><td style="text-align:center">🏊</td><td style="text-align:left">swimmer</td><td style="text-align:center">📓</td><td style="text-align:left">notebook</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👞</td><td style="text-align:left">mans_shoe</td><td style="text-align:center">🤽‍♂</td><td style="text-align:left">man_playing_water_polo</td><td style="text-align:center">📕</td><td style="text-align:left">closed_book</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👞</td><td style="text-align:left">shoe</td><td style="text-align:center">🚣</td><td style="text-align:left">rowing_man</td><td style="text-align:center">📙</td><td style="text-align:left">orange_book</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👟</td><td style="text-align:left">athletic_shoe</td><td style="text-align:center">🏇</td><td style="text-align:left">horse_racing</td><td style="text-align:center">📖</td><td style="text-align:left">open_book</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👒</td><td style="text-align:left">womans_hat</td><td style="text-align:center">🚴</td><td style="text-align:left">biking_man</td><td style="text-align:center">📎</td><td style="text-align:left">paperclip</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🎩</td><td style="text-align:left">tophat</td><td style="text-align:center">🚵‍♀</td><td style="text-align:left">mountain_biking_woman</td><td style="text-align:center">📏</td><td style="text-align:left">straight_ruler</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🎓</td><td style="text-align:left">mortar_board</td><td style="text-align:center">🚵</td><td style="text-align:left">mountain_bicyclist</td><td style="text-align:center">✂️</td><td style="text-align:left">scissors</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👑</td><td style="text-align:left">crown</td><td style="text-align:center">🏅</td><td style="text-align:left">medal_sports</td><td style="text-align:center">✒️</td><td style="text-align:left">black_nib</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">⛑</td><td style="text-align:left">rescue_worker_helmet</td><td style="text-align:center">🥇</td><td style="text-align:left">1st_place_medal</td><td style="text-align:center">📝</td><td style="text-align:left">memo</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🎒</td><td style="text-align:left">school_satchel</td><td style="text-align:center">🥉</td><td style="text-align:left">3rd_place_medal</td><td style="text-align:center">🔍</td><td style="text-align:left">mag</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👝</td><td style="text-align:left">pouch</td><td style="text-align:center">🏵</td><td style="text-align:left">rosette</td><td style="text-align:center">🔐</td><td style="text-align:left">closed_lock_with_key</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👛</td><td style="text-align:left">purse</td><td style="text-align:center">🎫</td><td style="text-align:left">ticket</td><td style="text-align:center">❤️</td><td style="text-align:left">heart</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👜</td><td style="text-align:left">handbag</td><td style="text-align:center">🎪</td><td style="text-align:left">circus_tent</td><td style="text-align:center">💙</td><td style="text-align:left">blue_heart</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💼</td><td style="text-align:left">briefcase</td><td style="text-align:center">🤹‍♂</td><td style="text-align:left">man_juggling</td><td style="text-align:center">💔</td><td style="text-align:left">broken_heart</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">👓</td><td style="text-align:left">eyeglasses</td><td style="text-align:center">🎨</td><td style="text-align:left">art</td><td style="text-align:center">💞</td><td style="text-align:left">revolving_hearts</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🕶</td><td style="text-align:left">dark_sunglasses</td><td style="text-align:center">🎤</td><td style="text-align:left">microphone</td><td style="text-align:center">💖</td><td style="text-align:left">sparkling_heart</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌂</td><td style="text-align:left">closed_umbrella</td><td style="text-align:center">🎼</td><td style="text-align:left">musical_score</td><td style="text-align:center">💟</td><td style="text-align:left">heart_decoration</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">☂️</td><td style="text-align:left">open_umbrella</td><td style="text-align:center">🥁</td><td style="text-align:left">drum</td><td style="text-align:center">☪️</td><td style="text-align:left">star_and_crescent</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐶</td><td style="text-align:left">dog</td><td style="text-align:center">🎺</td><td style="text-align:left">trumpet</td><td style="text-align:center">✡️</td><td style="text-align:left">star_of_david</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐱</td><td style="text-align:left">cat</td><td style="text-align:center">🎻</td><td style="text-align:left">violin</td><td style="text-align:center">☯️</td><td style="text-align:left">yin_yang</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐭</td><td style="text-align:left">mouse</td><td style="text-align:center">🎯</td><td style="text-align:left">dart</td><td style="text-align:center">⛎</td><td style="text-align:left">ophiuchus</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐹</td><td style="text-align:left">hamster</td><td style="text-align:center">🎮</td><td style="text-align:left">video_game</td><td style="text-align:center">♊️</td><td style="text-align:left">gemini</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐰</td><td style="text-align:left">rabbit</td><td style="text-align:center">🚗</td><td style="text-align:left">car</td><td style="text-align:center">♍️</td><td style="text-align:left">virgo</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🦊</td><td style="text-align:left">fox_face</td><td style="text-align:center">🚕</td><td style="text-align:left">taxi</td><td style="text-align:center">♐️</td><td style="text-align:left">sagittarius</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐻</td><td style="text-align:left">bear</td><td style="text-align:center">🚌</td><td style="text-align:left">bus</td><td style="text-align:center">♓️</td><td style="text-align:left">pisces</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐼</td><td style="text-align:left">panda_face</td><td style="text-align:center">🏎</td><td style="text-align:left">racing_car</td><td style="text-align:center">🉑</td><td style="text-align:left">accept</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐨</td><td style="text-align:left">koala</td><td style="text-align:center">🚑</td><td style="text-align:left">ambulance</td><td style="text-align:center">📴</td><td style="text-align:left">mobile_phone_off</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐯</td><td style="text-align:left">tiger</td><td style="text-align:center">🚐</td><td style="text-align:left">minibus</td><td style="text-align:center">🆚</td><td style="text-align:left">vs</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🦁</td><td style="text-align:left">lion</td><td style="text-align:center">🚛</td><td style="text-align:left">articulated_lorry</td><td style="text-align:center">㊙️</td><td style="text-align:left">secret</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐮</td><td style="text-align:left">cow</td><td style="text-align:center">🛴</td><td style="text-align:left">kick_scooter</td><td style="text-align:center">🅰️</td><td style="text-align:left">a</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐷</td><td style="text-align:left">pig</td><td style="text-align:center">🛵</td><td style="text-align:left">motor_scooter</td><td style="text-align:center">🆑</td><td style="text-align:left">cl</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐽</td><td style="text-align:left">pig_nose</td><td style="text-align:center">🚨</td><td style="text-align:left">rotating_light</td><td style="text-align:center">❌</td><td style="text-align:left">x</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐸</td><td style="text-align:left">frog</td><td style="text-align:center">🚍</td><td style="text-align:left">oncoming_bus</td><td style="text-align:center">⛔️</td><td style="text-align:left">no_entry</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐵</td><td style="text-align:left">monkey_face</td><td style="text-align:center">🚖</td><td style="text-align:left">oncoming_taxi</td><td style="text-align:center">💢</td><td style="text-align:left">anger</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙈</td><td style="text-align:left">see_no_evil</td><td style="text-align:center">🚠</td><td style="text-align:left">mountain_cableway</td><td style="text-align:center">🚯</td><td style="text-align:left">do_not_litter</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙉</td><td style="text-align:left">hear_no_evil</td><td style="text-align:center">🚃</td><td style="text-align:left">railway_car</td><td style="text-align:center">🔞</td><td style="text-align:left">underage</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🙊</td><td style="text-align:left">speak_no_evil</td><td style="text-align:center">🚞</td><td style="text-align:left">mountain_railway</td><td style="text-align:center">❗️</td><td style="text-align:left">exclamation</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐒</td><td style="text-align:left">monkey</td><td style="text-align:center">🚄</td><td style="text-align:left">bullettrain_side</td><td style="text-align:center">❓</td><td style="text-align:left">question</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐔</td><td style="text-align:left">chicken</td><td style="text-align:center">🚈</td><td style="text-align:left">light_rail</td><td style="text-align:center">⁉️</td><td style="text-align:left">interrobang</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐧</td><td style="text-align:left">penguin</td><td style="text-align:center">🚆</td><td style="text-align:left">train2</td><td style="text-align:center">〽️</td><td style="text-align:left">part_alternation_mark</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐦</td><td style="text-align:left">bird</td><td style="text-align:center">🚊</td><td style="text-align:left">tram</td><td style="text-align:center">🔱</td><td style="text-align:left">trident</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐤</td><td style="text-align:left">baby_chick</td><td style="text-align:center">🚁</td><td style="text-align:left">helicopter</td><td style="text-align:center">♻️</td><td style="text-align:left">recycle</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐣</td><td style="text-align:left">hatching_chick</td><td style="text-align:center">✈️</td><td style="text-align:left">airplane</td><td style="text-align:center">❇️</td><td style="text-align:left">sparkle</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐥</td><td style="text-align:left">hatched_chick</td><td style="text-align:center">🛬</td><td style="text-align:left">flight_arrival</td><td style="text-align:center">🌐</td><td style="text-align:left">globe_with_meridians</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🦆</td><td style="text-align:left">duck</td><td style="text-align:center">🛰</td><td style="text-align:left">artificial_satellite</td><td style="text-align:center">🌀</td><td style="text-align:left">cyclone</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🦅</td><td style="text-align:left">eagle</td><td style="text-align:center">🛶</td><td style="text-align:left">canoe</td><td style="text-align:center">🚾</td><td style="text-align:left">wc</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🦉</td><td style="text-align:left">owl</td><td style="text-align:center">⛵️</td><td style="text-align:left">sailboat</td><td style="text-align:center">🈂️</td><td style="text-align:left">sa</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🦇</td><td style="text-align:left">bat</td><td style="text-align:center">🚤</td><td style="text-align:left">speedboat</td><td style="text-align:center">🛄</td><td style="text-align:left">baggage_claim</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐺</td><td style="text-align:left">wolf</td><td style="text-align:center">⛴</td><td style="text-align:left">ferry</td><td style="text-align:center">🚺</td><td style="text-align:left">womens</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐗</td><td style="text-align:left">boar</td><td style="text-align:center">⚓️</td><td style="text-align:left">anchor</td><td style="text-align:center">🚮</td><td style="text-align:left">put_litter_in_its_place</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐴</td><td style="text-align:left">horse</td><td style="text-align:center">⛽️</td><td style="text-align:left">fuelpump</td><td style="text-align:center">🈁</td><td style="text-align:left">koko</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🦄</td><td style="text-align:left">unicorn</td><td style="text-align:center">🚦</td><td style="text-align:left">vertical_traffic_light</td><td style="text-align:center">🔤</td><td style="text-align:left">abc</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐝</td><td style="text-align:left">bee</td><td style="text-align:center">🗺</td><td style="text-align:left">world_map</td><td style="text-align:center">🆖</td><td style="text-align:left">ng</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐝</td><td style="text-align:left">honeybee</td><td style="text-align:center">🗽</td><td style="text-align:left">statue_of_liberty</td><td style="text-align:center">🆒</td><td style="text-align:left">cool</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐛</td><td style="text-align:left">bug</td><td style="text-align:center">🗼</td><td style="text-align:left">tokyo_tower</td><td style="text-align:center">0️⃣</td><td style="text-align:left">zero</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🦋</td><td style="text-align:left">butterfly</td><td style="text-align:center">🏯</td><td style="text-align:left">japanese_castle</td><td style="text-align:center">3️⃣</td><td style="text-align:left">three</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐌</td><td style="text-align:left">snail</td><td style="text-align:center">🎡</td><td style="text-align:left">ferris_wheel</td><td style="text-align:center">6️⃣</td><td style="text-align:left">six</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐚</td><td style="text-align:left">shell</td><td style="text-align:center">🎠</td><td style="text-align:left">carousel_horse</td><td style="text-align:center">9️⃣</td><td style="text-align:left">nine</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐞</td><td style="text-align:left">beetle</td><td style="text-align:center">🏖</td><td style="text-align:left">beach_umbrella</td><td style="text-align:center">*️⃣</td><td style="text-align:left">asterisk</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐜</td><td style="text-align:left">ant</td><td style="text-align:center">⛰</td><td style="text-align:left">mountain</td><td style="text-align:center">⏯</td><td style="text-align:left">play_or_pause_button</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🕷</td><td style="text-align:left">spider</td><td style="text-align:center">🗻</td><td style="text-align:left">mount_fuji</td><td style="text-align:center">⏭</td><td style="text-align:left">next_track_button</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🕸</td><td style="text-align:left">spider_web</td><td style="text-align:center">🏜</td><td style="text-align:left">desert</td><td style="text-align:center">⏪</td><td style="text-align:left">rewind</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐢</td><td style="text-align:left">turtle</td><td style="text-align:center">⛺️</td><td style="text-align:left">tent</td><td style="text-align:center">◀️</td><td style="text-align:left">arrow_backward</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐍</td><td style="text-align:left">snake</td><td style="text-align:center">🛣</td><td style="text-align:left">motorway</td><td style="text-align:center">➡️</td><td style="text-align:left">arrow_right</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🦎</td><td style="text-align:left">lizard</td><td style="text-align:center">🏭</td><td style="text-align:left">factory</td><td style="text-align:center">⬇️</td><td style="text-align:left">arrow_down</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🦂</td><td style="text-align:left">scorpion</td><td style="text-align:center">🏡</td><td style="text-align:left">house_with_garden</td><td style="text-align:center">↙️</td><td style="text-align:left">arrow_lower_left</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🦀</td><td style="text-align:left">crab</td><td style="text-align:center">🏚</td><td style="text-align:left">derelict_house</td><td style="text-align:center">↔️</td><td style="text-align:left">left_right_arrow</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🦑</td><td style="text-align:left">squid</td><td style="text-align:center">🏬</td><td style="text-align:left">department_store</td><td style="text-align:center">⤴️</td><td style="text-align:left">arrow_heading_up</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐙</td><td style="text-align:left">octopus</td><td style="text-align:center">🏤</td><td style="text-align:left">european_post_office</td><td style="text-align:center">🔁</td><td style="text-align:left">repeat</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🦐</td><td style="text-align:left">shrimp</td><td style="text-align:center">🏦</td><td style="text-align:left">bank</td><td style="text-align:center">🔃</td><td style="text-align:left">arrows_clockwise</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐠</td><td style="text-align:left">tropical_fish</td><td style="text-align:center">🏪</td><td style="text-align:left">convenience_store</td><td style="text-align:center">➕</td><td style="text-align:left">heavy_plus_sign</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐟</td><td style="text-align:left">fish</td><td style="text-align:center">🏩</td><td style="text-align:left">love_hotel</td><td style="text-align:center">✖️</td><td style="text-align:left">heavy_multiplication_x</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐡</td><td style="text-align:left">blowfish</td><td style="text-align:center">🏛</td><td style="text-align:left">classical_building</td><td style="text-align:center">™️</td><td style="text-align:left">tm</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐬</td><td style="text-align:left">dolphin</td><td style="text-align:center">🕌</td><td style="text-align:left">mosque</td><td style="text-align:center">〰️</td><td style="text-align:left">wavy_dash</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐬</td><td style="text-align:left">flipper</td><td style="text-align:center">🕋</td><td style="text-align:left">kaaba</td><td style="text-align:center">🔚</td><td style="text-align:left">end</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🦈</td><td style="text-align:left">shark</td><td style="text-align:center">🗾</td><td style="text-align:left">japan</td><td style="text-align:center">🔝</td><td style="text-align:left">top</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐳</td><td style="text-align:left">whale</td><td style="text-align:center">🏞</td><td style="text-align:left">national_park</td><td style="text-align:center">☑️</td><td style="text-align:left">ballot_box_with_check</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐋</td><td style="text-align:left">whale2</td><td style="text-align:center">🌄</td><td style="text-align:left">sunrise_over_mountains</td><td style="text-align:center">⚫️</td><td style="text-align:left">black_circle</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐊</td><td style="text-align:left">crocodile</td><td style="text-align:center">🎇</td><td style="text-align:left">sparkler</td><td style="text-align:center">🔺</td><td style="text-align:left">small_red_triangle</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐆</td><td style="text-align:left">leopard</td><td style="text-align:center">🌇</td><td style="text-align:left">city_sunrise</td><td style="text-align:center">🔹</td><td style="text-align:left">small_blue_diamond</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐅</td><td style="text-align:left">tiger2</td><td style="text-align:center">🏙</td><td style="text-align:left">cityscape</td><td style="text-align:center">🔳</td><td style="text-align:left">white_square_button</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐃</td><td style="text-align:left">water_buffalo</td><td style="text-align:center">🌌</td><td style="text-align:left">milky_way</td><td style="text-align:center">▫️</td><td style="text-align:left">white_small_square</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐂</td><td style="text-align:left">ox</td><td style="text-align:center">🌁</td><td style="text-align:left">foggy</td><td style="text-align:center">◼️</td><td style="text-align:left">black_medium_square</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐄</td><td style="text-align:left">cow2</td><td style="text-align:center">📱</td><td style="text-align:left">iphone</td><td style="text-align:center">⬜️</td><td style="text-align:left">white_large_square</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🦌</td><td style="text-align:left">deer</td><td style="text-align:center">💻</td><td style="text-align:left">computer</td><td style="text-align:center">🔉</td><td style="text-align:left">sound</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐪</td><td style="text-align:left">dromedary_camel</td><td style="text-align:center">🖥</td><td style="text-align:left">desktop_computer</td><td style="text-align:center">🔕</td><td style="text-align:left">no_bell</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐫</td><td style="text-align:left">camel</td><td style="text-align:center">🖱</td><td style="text-align:left">computer_mouse</td><td style="text-align:center">👁‍🗨</td><td style="text-align:left">eye_speech_bubble</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐘</td><td style="text-align:left">elephant</td><td style="text-align:center">🕹</td><td style="text-align:left">joystick</td><td style="text-align:center">🗯</td><td style="text-align:left">right_anger_bubble</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🦏</td><td style="text-align:left">rhinoceros</td><td style="text-align:center">💽</td><td style="text-align:left">minidisc</td><td style="text-align:center">♥️</td><td style="text-align:left">hearts</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🦍</td><td style="text-align:left">gorilla</td><td style="text-align:center">💿</td><td style="text-align:left">cd</td><td style="text-align:center">🎴</td><td style="text-align:left">flower_playing_cards</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐎</td><td style="text-align:left">racehorse</td><td style="text-align:center">📼</td><td style="text-align:left">vhs</td><td style="text-align:center">🕑</td><td style="text-align:left">clock2</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐖</td><td style="text-align:left">pig2</td><td style="text-align:center">📸</td><td style="text-align:left">camera_flash</td><td style="text-align:center">🕔</td><td style="text-align:left">clock5</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐐</td><td style="text-align:left">goat</td><td style="text-align:center">🎥</td><td style="text-align:left">movie_camera</td><td style="text-align:center">🕗</td><td style="text-align:left">clock8</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐏</td><td style="text-align:left">ram</td><td style="text-align:center">🎞</td><td style="text-align:left">film_strip</td><td style="text-align:center">🕚</td><td style="text-align:left">clock11</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐑</td><td style="text-align:left">sheep</td><td style="text-align:center">☎️</td><td style="text-align:left">phone</td><td style="text-align:center">🕝</td><td style="text-align:left">clock230</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐕</td><td style="text-align:left">dog2</td><td style="text-align:center">📟</td><td style="text-align:left">pager</td><td style="text-align:center">🕠</td><td style="text-align:left">clock530</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐩</td><td style="text-align:left">poodle</td><td style="text-align:center">📺</td><td style="text-align:left">tv</td><td style="text-align:center">🕣</td><td style="text-align:left">clock830</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐈</td><td style="text-align:left">cat2</td><td style="text-align:center">🎙</td><td style="text-align:left">studio_microphone</td><td style="text-align:center">🕦</td><td style="text-align:left">clock1130</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐓</td><td style="text-align:left">rooster</td><td style="text-align:center">🎛</td><td style="text-align:left">control_knobs</td><td style="text-align:center">🏴</td><td style="text-align:left">black_flag</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🦃</td><td style="text-align:left">turkey</td><td style="text-align:center">⏲</td><td style="text-align:left">timer_clock</td><td style="text-align:center">🏳️‍🌈</td><td style="text-align:left">rainbow_flag</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🕊</td><td style="text-align:left">dove</td><td style="text-align:center">🕰</td><td style="text-align:left">mantelpiece_clock</td><td style="text-align:center">🇦🇱</td><td style="text-align:left">albania</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐇</td><td style="text-align:left">rabbit2</td><td style="text-align:center">⏳</td><td style="text-align:left">hourglass_flowing_sand</td><td style="text-align:center">🇦🇩</td><td style="text-align:left">andorra</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐁</td><td style="text-align:left">mouse2</td><td style="text-align:center">🔋</td><td style="text-align:left">battery</td><td style="text-align:center">🇦🇶</td><td style="text-align:left">antarctica</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐀</td><td style="text-align:left">rat</td><td style="text-align:center">💡</td><td style="text-align:left">bulb</td><td style="text-align:center">🇦🇲</td><td style="text-align:left">armenia</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐿</td><td style="text-align:left">chipmunk</td><td style="text-align:center">🕯</td><td style="text-align:left">candle</td><td style="text-align:center">🇦🇹</td><td style="text-align:left">austria</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐾</td><td style="text-align:left">feet</td><td style="text-align:center">🛢</td><td style="text-align:left">oil_drum</td><td style="text-align:center">🇧🇭</td><td style="text-align:left">bahrain</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐾</td><td style="text-align:left">paw_prints</td><td style="text-align:center">💵</td><td style="text-align:left">dollar</td><td style="text-align:center">🇧🇾</td><td style="text-align:left">belarus</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐉</td><td style="text-align:left">dragon</td><td style="text-align:center">💶</td><td style="text-align:left">euro</td><td style="text-align:center">🇧🇯</td><td style="text-align:left">benin</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🐲</td><td style="text-align:left">dragon_face</td><td style="text-align:center">💰</td><td style="text-align:left">moneybag</td><td style="text-align:center">🇧🇴</td><td style="text-align:left">bolivia</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌵</td><td style="text-align:left">cactus</td><td style="text-align:center">💎</td><td style="text-align:left">gem</td><td style="text-align:center">🇧🇼</td><td style="text-align:left">botswana</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🎄</td><td style="text-align:left">christmas_tree</td><td style="text-align:center">🔧</td><td style="text-align:left">wrench</td><td style="text-align:center">🇻🇬</td><td style="text-align:left">british_virgin_islands</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌲</td><td style="text-align:left">evergreen_tree</td><td style="text-align:center">⚒</td><td style="text-align:left">hammer_and_pick</td><td style="text-align:center">🇧🇫</td><td style="text-align:left">burkina_faso</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌳</td><td style="text-align:left">deciduous_tree</td><td style="text-align:center">⛏</td><td style="text-align:left">pick</td><td style="text-align:center">🇰🇭</td><td style="text-align:left">cambodia</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌴</td><td style="text-align:left">palm_tree</td><td style="text-align:center">⚙️</td><td style="text-align:left">gear</td><td style="text-align:center">🇮🇨</td><td style="text-align:left">canary_islands</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌱</td><td style="text-align:left">seedling</td><td style="text-align:center">🔫</td><td style="text-align:left">gun</td><td style="text-align:center">🇹🇩</td><td style="text-align:left">chad</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌿</td><td style="text-align:left">herb</td><td style="text-align:center">🔪</td><td style="text-align:left">hocho</td><td style="text-align:center">🇨🇽</td><td style="text-align:left">christmas_island</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">☘️</td><td style="text-align:left">shamrock</td><td style="text-align:center">🗡</td><td style="text-align:left">dagger</td><td style="text-align:center">🇰🇲</td><td style="text-align:left">comoros</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🍀</td><td style="text-align:left">four_leaf_clover</td><td style="text-align:center">🛡</td><td style="text-align:left">shield</td><td style="text-align:center">🇨🇰</td><td style="text-align:left">cook_islands</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🎍</td><td style="text-align:left">bamboo</td><td style="text-align:center">⚰️</td><td style="text-align:left">coffin</td><td style="text-align:center">🇭🇷</td><td style="text-align:left">croatia</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🎋</td><td style="text-align:left">tanabata_tree</td><td style="text-align:center">🏺</td><td style="text-align:left">amphora</td><td style="text-align:center">🇨🇾</td><td style="text-align:left">cyprus</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🍃</td><td style="text-align:left">leaves</td><td style="text-align:center">📿</td><td style="text-align:left">prayer_beads</td><td style="text-align:center">🇩🇯</td><td style="text-align:left">djibouti</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🍂</td><td style="text-align:left">fallen_leaf</td><td style="text-align:center">⚗️</td><td style="text-align:left">alembic</td><td style="text-align:center">🇪🇨</td><td style="text-align:left">ecuador</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🍁</td><td style="text-align:left">maple_leaf</td><td style="text-align:center">🔬</td><td style="text-align:left">microscope</td><td style="text-align:center">🇬🇶</td><td style="text-align:left">equatorial_guinea</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🍄</td><td style="text-align:left">mushroom</td><td style="text-align:center">💊</td><td style="text-align:left">pill</td><td style="text-align:center">🇪🇹</td><td style="text-align:left">ethiopia</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌾</td><td style="text-align:left">ear_of_rice</td><td style="text-align:center">🌡</td><td style="text-align:left">thermometer</td><td style="text-align:center">🇫🇰</td><td style="text-align:left">falkland_islands</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💐</td><td style="text-align:left">bouquet</td><td style="text-align:center">🚰</td><td style="text-align:left">potable_water</td><td style="text-align:center">🇫🇮</td><td style="text-align:left">finland</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌷</td><td style="text-align:left">tulip</td><td style="text-align:center">🛁</td><td style="text-align:left">bathtub</td><td style="text-align:center">🇵🇫</td><td style="text-align:left">french_polynesia</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌹</td><td style="text-align:left">rose</td><td style="text-align:center">🛎</td><td style="text-align:left">bellhop_bell</td><td style="text-align:center">🇬🇲</td><td style="text-align:left">gambia</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🥀</td><td style="text-align:left">wilted_flower</td><td style="text-align:center">🗝</td><td style="text-align:left">old_key</td><td style="text-align:center">🇬🇭</td><td style="text-align:left">ghana</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌻</td><td style="text-align:left">sunflower</td><td style="text-align:center">🛋</td><td style="text-align:left">couch_and_lamp</td><td style="text-align:center">🇬🇱</td><td style="text-align:left">greenland</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌼</td><td style="text-align:left">blossom</td><td style="text-align:center">🛌</td><td style="text-align:left">sleeping_bed</td><td style="text-align:center">🇬🇺</td><td style="text-align:left">guam</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌸</td><td style="text-align:left">cherry_blossom</td><td style="text-align:center">🛍</td><td style="text-align:left">shopping</td><td style="text-align:center">🇬🇳</td><td style="text-align:left">guinea</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌺</td><td style="text-align:left">hibiscus</td><td style="text-align:center">🎁</td><td style="text-align:left">gift</td><td style="text-align:center">🇭🇹</td><td style="text-align:left">haiti</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌎</td><td style="text-align:left">earth_americas</td><td style="text-align:center">🎏</td><td style="text-align:left">flags</td><td style="text-align:center">🇭🇺</td><td style="text-align:left">hungary</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌍</td><td style="text-align:left">earth_africa</td><td style="text-align:center">🎊</td><td style="text-align:left">confetti_ball</td><td style="text-align:center">🇮🇩</td><td style="text-align:left">indonesia</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌏</td><td style="text-align:left">earth_asia</td><td style="text-align:center">🎎</td><td style="text-align:left">dolls</td><td style="text-align:center">🇮🇪</td><td style="text-align:left">ireland</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌕</td><td style="text-align:left">full_moon</td><td style="text-align:center">🏮</td><td style="text-align:left">lantern</td><td style="text-align:center">🇮🇹</td><td style="text-align:left">it</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌖</td><td style="text-align:left">waning_gibbous_moon</td><td style="text-align:center">✉️</td><td style="text-align:left">email</td><td style="text-align:center">🎌</td><td style="text-align:left">crossed_flags</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌗</td><td style="text-align:left">last_quarter_moon</td><td style="text-align:center">📩</td><td style="text-align:left">envelope_with_arrow</td><td style="text-align:center">🇰🇿</td><td style="text-align:left">kazakhstan</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌘</td><td style="text-align:left">waning_crescent_moon</td><td style="text-align:center">📧</td><td style="text-align:left">e-mail</td><td style="text-align:center">🇽🇰</td><td style="text-align:left">kosovo</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌑</td><td style="text-align:left">new_moon</td><td style="text-align:center">📥</td><td style="text-align:left">inbox_tray</td><td style="text-align:center">🇱🇦</td><td style="text-align:left">laos</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌒</td><td style="text-align:left">waxing_crescent_moon</td><td style="text-align:center">📦</td><td style="text-align:left">package</td><td style="text-align:center">🇱🇸</td><td style="text-align:left">lesotho</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌓</td><td style="text-align:left">first_quarter_moon</td><td style="text-align:center">📪</td><td style="text-align:left">mailbox_closed</td><td style="text-align:center">🇱🇮</td><td style="text-align:left">liechtenstein</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌔</td><td style="text-align:left">moon</td><td style="text-align:center">📬</td><td style="text-align:left">mailbox_with_mail</td><td style="text-align:center">🇲🇴</td><td style="text-align:left">macau</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌔</td><td style="text-align:left">waxing_gibbous_moon</td><td style="text-align:center">📮</td><td style="text-align:left">postbox</td><td style="text-align:center">🇲🇼</td><td style="text-align:left">malawi</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌚</td><td style="text-align:left">new_moon_with_face</td><td style="text-align:center">📜</td><td style="text-align:left">scroll</td><td style="text-align:center">🇲🇱</td><td style="text-align:left">mali</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌝</td><td style="text-align:left">full_moon_with_face</td><td style="text-align:center">📄</td><td style="text-align:left">page_facing_up</td><td style="text-align:center">🇲🇶</td><td style="text-align:left">martinique</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌞</td><td style="text-align:left">sun_with_face</td><td style="text-align:center">📊</td><td style="text-align:left">bar_chart</td><td style="text-align:center">🇾🇹</td><td style="text-align:left">mayotte</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌛</td><td style="text-align:left">first_quarter_moon_with_face</td><td style="text-align:center">📉</td><td style="text-align:left">chart_with_downwards_trend</td><td style="text-align:center">🇲🇩</td><td style="text-align:left">moldova</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌜</td><td style="text-align:left">last_quarter_moon_with_face</td><td style="text-align:center">🗓</td><td style="text-align:left">spiral_calendar</td><td style="text-align:center">🇲🇪</td><td style="text-align:left">montenegro</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌙</td><td style="text-align:left">crescent_moon</td><td style="text-align:center">📅</td><td style="text-align:left">date</td><td style="text-align:center">🇲🇿</td><td style="text-align:left">mozambique</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💫</td><td style="text-align:left">dizzy</td><td style="text-align:center">🗃</td><td style="text-align:left">card_file_box</td><td style="text-align:center">🇳🇷</td><td style="text-align:left">nauru</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">⭐️</td><td style="text-align:left">star</td><td style="text-align:center">🗄</td><td style="text-align:left">file_cabinet</td><td style="text-align:center">🇳🇨</td><td style="text-align:left">new_caledonia</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌟</td><td style="text-align:left">star2</td><td style="text-align:center">📁</td><td style="text-align:left">file_folder</td><td style="text-align:center">🇳🇪</td><td style="text-align:left">niger</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">✨</td><td style="text-align:left">sparkles</td><td style="text-align:center">🗂</td><td style="text-align:left">card_index_dividers</td><td style="text-align:center">🇳🇫</td><td style="text-align:left">norfolk_island</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">⚡️</td><td style="text-align:left">zap</td><td style="text-align:center">📰</td><td style="text-align:left">newspaper</td><td style="text-align:center">🇳🇴</td><td style="text-align:left">norway</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🔥</td><td style="text-align:left">fire</td><td style="text-align:center">📔</td><td style="text-align:left">notebook_with_decorative_cover</td><td style="text-align:center">🇵🇼</td><td style="text-align:left">palau</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💥</td><td style="text-align:left">boom</td><td style="text-align:center">📕</td><td style="text-align:left">closed_book</td><td style="text-align:center">🇵🇬</td><td style="text-align:left">papua_new_guinea</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💥</td><td style="text-align:left">collision</td><td style="text-align:center">📘</td><td style="text-align:left">blue_book</td><td style="text-align:center">🇵🇭</td><td style="text-align:left">philippines</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">☄</td><td style="text-align:left">comet</td><td style="text-align:center">📚</td><td style="text-align:left">books</td><td style="text-align:center">🇵🇹</td><td style="text-align:left">portugal</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">☀️</td><td style="text-align:left">sunny</td><td style="text-align:center">📖</td><td style="text-align:left">open_book</td><td style="text-align:center">🇷🇪</td><td style="text-align:left">reunion</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌤</td><td style="text-align:left">sun_behind_small_cloud</td><td style="text-align:center">🔗</td><td style="text-align:left">link</td><td style="text-align:center">🇷🇼</td><td style="text-align:left">rwanda</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">⛅️</td><td style="text-align:left">partly_sunny</td><td style="text-align:center">🖇</td><td style="text-align:left">paperclips</td><td style="text-align:center">🇰🇳</td><td style="text-align:left">st_kitts_nevis</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌥</td><td style="text-align:left">sun_behind_large_cloud</td><td style="text-align:center">📏</td><td style="text-align:left">straight_ruler</td><td style="text-align:center">🇻🇨</td><td style="text-align:left">st_vincent_grenadines</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌦</td><td style="text-align:left">sun_behind_rain_cloud</td><td style="text-align:center">📍</td><td style="text-align:left">round_pushpin</td><td style="text-align:center">🇸🇹</td><td style="text-align:left">sao_tome_principe</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌈</td><td style="text-align:left">rainbow</td><td style="text-align:center">🖊</td><td style="text-align:left">pen</td><td style="text-align:center">🇷🇸</td><td style="text-align:left">serbia</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">☁️</td><td style="text-align:left">cloud</td><td style="text-align:center">✒️</td><td style="text-align:left">black_nib</td><td style="text-align:center">🇸🇬</td><td style="text-align:left">singapore</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌧</td><td style="text-align:left">cloud_with_rain</td><td style="text-align:center">🖍</td><td style="text-align:left">crayon</td><td style="text-align:center">🇸🇮</td><td style="text-align:left">slovenia</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">⛈</td><td style="text-align:left">cloud_with_lightning_and_rain</td><td style="text-align:center">📝</td><td style="text-align:left">pencil</td><td style="text-align:center">🇿🇦</td><td style="text-align:left">south_africa</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌩</td><td style="text-align:left">cloud_with_lightning</td><td style="text-align:center">🔍</td><td style="text-align:left">mag</td><td style="text-align:center">🇸🇸</td><td style="text-align:left">south_sudan</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌨</td><td style="text-align:left">cloud_with_snow</td><td style="text-align:center">🔏</td><td style="text-align:left">lock_with_ink_pen</td><td style="text-align:center">🇸🇩</td><td style="text-align:left">sudan</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">☃️</td><td style="text-align:left">snowman_with_snow</td><td style="text-align:center">🔒</td><td style="text-align:left">lock</td><td style="text-align:center">🇸🇪</td><td style="text-align:left">sweden</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">⛄️</td><td style="text-align:left">snowman</td><td style="text-align:center">❤️</td><td style="text-align:left">heart</td><td style="text-align:center">🇹🇼</td><td style="text-align:left">taiwan</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">❄️</td><td style="text-align:left">snowflake</td><td style="text-align:center">💚</td><td style="text-align:left">green_heart</td><td style="text-align:center">🇹🇭</td><td style="text-align:left">thailand</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌬</td><td style="text-align:left">wind_face</td><td style="text-align:center">💜</td><td style="text-align:left">purple_heart</td><td style="text-align:center">🇹🇰</td><td style="text-align:left">tokelau</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💨</td><td style="text-align:left">dash</td><td style="text-align:center">💔</td><td style="text-align:left">broken_heart</td><td style="text-align:center">🇹🇳</td><td style="text-align:left">tunisia</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌪</td><td style="text-align:left">tornado</td><td style="text-align:center">💕</td><td style="text-align:left">two_hearts</td><td style="text-align:center">🇹🇨</td><td style="text-align:left">turks_caicos_islands</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌫</td><td style="text-align:left">fog</td><td style="text-align:center">💓</td><td style="text-align:left">heartbeat</td><td style="text-align:center">🇺🇦</td><td style="text-align:left">ukraine</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🌊</td><td style="text-align:left">ocean</td><td style="text-align:center">💖</td><td style="text-align:left">sparkling_heart</td><td style="text-align:center">🇬🇧</td><td style="text-align:left">uk</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💧</td><td style="text-align:left">droplet</td><td style="text-align:center">💝</td><td style="text-align:left">gift_heart</td><td style="text-align:center">🇺🇾</td><td style="text-align:left">uruguay</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">💦</td><td style="text-align:left">sweat_drops</td><td style="text-align:center">☮️</td><td style="text-align:left">peace_symbol</td><td style="text-align:center">🇻🇦</td><td style="text-align:left">vatican_city</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">☔️</td><td style="text-align:left">umbrella</td><td style="text-align:center">☪️</td><td style="text-align:left">star_and_crescent</td><td style="text-align:center">🇼🇫</td><td style="text-align:left">wallis_futuna</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🍏</td><td style="text-align:left">green_apple</td><td style="text-align:center">☸️</td><td style="text-align:left">wheel_of_dharma</td><td style="text-align:center">🇿🇲</td><td style="text-align:left">zambia</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">🍎</td><td style="text-align:left">apple</td><td style="text-align:center">🔯</td><td style="text-align:left">six_pointed_star</td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
          <category> Emoji </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
            <tag> develop </tag>
            
            <tag> Emoji </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客建设日志</title>
      <link href="/BlogTODO/"/>
      <url>/BlogTODO/</url>
      
        <content type="html"><![CDATA[<h1 id="日志"><a class="markdownIt-Anchor" href="#日志"></a> 日志</h1><blockquote><p>建博客的想法已经有好几年了，从当时大一体验了免费的学生认证服务器开始，到最近才开始创建。<br />大一的时候，想法很简单。就是想记录一下学到的知识，和别人分享技术，交流技术。<br />大二时，开始着手尝试开发，但是每每开发的版本，都令自己不满意，开发了又删掉。删了又重新写…<br />大三，忙着处理学校学习比赛等其他事情，没有理会，学的东西，整理的笔记都存着自己看，并没有分享，并且觉得好多博客内容都是别人写过的，不必重复搬运和重新造轮子。并且开始收藏别人的博文，把学过的东西，笔记全部以浏览器书签的形式保存着。需要的时候再找书签。两年内，收藏的书签有100+(26个文件夹分类)。<br />逐渐的，随着文件夹的增多和收藏的网页越来越多，我终于意识到几个严重的问题：</p><blockquote><ol><li>要查找一些文章越来越难，因为文件夹形式的分类过于死板</li><li>对于同一个问题，我与网上其他人的博客的想法不同，希望记录下来(主要目的)</li><li>其他人的博文难免会出现错误，过时，抄袭等等质量问题</li><li>这是一个知识输出的过程，也是一个自我展示的过程，更容易看清自己的知识广度和深度。</li></ol></blockquote><p>大四，忙完学校课程后，着手更新，维护本博客。一边发新内容(如果有的话)，一边搬运以前学过的一切，记录的一切笔记。</p></blockquote><span id="more"></span><h2 id="博客状态"><a class="markdownIt-Anchor" href="#博客状态"></a> 博客状态：</h2><p><code>初步建成 , 搬运旧笔记 or 书签 ing</code></p><p><code>月更 ==&gt; 每月保底一篇 (不保证)</code></p><h2 id="搬运进度"><a class="markdownIt-Anchor" href="#搬运进度"></a> 搬运进度</h2><ul><li><blockquote><p>✔ 完成    ✖ 取消    ▶ 进行中</p></blockquote></li><li>▶ 一些以前的旧 idea + 代码片段 + 书签</li><li>✔ TOJ,蓝桥杯 刷题思路&amp;代码(不上传水题了)</li><li>✔ PAT 刷题思路&amp;代码</li></ul><h2 id="todo-site"><a class="markdownIt-Anchor" href="#todo-site"></a> TODO - Site</h2><ul><li><blockquote><p>✔ 完成    ✖ 取消    ▶ 进行中</p></blockquote></li><li>✔ <code>hexo-deployer-git</code> 版本更新（<code>hexo-deployer-git@2.1.0</code> =&gt; <code>hexo-deployer-git@4.0.0</code>）原本在 <code>node12</code> 以上版本会生成空 <code>index.html</code> 页面</li><li>✔ 替换 Markdown 渲染器(<code>@upupming/hexo-renderer-markdown-it-plus</code>)</li><li>✔ 旧版本迁移到新版本，并修复主题 bug (<code>E:\blogs\themes\melody\layout\includes\layout.pug</code>)  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- var pageKeywords = [config.keywords].join(&#x27;,&#x27;)</span><br></pre></td></tr></table></figure></li><li>✔ hexo-theme-melody 主题版本更新（<code>1.6.1</code> =&gt; <code>1.9.1</code>）</li><li>✔ nodejs 版本更新（<code>v12.22.7</code> =&gt; <code>v20.10.0</code>）</li><li>✔ hexo-cli 版本更新（<code>hexo-cli@4.3.0</code> =&gt; <code>hexo-cli@4.3.1</code>）</li><li>✔ hexo 版本更新（<code>hexo@3.7.1</code> =&gt; <code>hexo@7.0.0</code>）</li><li>✔ 修复 <code>:\</code> 会识别成 Emoji 表情 😕</li><li>▶ 修复KaTeX字符识别不出（）</li><li>▶ 修复主页的文章预览有图片时，访问地址不正确</li><li>▶ 添加 <code>Android</code> APP 端，随时发表 idea</li><li>▶ 添加支持原生html页面</li><li>✔ 修复Markdown链接跳转路径不正确，将访问路由从 <code>date - title</code> 改为 <code>title</code></li><li>✔ 解决迁移后 <code>GitTalk</code> 和图片问题</li><li>✔ 服务器过期，下线一个月。博客迁移至 <code>Github/Gitee page</code></li><li>✔ 加入 <code>GitTalk</code> 评论系统</li><li>✔ 修改Archives为不分页</li><li>✖ 解决Katex解析超过64位时解析失败的错误(自己好了)</li><li>✖ 添加Emoji表情支持 (默认支持无需添加 ? )</li><li>✔ 博客上传工具：优化文件显示格式</li><li>✔ 博客上传工具：优化以覆盖文件形式上传文章会导致Hexo render渲染失败的bug</li><li>✔ 去除线上<code>Browsersync</code>调试模块</li><li>✔ 博客上传工具：添加同步上传图片</li><li>✔ 博客上传工具： 优化ssh,sftp无密码登录</li><li>✔ 添加Latex数学公式支持</li><li>✔ 做一个基于ftp/sftp的上传工具，用于在线部署博客(已开源到 <code>Github</code>)</li><li>✔ 部署服务器，nginx用户请求默认分发到4000端口，旧网站等静态资源调整到 <code>/down/</code>子目录下</li><li>✔ 创建Tags, Categories页面</li><li>✔ 搭建Markdown的编写环境</li></ul><h2 id="todo-blog"><a class="markdownIt-Anchor" href="#todo-blog"></a> TODO - Blog</h2><blockquote><p>咕咕，咕咕，咕 ~</p></blockquote><p><img src="gugu.png" alt="" /></p><ul><li><a href="/qa3">大数据系列</a></li><li><a href="/spark4">Apache Spark</a></li><li><a href="/AliyunTianci03">阿里云天池计划（机器学习）</a></li><li><a href="/SQL_Base">SQL/CQL/HQL/ImpalaQL</a></li><li><a href="/StudySummary">学习资源汇总</a></li><li><a href="/projectsCollect">旧项目总结</a></li><li>Java泛型</li><li>源码计划</li><li>Linux小工具(tail nohup …)</li><li>Kali 渗透工具</li></ul>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> develop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加md文章上传工具</title>
      <link href="/%E6%B7%BB%E5%8A%A0md%E6%96%87%E7%AB%A0%E4%B8%8A%E4%BC%A0%E5%B7%A5%E5%85%B7/"/>
      <url>/%E6%B7%BB%E5%8A%A0md%E6%96%87%E7%AB%A0%E4%B8%8A%E4%BC%A0%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<ul><li>TODAY :<ol><li>做了一个基于sftp的博文上传工具，用于在线更新博客</li><li>搬运自己旧笔记 进度：（10/99+）</li><li>添加Latex数学公式支持</li></ol></li></ul><span id="more"></span><ul><li>TODO  :<ol><li>明天继续搬运…</li><li>完善上传工具功能。</li><li>去除Browsersync调试</li><li>优化覆盖文件导致渲染失败的bug</li><li>优化ssh,sftp无密码登录</li></ol></li></ul><p>附个代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> paramiko</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">connect_remote</span>():</span><br><span class="line">    host = <span class="string">&#x27;123.123.123.123&#x27;</span></span><br><span class="line">    port = <span class="number">22</span></span><br><span class="line">    name = <span class="string">&#x27;abc&#x27;</span></span><br><span class="line">    password = <span class="string">&#x27;123456&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 创建SSH对象</span></span><br><span class="line">    ssh_client = paramiko.SSHClient()</span><br><span class="line">    <span class="comment"># 允许连接不在know_hosts文件中的主机, 第一次登录的认证信息</span></span><br><span class="line">    ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span><br><span class="line">    <span class="comment"># 连接服务器</span></span><br><span class="line">    ssh_client.connect(hostname=host, port=port, username=name, password=password)</span><br><span class="line"></span><br><span class="line">    transport = paramiko.Transport((host, port))</span><br><span class="line">    transport.connect(username=name, password=password)</span><br><span class="line">    <span class="keyword">return</span> ssh_client, transport</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    local_dir = <span class="string">&#x27;E:/markdown/blog/&#x27;</span></span><br><span class="line">    remote_dir = <span class="string">r&#x27;/usr/local/blog/source/_posts/&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;=== sftp python v0.1 ===&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot; 连接服务器... &quot;</span>)</span><br><span class="line">    ssh, sftp = connect_remote()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot; 连接成功 &quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot; 1.查看博客路径&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot; 2.上传Post文章&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot; 3.下载Post文章&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot; 4.按q退出&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        answer = <span class="built_in">input</span>()</span><br><span class="line">        <span class="keyword">if</span> answer == <span class="string">&#x27;q&#x27;</span>:</span><br><span class="line">            <span class="comment"># 关闭连接</span></span><br><span class="line">            ssh.close()</span><br><span class="line">            sftp.close()</span><br><span class="line">            exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">int</span>(answer) == <span class="number">1</span>:</span><br><span class="line">            stdin, stdout, stderr = ssh.exec_command(<span class="string">&#x27;ls &#x27;</span> + remote_dir)</span><br><span class="line">            res, err = stdout.read(), stderr.read()</span><br><span class="line">            result = res <span class="keyword">if</span> res <span class="keyword">else</span> err</span><br><span class="line">            <span class="built_in">print</span>(result.decode())</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">int</span>(answer) == <span class="number">2</span>:</span><br><span class="line">            <span class="comment"># basedir 根目录, sub_directory 根目录下所有文件夹, sub_file 根目录下所有文件</span></span><br><span class="line">            <span class="keyword">for</span> basedir, sub_directory, sub_file <span class="keyword">in</span> os.walk(local_dir):</span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> sub_file:</span><br><span class="line">                    <span class="built_in">print</span>(i)</span><br><span class="line">            file = <span class="built_in">input</span>(<span class="string">&quot;which file want to upload?\n&quot;</span>)</span><br><span class="line">            sftp_client = paramiko.SFTPClient.from_transport(sftp)</span><br><span class="line">            <span class="built_in">print</span>(local_dir + file + <span class="string">&#x27;.md&#x27;</span>, remote_dir + file + <span class="string">&#x27;.md&#x27;</span>)</span><br><span class="line">            sftp_client.put(local_dir + file + <span class="string">&#x27;.md&#x27;</span>, remote_dir + file + <span class="string">&#x27;.md&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;ok!\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">int</span>(answer) == <span class="number">3</span>:</span><br><span class="line">            stdin, stdout, stderr = ssh.exec_command(<span class="string">&#x27;ls &#x27;</span> + remote_dir)</span><br><span class="line">            res, err = stdout.read(), stderr.read()</span><br><span class="line">            result = res <span class="keyword">if</span> res <span class="keyword">else</span> err</span><br><span class="line">            <span class="built_in">print</span>(result.decode())</span><br><span class="line"></span><br><span class="line">            file = <span class="built_in">input</span>(<span class="string">&quot;which file want to download?\n&quot;</span>)</span><br><span class="line">            sftp_client = paramiko.SFTPClient.from_transport(sftp)</span><br><span class="line">            sftp_client.get(remote_dir + file + <span class="string">&#x27;.md&#x27;</span>, local_dir + file + <span class="string">&#x27;.md&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;ok!\n&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 小工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> develop </tag>
            
            <tag> python </tag>
            
            <tag> sftp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TestUpload</title>
      <link href="/TestUpload/"/>
      <url>/TestUpload/</url>
      
        <content type="html"><![CDATA[<h1 id="这是一级标题"><a class="markdownIt-Anchor" href="#这是一级标题"></a> 这是一级标题</h1><h2 id="这是二级标题"><a class="markdownIt-Anchor" href="#这是二级标题"></a> 这是二级标题</h2><h3 id="这是三级标题"><a class="markdownIt-Anchor" href="#这是三级标题"></a> 这是三级标题</h3><h4 id="这是四级标题"><a class="markdownIt-Anchor" href="#这是四级标题"></a> 这是四级标题</h4><h5 id="这是五级标题"><a class="markdownIt-Anchor" href="#这是五级标题"></a> 这是五级标题</h5><h6 id="这是六级标题"><a class="markdownIt-Anchor" href="#这是六级标题"></a> 这是六级标题</h6><span id="more"></span><p><strong>这是加粗的文字</strong><br /><em>这是倾斜的文字</em><br /><em><strong>这是斜体加粗的文字</strong></em><br /><s>这是加删除线的文字</s></p><blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p></blockquote></blockquote></blockquote><hr /><hr /><hr /><hr /><p><img src="http://119.29.144.44/down/iis-85.png" alt="vn" /></p><p><a href="http://jianshu.com">简书</a><br /><a href="http://baidu.com">百度</a></p><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ol><li>列表内容</li><li>列表内容</li><li>列表内容</li></ol><table><thead><tr><th>姓名</th><th style="text-align:center">技能</th><th style="text-align:right">排行</th></tr></thead><tbody><tr><td>刘备</td><td style="text-align:center">哭</td><td style="text-align:right">大哥</td></tr><tr><td>关羽</td><td style="text-align:center">打</td><td style="text-align:right">二哥</td></tr><tr><td>张飞</td><td style="text-align:center">骂</td><td style="text-align:right">三弟</td></tr></tbody></table><p><code>create database hero;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function fun()&#123;</span><br><span class="line">     echo &quot;这是一句非常牛逼的代码&quot;;</span><br><span class="line">&#125;</span><br><span class="line">fun();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
            <tag> develop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AddHexoPost</title>
      <link href="/%E6%B5%8B%E8%AF%95/"/>
      <url>/%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h3 id="你好"><a class="markdownIt-Anchor" href="#你好"></a> 你好</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String args[])</span></span><br><span class="line">&#123;</span><br><span class="line">    Sys...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>TODAY : 今天搞定了Markdown的编写环境，搞定了tags, categories</li><li>TODO  : 明天做一个基于ftp/sftp的上传工具，用于在线部署博客</li></ul>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
            <tag> develop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯 统计单词数</title>
      <link href="/toj1399/"/>
      <url>/toj1399/</url>
      
        <content type="html"><![CDATA[<h1 id="蓝桥杯-统计单词数"><a class="markdownIt-Anchor" href="#蓝桥杯-统计单词数"></a> 蓝桥杯 统计单词数</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>统计输入英文文章段落中不同单词（单词有大小写之分,但统计时忽略大小写）各自出现的次数。输入段落中所含单词的总数不超过100，最长单词的长度不超过20个字母。</p><span id="more"></span><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>一个包含若干句子的段落，每个句子由若干英文单词组成。除空格,逗号和句号外,这些输入的句子中不含其他非字母字符,并且,逗号和句号紧跟在它前面的英文单词后面，中间没有空格。段落最后一个字符是回车符,表示输入结束。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>若段落中共有M个不同的英文单词，则按照其在段落中出现的先后顺序输出M行，各行的格式为:单词中所有字母均用大写形式输出（最长的单词顶格输出，它前面没有多余的空格;其余单词与其右对齐）+冒号+N个*号+该单词在段落中的出现次数N。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is a test. This test is easy. This is a test. This test is easy.</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">THIS:****4</span><br><span class="line">  IS:****4</span><br><span class="line">   A:**2</span><br><span class="line">TEST:****4</span><br><span class="line">EASY:**2</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>c++的string居然没有split()，需要自己实现！<code>strcpy()</code>,<code>strtok()</code><br />c++还有一堆小众函数特别好用。<br />transform()toupper()</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//TOJ1399</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">vector&lt;string&gt; <span class="title">split</span><span class="params">(<span class="type">const</span> string&amp; str, <span class="type">const</span> string&amp; delim)</span> </span>&#123;</span><br><span class="line">    vector&lt;string&gt; res;</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&quot;&quot;</span> == str) <span class="keyword">return</span> res;</span><br><span class="line">    <span class="type">char</span> * strs = <span class="keyword">new</span> <span class="type">char</span>[str.<span class="built_in">length</span>() + <span class="number">1</span>];</span><br><span class="line">    <span class="built_in">strcpy</span>(strs, str.<span class="built_in">c_str</span>());</span><br><span class="line">    <span class="type">char</span> * d = <span class="keyword">new</span> <span class="type">char</span>[delim.<span class="built_in">length</span>() + <span class="number">1</span>];</span><br><span class="line">    <span class="built_in">strcpy</span>(d, delim.<span class="built_in">c_str</span>());</span><br><span class="line">    <span class="type">char</span> *p = <span class="built_in">strtok</span>(strs, d);</span><br><span class="line">    <span class="keyword">while</span> (p) &#123;</span><br><span class="line">        string s = p;</span><br><span class="line">        res.<span class="built_in">push_back</span>(s);</span><br><span class="line">        p = <span class="built_in">strtok</span>(<span class="literal">NULL</span>, d);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">char</span> <span class="title">op</span><span class="params">(<span class="type">char</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">toupper</span>(c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">include</span><span class="params">(vector&lt;string&gt;&amp; v, string&amp; s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (v.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">unsigned</span> i = <span class="number">0</span>; i &lt; v.<span class="built_in">size</span>(); ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (v[i] == s)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;string&gt; v;</span><br><span class="line">    string in;</span><br><span class="line">    <span class="built_in">getline</span>(cin, in);</span><br><span class="line">    <span class="built_in">transform</span>(in.<span class="built_in">begin</span>(), in.<span class="built_in">end</span>(), in.<span class="built_in">begin</span>(), op);</span><br><span class="line">    v = <span class="built_in">split</span>(in, <span class="string">&quot; ,.&quot;</span>);</span><br><span class="line">    <span class="comment">//统计</span></span><br><span class="line">    vector&lt;string&gt; vs;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ints;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">unsigned</span> i = <span class="number">0</span>; i &lt; v.<span class="built_in">size</span>(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a = <span class="built_in">include</span>(vs, v[i]);</span><br><span class="line">        <span class="keyword">if</span> (a == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            vs.<span class="built_in">push_back</span>(v[i]);</span><br><span class="line">            ints.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            ints[a]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查找最长单词</span></span><br><span class="line">    <span class="type">unsigned</span> longword = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">unsigned</span> a = <span class="number">0</span>; a &lt; vs.<span class="built_in">size</span>(); a++)</span><br><span class="line">        longword = (vs[a].<span class="built_in">size</span>() &gt; longword) ? vs[a].<span class="built_in">size</span>() : longword;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="type">unsigned</span> i = <span class="number">0</span>; i &lt; vs.<span class="built_in">size</span>(); ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">unsigned</span> j = <span class="number">0</span>; j &lt; longword - vs[i].<span class="built_in">size</span>(); j++)</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        cout &lt;&lt; vs[i] &lt;&lt; <span class="string">&quot;:&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; ints[i]; j++)</span><br><span class="line">            cout &lt;&lt; <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">        cout &lt;&lt; ints[i] &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
          <category> 算法提高 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vector </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯 黑色星期五</title>
      <link href="/toj1444/"/>
      <url>/toj1444/</url>
      
        <content type="html"><![CDATA[<h1 id="蓝桥杯-黑色星期五"><a class="markdownIt-Anchor" href="#蓝桥杯-黑色星期五"></a> 蓝桥杯 黑色星期五</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>有些西方人比较迷信，如果某个月的13号正好是星期五，他们就会觉得不太吉利，用古人的说法，就是“诸事不宜”。请你编写一个程序，统计出在某个特定的年份中，出现了多少次既是13号又是星期五的情形，以帮助你的迷信朋友解决难题。</p><span id="more"></span><p>说明：<br />1. 一年有365天，闰年有366天，所谓闰年，即能被4整除且不能被100整除的年份，或是既能被100整除也能被400整除的年份；<br />2. 已知1998年1月1日是星期四，用户输入的年份肯定大于或等于1998年。</p><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>输入只有一行，即某个特定的年份（大于或等于1998年）。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>输出只有一行，即在这一年中，出现了多少次既是13号又是星期五的情形。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1998</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>先跳到今年,推算出当年1月1星期几。然后跳到13号，只算星期，然后循环加上每个月的天数就是每月13号，最后判断一下是不是星期五统计好就行了。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//TOJ1444</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isPrime</span><span class="params">(<span class="type">int</span> argv)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (argv % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; argv % <span class="number">100</span> != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (argv % <span class="number">100</span> == <span class="number">0</span> &amp;&amp; argv % <span class="number">400</span> == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> now = <span class="number">1998</span>, year, week = <span class="number">4</span>, count = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> month[] = &#123;<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>&#125;;</span><br><span class="line">    cin &gt;&gt; year;</span><br><span class="line">    <span class="comment">//跳到今年,推算出当年1月1星期几</span></span><br><span class="line">    <span class="keyword">while</span> (now &lt; year)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a = <span class="built_in">isPrime</span>(now) ? <span class="number">366</span> % <span class="number">7</span> : <span class="number">365</span> % <span class="number">7</span>;</span><br><span class="line">        week += a;</span><br><span class="line">        week = week &gt; <span class="number">7</span> ? week - <span class="number">7</span>: week;</span><br><span class="line">        now++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//跳到13号，只算星期</span></span><br><span class="line">    week += <span class="number">5</span>;</span><br><span class="line">    week = week &gt; <span class="number">7</span> ? week - <span class="number">7</span>: week;</span><br><span class="line">    <span class="keyword">if</span> (week == <span class="number">5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isPrime</span>(now))</span><br><span class="line">            &#123;</span><br><span class="line">                month[i] = <span class="number">29</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        week += month[i] % <span class="number">7</span>;</span><br><span class="line">        week = week &gt; <span class="number">7</span> ? week - <span class="number">7</span>: week;</span><br><span class="line">        <span class="keyword">if</span> (week == <span class="number">5</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; count;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
          <category> 算法训练 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯 数的读法</title>
      <link href="/lqb61/"/>
      <url>/lqb61/</url>
      
        <content type="html"><![CDATA[<h1 id="蓝桥杯-数的读法"><a class="markdownIt-Anchor" href="#蓝桥杯-数的读法"></a> 蓝桥杯 数的读法</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>Tom教授正在给研究生讲授一门关于基因的课程，有一件事情让他颇为头疼：一条染色体上有成千上万个碱基对，它们从0开始编号，到几百万，几千万，甚至上亿。</p><span id="more"></span><p>比如说，在对学生讲解第<code>1234567009</code>号位置上的碱基时，光看着数字是很难准确的念出来的。<br />所以，他迫切地需要一个系统，然后当他输入12 3456 7009时，会给出相应的念法：<br />十二亿三千四百五十六万七千零九<br />用汉语拼音表示为<br />shi er yi san qian si bai wu shi liu wan qi qian ling jiu<br />这样他只需要照着念就可以了。<br />你的任务是帮他设计这样一个系统：给定一个阿拉伯数字串，你帮他按照中文读写的规范转为汉语拼音字串，相邻的两个音节用一个空格符格开。<br />注意必须严格按照规范，比如说“10010”读作“yi wan ling yi shi”而不是“yi wan ling shi”，“100000”读作“shi wan”而不是“yi shi wan”，“2000”读作“er qian”而不是“liang qian”。</p><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>有一个数字串，数值大小不超过2,000,000,000。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>是一个由小写英文字母，逗号和空格组成的字符串，表示该数的英文读法。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1234567009</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shi er yi san qian si bai wu shi liu wan qi qian ling jiu</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>采用了分治的思想，先划分为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>10000</mn><mo stretchy="false">]</mo><mo separator="true">,</mo><mo stretchy="false">[</mo><mn>10000</mn><mo separator="true">,</mo><mn>100000000</mn><mo stretchy="false">]</mo><mo separator="true">,</mo><mo stretchy="false">[</mo><mn>100000000</mn><mo separator="true">,</mo><mo>+</mo><mi mathvariant="normal">∞</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0, 10000], [10000, 100000000], [100000000, +∞]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">+</span><span class="mord">∞</span><span class="mclose">]</span></span></span></span>，1万以上的，把数字拆成几部分，分别处理。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String[] a = &#123;<span class="string">&quot;ling&quot;</span>,<span class="string">&quot;yi&quot;</span>,<span class="string">&quot;er&quot;</span>,<span class="string">&quot;san&quot;</span>,<span class="string">&quot;si&quot;</span>,<span class="string">&quot;wu&quot;</span>,<span class="string">&quot;liu&quot;</span>,<span class="string">&quot;qi&quot;</span>,<span class="string">&quot;ba&quot;</span>,<span class="string">&quot;jiu&quot;</span>&#125;;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String[] b = &#123;<span class="string">&quot;yi&quot;</span>,<span class="string">&quot;wan&quot;</span>,<span class="string">&quot;qian&quot;</span>,<span class="string">&quot;bai&quot;</span>,<span class="string">&quot;shi&quot;</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">smallRead</span><span class="params">(<span class="type">char</span>[] num)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (num.length==<span class="number">2</span>&amp;&amp;num[<span class="number">0</span>]==<span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;shi&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(num[<span class="number">1</span>]!=<span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; &quot;</span>+a[num[<span class="number">1</span>]-<span class="number">48</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;num.length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(num[i] == <span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i;j&lt;num.length;j++)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(num[j]!=<span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">                        System.out.print(<span class="string">&quot; ling &quot;</span>);</span><br><span class="line">                        <span class="type">char</span>[] aa = <span class="keyword">new</span> <span class="title class_">char</span>[num.length-j];</span><br><span class="line">                        System.arraycopy(num, j, aa, <span class="number">0</span>, num.length-j);</span><br><span class="line">                        readNum(aa);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;<span class="comment">//如果等于0 则不输出</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(i!=<span class="number">0</span>)&#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(i==num.length-<span class="number">1</span>)&#123;</span><br><span class="line">                    System.out.print(a[num[i]-<span class="number">48</span>]);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(a[num[i]-<span class="number">48</span>]+<span class="string">&quot; &quot;</span>+b[<span class="number">6</span> - num.length + i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Boolean <span class="title function_">isZero</span><span class="params">(<span class="type">char</span>[] a)</span>&#123;</span><br><span class="line">        <span class="type">Boolean</span> <span class="variable">temp</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">char</span> c:a)&#123;</span><br><span class="line">            <span class="keyword">if</span>(c != <span class="number">48</span>)&#123;</span><br><span class="line">                temp = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">readNum</span><span class="params">(<span class="type">char</span>[] num)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(num.length&lt;=<span class="number">5</span>)&#123;</span><br><span class="line">            <span class="comment">//10000以下</span></span><br><span class="line">            smallRead(num);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(num.length&lt;<span class="number">9</span>)&#123;</span><br><span class="line">            <span class="comment">//一亿以下，一万以上</span></span><br><span class="line">            <span class="type">char</span>[] yi = <span class="keyword">new</span> <span class="title class_">char</span>[num.length - <span class="number">4</span>];</span><br><span class="line">            <span class="type">char</span>[] wang = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">4</span>];</span><br><span class="line">            System.arraycopy(num, num.length - <span class="number">4</span>, wang, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            System.arraycopy(num, <span class="number">0</span>, yi, <span class="number">0</span>, num.length - <span class="number">4</span>);</span><br><span class="line">            smallRead(yi);</span><br><span class="line">            <span class="comment">//判断后面是不是全为0</span></span><br><span class="line">            <span class="keyword">if</span>(isZero(wang))&#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; wan&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; wan &quot;</span>);</span><br><span class="line">                smallRead(wang);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(num.length&gt;=<span class="number">9</span>)&#123;</span><br><span class="line">            <span class="comment">//一亿以上，两亿以下</span></span><br><span class="line">            <span class="type">char</span>[] wang = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">4</span>];</span><br><span class="line">            <span class="type">char</span>[] yi = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">4</span>];</span><br><span class="line">            <span class="type">char</span>[] max = <span class="keyword">new</span> <span class="title class_">char</span>[num.length - <span class="number">8</span>];</span><br><span class="line">            System.arraycopy(num, num.length - <span class="number">4</span>, wang, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            System.arraycopy(num, num.length - <span class="number">8</span>, yi, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            System.arraycopy(num, <span class="number">0</span>, max, <span class="number">0</span>, num.length - <span class="number">8</span>);</span><br><span class="line">            smallRead(max);</span><br><span class="line">            <span class="comment">//判断后面是不是全为0</span></span><br><span class="line">            <span class="keyword">if</span>(isZero(yi))&#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; yi&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot; yi &quot;</span>);</span><br><span class="line">                smallRead(yi);</span><br><span class="line">                <span class="keyword">if</span>(isZero(yi))&#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot; wan&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot; wan &quot;</span>);</span><br><span class="line">                    smallRead(wang);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">char</span>[] num = scanner.nextLine().toCharArray();</span><br><span class="line">        scanner.close();</span><br><span class="line">        readNum(num);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
          <category> 基础练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯 表达式计算</title>
      <link href="/lqb419/"/>
      <url>/lqb419/</url>
      
        <content type="html"><![CDATA[<h1 id="蓝桥杯-表达式计算"><a class="markdownIt-Anchor" href="#蓝桥杯-表达式计算"></a> 蓝桥杯 表达式计算</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>输入一个只包含加减乖除和括号的合法表达式，求表达式的值。其中除表示整除。</p><span id="more"></span><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>输入一行，包含一个表达式。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>输出这个表达式的值。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1-2+3*(4-5)</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-4</span><br></pre></td></tr></table></figure><h2 id="数据规模和约定"><a class="markdownIt-Anchor" href="#数据规模和约定"></a> 数据规模和约定</h2><p>表达式长度不超过100，表达式运算合法且运算过程都在int内进行。</p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>我居然手动实现了两个栈类！！！</p><ol><li>预处理：如果前面是一个负号，需要在前面加一个0，使得表达式更加规范</li><li>遍历字符串<ol><li>如果是数字则压栈(前面有数字则弹出合并再压栈)</li><li>如果是左括号，压栈</li><li>如果是右括号，弹出数据，计算后再压栈，再循环弹出，计算压栈直操作符栈为空或者为左括号。</li><li>如果是操作符，先压栈，然后判断符号优先级，如果优先级比较大，就先取出数据计算，然后压栈。</li></ol></li><li>遍历完毕，计算剩下的表达式，直到操作符栈为空即为最后结果。</li><li>我做了float。理论上可以计算小数。</li></ol><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CharStack</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> maxSize;<span class="comment">// 栈的大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> top;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">char</span>[] arr;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CharStack</span><span class="params">(<span class="type">int</span> size)</span> &#123;</span><br><span class="line">        maxSize = size;</span><br><span class="line">        top = -<span class="number">1</span>;</span><br><span class="line">        arr = <span class="keyword">new</span> <span class="title class_">char</span>[maxSize];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">push</span><span class="params">(<span class="type">char</span> value)</span> &#123;</span><br><span class="line">        <span class="comment">// 压入数据</span></span><br><span class="line">        arr[++top] = value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">char</span> <span class="title function_">pop</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 弹出数据</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">a</span> <span class="operator">=</span> arr[top];</span><br><span class="line">        top--;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">char</span> <span class="title function_">peek</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 访问栈顶元素</span></span><br><span class="line">        <span class="keyword">return</span> arr[top];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isFull</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 栈是否满了</span></span><br><span class="line">        <span class="keyword">return</span> maxSize - <span class="number">1</span> == top;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEmpty</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 栈是否为空</span></span><br><span class="line">        <span class="keyword">return</span> top == -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FloatStack</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> maxSize;<span class="comment">// 栈的大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> top;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">float</span>[] arr;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">FloatStack</span><span class="params">(<span class="type">int</span> size)</span> &#123;</span><br><span class="line">        maxSize = size;</span><br><span class="line">        top = -<span class="number">1</span>;</span><br><span class="line">        arr = <span class="keyword">new</span> <span class="title class_">float</span>[maxSize];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">push</span><span class="params">(<span class="type">float</span> value)</span> &#123;</span><br><span class="line">        <span class="comment">// 压入数据</span></span><br><span class="line">        arr[++top] = value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">pop</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 弹出数据</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">a</span> <span class="operator">=</span> arr[top];</span><br><span class="line">        top--;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">float</span> <span class="title function_">peek</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 访问栈顶元素</span></span><br><span class="line">        <span class="keyword">return</span> arr[top];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isFull</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 栈是否满了</span></span><br><span class="line">        <span class="keyword">return</span> maxSize - <span class="number">1</span> == top;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isEmpty</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 栈是否为空</span></span><br><span class="line">        <span class="keyword">return</span> top == -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DEFAULT_STACK_SIZE</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">    <span class="comment">//判断是否为数字</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Boolean <span class="title function_">isInt</span><span class="params">(<span class="type">char</span> c)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (c&gt;<span class="number">47</span>&amp;&amp;c&lt;<span class="number">58</span>)?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//判断是否为操作符</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Boolean <span class="title function_">isOperater</span><span class="params">(<span class="type">char</span> c)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (c==<span class="string">&#x27;+&#x27;</span>||c==<span class="string">&#x27;-&#x27;</span>||c==<span class="string">&#x27;*&#x27;</span>||c==<span class="string">&#x27;/&#x27;</span>)?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//计算操作符的优先级</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Boolean <span class="title function_">isBigger</span><span class="params">(<span class="type">char</span> c,<span class="type">char</span> d)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sc</span> <span class="operator">=</span> (c==<span class="string">&#x27;*&#x27;</span>||c==<span class="string">&#x27;/&#x27;</span>)?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sd</span> <span class="operator">=</span> (d==<span class="string">&#x27;*&#x27;</span>||d==<span class="string">&#x27;/&#x27;</span>)?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(c==<span class="string">&#x27;(&#x27;</span>||c==<span class="string">&#x27;)&#x27;</span>||d==<span class="string">&#x27;(&#x27;</span>||d==<span class="string">&#x27;)&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(sc&gt;=sd)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//计算</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">float</span> <span class="title function_">doCalc</span><span class="params">(<span class="type">char</span> o,<span class="type">float</span> j,<span class="type">float</span> k)</span>&#123;</span><br><span class="line">        <span class="comment">//System.out.print(&quot;计算：&quot;+j+o+k+&quot;=&quot;);</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">&#x27;+&#x27;</span>) &#123;</span><br><span class="line">            result = j+k;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">&#x27;-&#x27;</span>) &#123;</span><br><span class="line">            result = j-k;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">&#x27;*&#x27;</span>) &#123;</span><br><span class="line">            result = j*k;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="string">&#x27;/&#x27;</span>) &#123;</span><br><span class="line">            result = j/k;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//System.out.println(result);</span></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">String</span> <span class="variable">bdss</span> <span class="operator">=</span> scanner.nextLine();</span><br><span class="line">        <span class="type">char</span>[] bds = bdss.toCharArray();</span><br><span class="line">        <span class="keyword">if</span>(bds[<span class="number">0</span>] == <span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">            bds = <span class="string">&quot;0&quot;</span>.concat(bdss).toCharArray();</span><br><span class="line">        &#125;</span><br><span class="line">        scanner.close();</span><br><span class="line">        <span class="comment">//操作符栈</span></span><br><span class="line">        <span class="type">CharStack</span> <span class="variable">operator</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CharStack</span>(DEFAULT_STACK_SIZE);</span><br><span class="line">        <span class="comment">//操作数栈</span></span><br><span class="line">        <span class="type">FloatStack</span> <span class="variable">operand</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FloatStack</span>(DEFAULT_STACK_SIZE);</span><br><span class="line">        <span class="comment">//依次取字符</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;bds.length;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(isInt(bds[i]))&#123;</span><br><span class="line">                <span class="keyword">if</span>(i!=<span class="number">0</span>&amp;&amp;isInt(bds[i-<span class="number">1</span>]))&#123;</span><br><span class="line">                    <span class="type">float</span> <span class="variable">a</span> <span class="operator">=</span> operand.pop();</span><br><span class="line">                    operand.push(a*<span class="number">10</span>+(bds[i]-<span class="number">48</span>));</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    operand.push((bds[i])-<span class="number">48</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="string">&#x27;(&#x27;</span> == bds[i])&#123;</span><br><span class="line">                operator.push(bds[i]);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="string">&#x27;)&#x27;</span> == bds[i])&#123;</span><br><span class="line">                <span class="keyword">while</span>(!operator.isEmpty()&amp;&amp;operator.peek()!=<span class="string">&#x27;(&#x27;</span>)&#123;</span><br><span class="line">                    <span class="type">char</span> <span class="variable">op</span> <span class="operator">=</span> operator.pop();</span><br><span class="line">                    <span class="type">float</span> <span class="variable">j</span> <span class="operator">=</span> operand.pop();</span><br><span class="line">                    <span class="type">float</span> <span class="variable">k</span> <span class="operator">=</span> operand.pop();</span><br><span class="line">                    <span class="type">float</span> <span class="variable">result</span> <span class="operator">=</span> doCalc(op, k, j);</span><br><span class="line">                    <span class="keyword">if</span>(result&lt;<span class="number">0</span>&amp;&amp;operator.peek()==<span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">                        result = -result;</span><br><span class="line">                        <span class="keyword">if</span>(operator.peek()==<span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">                            operator.pop();</span><br><span class="line">                            operator.push(<span class="string">&#x27;+&#x27;</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    operand.push(result);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(operator.peek()==<span class="string">&#x27;(&#x27;</span>)&#123;</span><br><span class="line">                    operator.pop();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(isOperater(bds[i]))&#123;</span><br><span class="line">                <span class="keyword">if</span>(bds[i] == <span class="string">&#x27;-&#x27;</span> &amp;&amp; bds[i-<span class="number">1</span>] == <span class="string">&#x27;(&#x27;</span>)&#123;</span><br><span class="line">                    operand.push(<span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">while</span>(isBigger(operator.peek(), bds[i])&amp;&amp;(!operator.isEmpty()))&#123;</span><br><span class="line">                    <span class="type">char</span> <span class="variable">op</span> <span class="operator">=</span> operator.pop();</span><br><span class="line">                    <span class="type">float</span> <span class="variable">j</span> <span class="operator">=</span> operand.pop();</span><br><span class="line">                    <span class="type">float</span> <span class="variable">k</span> <span class="operator">=</span> operand.pop();</span><br><span class="line">                    <span class="type">float</span> <span class="variable">result</span> <span class="operator">=</span> doCalc(op, k, j);</span><br><span class="line">                    <span class="keyword">if</span>(result&lt;<span class="number">0</span>&amp;&amp;operator.peek()==<span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">                        result = -result;</span><br><span class="line">                        <span class="keyword">if</span>(operator.peek()==<span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">                            operator.pop();</span><br><span class="line">                            operator.push(<span class="string">&#x27;+&#x27;</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    operand.push(result);</span><br><span class="line">                &#125;</span><br><span class="line">                operator.push(bds[i]);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(!operator.isEmpty())&#123;</span><br><span class="line">            <span class="type">char</span> <span class="variable">op</span> <span class="operator">=</span> operator.pop();</span><br><span class="line">            <span class="type">float</span> <span class="variable">j</span> <span class="operator">=</span> operand.pop();</span><br><span class="line">            <span class="type">float</span> <span class="variable">k</span> <span class="operator">=</span> operand.pop();</span><br><span class="line">            <span class="type">float</span> <span class="variable">result</span> <span class="operator">=</span> doCalc(op, k, j);</span><br><span class="line">            <span class="keyword">if</span>(result&lt;<span class="number">0</span>&amp;&amp;operator.peek()==<span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">                result = -result;</span><br><span class="line">                <span class="keyword">if</span>(operator.peek()==<span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">                    operator.pop();</span><br><span class="line">                    operator.push(<span class="string">&#x27;+&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            operand.push(result);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println((<span class="type">int</span>)operand.peek());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
          <category> 算法训练 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 栈 </tag>
            
            <tag> 表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1025 反转链表</title>
      <link href="/pat1025/"/>
      <url>/pat1025/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1025-反转链表"><a class="markdownIt-Anchor" href="#pat1025-反转链表"></a> PAT1025 反转链表</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>给定一个常数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span>以及一个单链表<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span></span></span></span>，请编写程序将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span></span></span></span>中每<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span>个结点反转。例如：给定<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span></span></span></span>为<code>1→2→3→4→5→6</code><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span>为 3，则输出应该为<code>3→2→1→6→5→4</code>；如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span>为 4，则输出应该为<code>4→3→2→1→5→6</code>，即最后不到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span>个元素不反转。</p><span id="more"></span><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>每个输入包含 1 个测试用例。每个测试用例第 1 行给出第 1 个结点的地址、结点总个数正整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mo stretchy="false">(</mo><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N(≤10^5)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>、以及正整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><mo stretchy="false">(</mo><mo>≤</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">K(≤N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mopen">(</span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>，即要求反转的子链结点的个数。结点的地址是 5 位非负整数，NULL 地址用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">−</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">−1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span>表示。<br />接下来有 N 行，每行格式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Address Data Next</span><br></pre></td></tr></table></figure><p>其中<code>Address</code>是结点地址，<code>Data</code>是该结点保存的整数数据，<code>Next</code>是下一结点的地址。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>对每个测试用例，顺序输出反转后的链表，其上每个结点占一行，格式与输入相同。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">00100 6 4</span><br><span class="line">00000 4 99999</span><br><span class="line">00100 1 12309</span><br><span class="line">68237 6 -1</span><br><span class="line">33218 3 00000</span><br><span class="line">99999 5 68237</span><br><span class="line">12309 2 33218</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">00000 4 33218</span><br><span class="line">33218 3 12309</span><br><span class="line">12309 2 00100</span><br><span class="line">00100 1 99999</span><br><span class="line">99999 5 68237</span><br><span class="line">68237 6 -1</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>定义Node结构体vector和map，填入数据。根据map对应的Node的next找到下一个节点，同时，每k个反转一次vector。<br />反转后结果输出就行。<br />思路很简单，就是不熟练STL用法。还有，想的太复杂了，想到实现一套单项链表，然后通过修改指针来达到反转效果，可惜逻辑过于复杂，没想到一个map搞定😅</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pat1025</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> &#123;</span><br><span class="line">    <span class="type">int</span> ads, data, next;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, k, str, start;</span><br><span class="line">    map&lt;<span class="type">int</span>, Node&gt; m;</span><br><span class="line">    cin &gt;&gt; start &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="function">vector&lt;Node&gt; <span class="title">node</span><span class="params">(n)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;str);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;m[str].data, &amp;m[str].next);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        node[i] = &#123; start,m[start].data ,<span class="number">0</span> &#125;;</span><br><span class="line">        start = m[start].next;</span><br><span class="line">        <span class="keyword">if</span> (start == <span class="number">-1</span>)</span><br><span class="line">            n = i + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> ((i + <span class="number">1</span>) % k == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">reverse</span>(node.<span class="built_in">begin</span>() + i + <span class="number">1</span> - k, node.<span class="built_in">begin</span>() + i + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%05d %d &quot;</span>, node[i].ads, node[i].data);</span><br><span class="line">        <span class="keyword">if</span> (i != n - <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%05d\n&quot;</span>, node[i + <span class="number">1</span>].ads);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vector </tag>
            
            <tag> 结构体 </tag>
            
            <tag> 指针 </tag>
            
            <tag> map </tag>
            
            <tag> 链表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯 幸运数</title>
      <link href="/lqb33/"/>
      <url>/lqb33/</url>
      
        <content type="html"><![CDATA[<h1 id="蓝桥杯-幸运数"><a class="markdownIt-Anchor" href="#蓝桥杯-幸运数"></a> 蓝桥杯 幸运数</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>幸运数是波兰数学家乌拉姆命名的。它采用与生成素数类似的“筛法”生成。</p><span id="more"></span><p>首先从1开始写出自然数1,2,3,4,5,6,…<br />1 就是第一个幸运数。<br />我们从2这个数开始。把所有序号能被2整除的项删除，变为：<br />1 _ 3 _ 5 _ 7 _ 9 …<br />把它们缩紧，重新记序，为：<br />1 3 5 7 9 … 。这时，3为第2个幸运数，然后把所有能被3整除的序号位置的数删去。注意，是序号位置，不是那个数本身能否被3整除!! 删除的应该是5，11, 17, …<br />此时7为第3个幸运数，然后再删去序号位置能被7整除的(19,39,…)<br />最后剩下的序列类似：<br />1, 3, 7, 9, 13, 15, 21, 25, 31, 33, 37, 43, 49, 51, 63, 67, 69, 73, 75, 79, …</p><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>输入两个正整数m n, 用空格分开 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>m</mi><mo>&lt;</mo><mi>n</mi><mo>&lt;</mo><mn>1000</mn><mo>∗</mo><mn>1000</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(m &lt; n &lt; 1000*1000)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">)</span></span></span></span></p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>程序输出 位于m和n之间的幸运数的个数（不包含m和n）。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 20</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><h2 id="输入样例2"><a class="markdownIt-Anchor" href="#输入样例2"></a> 输入样例2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">30 69</span><br></pre></td></tr></table></figure><h2 id="输出样例2"><a class="markdownIt-Anchor" href="#输出样例2"></a> 输出样例2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>观察规律题，按照题目的规律来：一步一步删掉筛选的数据，最后统计筛选出来的list剩下多少个。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            list.add(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">        Main.a(list, list.get(<span class="number">2</span>), <span class="number">2</span>);</span><br><span class="line">        Main.b(list);</span><br><span class="line">        <span class="keyword">while</span> (Main.a(list, list.get(j), j)) &#123;</span><br><span class="line">            Main.b(list);</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">item</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (Integer integer : list) &#123;</span><br><span class="line">            <span class="keyword">if</span> (integer.compareTo(m) &gt; <span class="number">0</span> &amp;&amp; integer.compareTo(n) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                item++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(item);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">a</span><span class="params">(List&lt;Integer&gt; list, <span class="type">int</span> k, <span class="type">int</span> j)</span> &#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">item</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> j; i &lt; list.size(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i % k == <span class="number">0</span>) &#123;</span><br><span class="line">                list.set(i, <span class="number">0</span>);</span><br><span class="line">                item = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> item;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">b</span><span class="params">(List&lt;Integer&gt; list)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i != <span class="number">0</span> &amp;&amp; list.get(i) == <span class="number">0</span>) &#123;</span><br><span class="line">                list.remove(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
          <category> 历届试题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1024 科学计数法</title>
      <link href="/pat1024/"/>
      <url>/pat1024/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1024-科学计数法"><a class="markdownIt-Anchor" href="#pat1024-科学计数法"></a> PAT1024 科学计数法</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>科学计数法是科学家用来表示很大或很小的数字的一种方便的方法，其满足正则表达式<code>[+-][1-9].[0-9]+E[+-][0-9]+</code>，即数字的整数部分只有 1 位，小数部分至少有 1 位，该数字及其指数部分的正负号即使对正数也必定明确给出。</p><span id="more"></span><p>现以科学计数法的格式给出实数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>，请编写程序按普通数字表示法输出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>，并保证所有有效位都被保留。</p><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>每个输入包含 1 个测试用例，即一个以科学计数法表示的实数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>。该数字的存储长度不超过 9999 字节，且其指数的绝对值不超过 9999。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>对每个测试用例，在一行中按普通数字表示法输出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>，并保证所有有效位都被保留，包括末尾的0。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+1.23400E-03</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0.00123400</span><br></pre></td></tr></table></figure><h2 id="输入样例2"><a class="markdownIt-Anchor" href="#输入样例2"></a> 输入样例2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1.2E+10</span><br></pre></td></tr></table></figure><h2 id="输出样例2"><a class="markdownIt-Anchor" href="#输出样例2"></a> 输出样例2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-12000000000</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>接收字符串，分别提取整数部分<code>a</code>, 小数部分<code>b</code>, 指数部分符号<code>lnflag</code>, 指数部分数<code>c</code>。<br />提取完后根据小数点移动进行前后补0操作。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pat1024</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string str;</span><br><span class="line">    <span class="type">bool</span> lnflag;</span><br><span class="line">    <span class="type">int</span> a, e;</span><br><span class="line">    cin &gt;&gt; str;</span><br><span class="line">    a = str[<span class="number">1</span>] - <span class="number">48</span>;</span><br><span class="line">    e = str.<span class="built_in">find</span>(<span class="string">&quot;E&quot;</span>);</span><br><span class="line">    <span class="function">string <span class="title">b</span><span class="params">(str, <span class="number">3</span>, e - <span class="number">3</span>)</span></span>;</span><br><span class="line">    lnflag = (str[e + <span class="number">1</span>] == <span class="string">&#x27;-&#x27;</span>) ? <span class="literal">false</span> : <span class="literal">true</span>;</span><br><span class="line">    <span class="function">string <span class="title">cc</span><span class="params">(str, e + <span class="number">2</span>, str.length())</span></span>;</span><br><span class="line">    <span class="type">int</span> c = <span class="built_in">atoi</span>(cc.<span class="built_in">c_str</span>());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (str[<span class="number">0</span>] == <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;-&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(lnflag)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (c &gt; b.<span class="built_in">length</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; a &lt;&lt; b;</span><br><span class="line">            <span class="keyword">while</span>(c != <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;0&quot;</span>;</span><br><span class="line">                c--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (c == b.<span class="built_in">length</span>())</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; a &lt;&lt; b;</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            string <span class="built_in">t</span>(b, <span class="number">0</span>, c);</span><br><span class="line">            <span class="function">string <span class="title">tt</span><span class="params">(b, c, b.length() - <span class="number">1</span>)</span></span>;</span><br><span class="line">            cout &lt;&lt; a &lt;&lt; t &lt;&lt; <span class="string">&quot;.&quot;</span> &lt;&lt; tt;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;0.&quot;</span>;</span><br><span class="line">        <span class="keyword">while</span>(c != <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;0&quot;</span>;</span><br><span class="line">            c--;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; a &lt;&lt; b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> 标志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯 字符串变换</title>
      <link href="/lqb379/"/>
      <url>/lqb379/</url>
      
        <content type="html"><![CDATA[<h1 id="蓝桥杯-字符串变换"><a class="markdownIt-Anchor" href="#蓝桥杯-字符串变换"></a> 蓝桥杯 字符串变换</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>相信经过这个学期的编程训练，大家对于字符串的操作已经掌握的相当熟练了。今天，徐老师想测试一下大家对于字符串操作的掌握情况。徐老师自己定义了1,2,3,4,5这5个参数分别指代不同的5种字符串操作，你需要根据传入的参数，按照徐老师的规定，对输入字符串进行格式转化。</p><span id="more"></span><p>徐老师指定的操作如下：</p><ol><li>表示全部转化为大写字母输出，如abC 变成 ABC</li><li>表示全部转换为小写字母输出，如abC变成abc</li><li>表示将字符串整个逆序输出，如 abc 变成 cba</li><li>表示将字符串中对应的大写字母转换为小写字母，而将其中的小写字母转化为大写字母输出，如 abC变成ABc</li><li>表示将全部转换为小写字母，并将其中所有的连续子串转换为对应的缩写形式输出，比如abcD 转换为a-d，其次，-至少代表1个字母，既如果是ab，则不需要转换为缩写形式。</li></ol><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>一共一行，分别是指代对应操作的数字和字符串，两者以空格分隔，字符串全部由英文字母组成。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>输出根据上述规则转换后对应的字符串。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 ABcdEE</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a-ee</span><br></pre></td></tr></table></figure><h2 id="数据规模和约定"><a class="markdownIt-Anchor" href="#数据规模和约定"></a> 数据规模和约定</h2><p>输入字符串长度最长为200。</p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>一个switch()控制功能，1,2,3,4简单。5的话，全部转换为小写后，遍历字符串的字符，判断是否后边的字符-前面的字符=1，是的话，<code>flag=true</code>表示当前的字母是连续的,如果不是的话，<code>flag=false</code>并打印范围。直到遍历完。<br />这里隐藏了一个特殊条件：当扫描到最后一个字母时，连续模式还在继续，于是无法结束。比如<code>aabcd</code>,所以判断一下当遍历到最后一个字符时，如果<code>flag=true</code>就强制停止，并输出范围。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> s.nextInt();</span><br><span class="line">        <span class="type">String</span> <span class="variable">b</span> <span class="operator">=</span> s.nextLine();</span><br><span class="line">        b = b.substring(<span class="number">1</span>);</span><br><span class="line">        s.close();</span><br><span class="line">        <span class="keyword">switch</span> (a) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            System.out.println(b.toUpperCase());</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            System.out.println(b.toLowerCase());</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            System.out.println(<span class="keyword">new</span> <span class="title class_">StringBuffer</span>(b).reverse());</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="type">char</span>[] c = b.toCharArray();</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">char</span> w:c)&#123;</span><br><span class="line">                <span class="keyword">if</span>(w&gt;<span class="number">64</span>&amp;&amp;w&lt;<span class="number">91</span>)&#123;</span><br><span class="line">                    w+=<span class="number">32</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    w-=<span class="number">32</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.print(w);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            b = b.toLowerCase();</span><br><span class="line">            <span class="type">char</span>[] d = b.toCharArray();</span><br><span class="line">            <span class="type">char</span> <span class="variable">last</span> <span class="operator">=</span> d[<span class="number">0</span>];</span><br><span class="line">            <span class="type">Boolean</span> <span class="variable">isS</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;d.length;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i==d.length-<span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(isS)&#123;</span><br><span class="line">                        System.out.print(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">                        <span class="keyword">if</span>(d[d.length-<span class="number">1</span>]-d[d.length-<span class="number">2</span>]!=<span class="number">1</span>)&#123;</span><br><span class="line">                            System.out.print(last);</span><br><span class="line">                        &#125;</span><br><span class="line">                        System.out.print(d[i]);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                        System.out.print(d[i]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(d[i]-last==<span class="number">1</span>)&#123;</span><br><span class="line">                    isS = <span class="literal">true</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(isS)&#123;</span><br><span class="line">                    System.out.print(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">                    System.out.print(last);</span><br><span class="line">                    System.out.print(d[i]);</span><br><span class="line">                    isS = <span class="literal">false</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(d[i]);</span><br><span class="line">                &#125;</span><br><span class="line">                last = d[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
          <category> 算法训练 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯 特殊回文数</title>
      <link href="/lqb48/"/>
      <url>/lqb48/</url>
      
        <content type="html"><![CDATA[<h1 id="蓝桥杯-特殊回文数"><a class="markdownIt-Anchor" href="#蓝桥杯-特殊回文数"></a> 蓝桥杯 特殊回文数</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>123321是一个非常特殊的数，它从左边读和从右边读是一样的。输入一个正整数n，编程求所有这样的五位和六位十进制数，满足各位数字之和等于n。</p><span id="more"></span><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>输入一行，包含一个正整数n。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>按从小到大的顺序输出满足条件的整数，每个整数占一行。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">52</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">899998</span><br><span class="line">989989</span><br><span class="line">998899</span><br></pre></td></tr></table></figure><h2 id="数据规模和约定"><a class="markdownIt-Anchor" href="#数据规模和约定"></a> 数据规模和约定</h2><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>&lt;</mo><mo>=</mo><mi>n</mi><mo>&lt;</mo><mo>=</mo><mn>54</mn></mrow><annotation encoding="application/x-tex">1&lt;=n&lt;=54</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">4</span></span></span></span>。</p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>水题，暴搜满足两个条件：各位数之和为输入数字。五位或者六位数字。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;Integer&gt; arrayList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt;= <span class="number">9</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">0</span>; l &lt;= <span class="number">9</span>; l++) &#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">item</span> <span class="operator">=</span> (<span class="type">int</span>) (i * Math.pow(<span class="number">10</span>, <span class="number">4</span>) + j * Math.pow(<span class="number">10</span>, <span class="number">3</span>) + l * Math.pow(<span class="number">10</span>, <span class="number">2</span>)</span><br><span class="line">                            + j * Math.pow(<span class="number">10</span>, <span class="number">1</span>) + i * Math.pow(<span class="number">10</span>, <span class="number">0</span>));</span><br><span class="line">                    <span class="keyword">if</span> (n == i + j + l + i + j) &#123;</span><br><span class="line">                        arrayList.add(item);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt;= <span class="number">9</span>; k++) &#123;</span><br><span class="line">                    <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> i + j + k;</span><br><span class="line">                    <span class="keyword">if</span> (n == <span class="number">2</span> * sum) &#123;</span><br><span class="line">                        <span class="type">int</span> <span class="variable">item</span> <span class="operator">=</span> (<span class="type">int</span>) (i * Math.pow(<span class="number">10</span>, <span class="number">5</span>) + j * Math.pow(<span class="number">10</span>, <span class="number">4</span>) + k * Math.pow(<span class="number">10</span>, <span class="number">3</span>)</span><br><span class="line">                                + k * Math.pow(<span class="number">10</span>, <span class="number">2</span>) + j * Math.pow(<span class="number">10</span>, <span class="number">1</span>) + i * Math.pow(<span class="number">10</span>, <span class="number">0</span>));</span><br><span class="line">                        arrayList.add(item);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        arrayList.sort(<span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">for</span> (Integer integer : arrayList) &#123;</span><br><span class="line">            System.out.println(integer);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 蓝桥杯 </category>
          
          <category> 基础练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴搜 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1019 数字黑洞</title>
      <link href="/pat1019/"/>
      <url>/pat1019/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1019-数字黑洞"><a class="markdownIt-Anchor" href="#pat1019-数字黑洞"></a> PAT1019 数字黑洞</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>给定任一个各位数字不完全相同的 4 位正整数，如果我们先把 4 个数字按非递增排序，再按非递减排序，然后用第 1 个数字减第 2 个数字，将得到一个新的数字。一直重复这样做，我们很快会停在有“数字黑洞”之称的<code>6174</code>，这个神奇的数字也叫 Kaprekar 常数。</p><span id="more"></span><p>例如，我们从<code>6767</code>开始，将得到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">7766 - 6677 = 1089</span><br><span class="line">9810 - 0189 = 9621</span><br><span class="line">9621 - 1269 = 8352</span><br><span class="line">8532 - 2358 = 6174</span><br><span class="line">7641 - 1467 = 6174</span><br><span class="line">... ...</span><br></pre></td></tr></table></figure><p>现给定任意 4 位正整数，请编写程序演示到达黑洞的过程。</p><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>输入给出一个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mn>0</mn><mn>4</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0,10^4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 区间内的正整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>的 4 位数字全相等，则在一行内输出<code>N - N = 0000</code>；否则将计算的每一步在一行内输出，直到<code>6174</code>作为差出现，输出格式见样例。注意每个数字按 4 位数格式输出。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6767</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">7766 - 6677 = 1089</span><br><span class="line">9810 - 0189 = 9621</span><br><span class="line">9621 - 1269 = 8352</span><br><span class="line">8532 - 2358 = 6174</span><br></pre></td></tr></table></figure><h2 id="输入样例2"><a class="markdownIt-Anchor" href="#输入样例2"></a> 输入样例2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2222</span><br></pre></td></tr></table></figure><h2 id="输出样例2"><a class="markdownIt-Anchor" href="#输出样例2"></a> 输出样例2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2222 - 2222 = 0000</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>题目规则给了：将一个4位数拆成4个数字，排序，大的减小的，继续重复直到6174。<br />两个特殊情况题目也说明了，处理一下即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pat1019</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">4</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">atoit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a[<span class="number">0</span>] * <span class="number">1000</span> + a[<span class="number">1</span>] * <span class="number">100</span> + a[<span class="number">2</span>] * <span class="number">10</span> + a[<span class="number">3</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">itoat</span><span class="params">(<span class="type">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    a[<span class="number">0</span>] = t / <span class="number">1000</span>;</span><br><span class="line">    t %= <span class="number">1000</span>;</span><br><span class="line">    a[<span class="number">1</span>] = t / <span class="number">100</span>;</span><br><span class="line">    t %= <span class="number">100</span>;</span><br><span class="line">    a[<span class="number">2</span>] = t / <span class="number">10</span>;</span><br><span class="line">    t %= <span class="number">10</span>;</span><br><span class="line">    a[<span class="number">3</span>] = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">bmp</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a &gt; b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">bmpr</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a &lt; b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num);</span><br><span class="line">    <span class="keyword">if</span> (num % <span class="number">1111</span> == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%04d - %04d = 0000\n&quot;</span>, num, num);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(num == <span class="number">6174</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;7641 - 1467 = 6174\n&quot;</span>, num, num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(num != <span class="number">6174</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">itoat</span>(num);</span><br><span class="line">        <span class="built_in">sort</span>(a, a + <span class="number">4</span>, bmp);</span><br><span class="line">        <span class="type">int</span> big = <span class="built_in">atoit</span>();</span><br><span class="line">        <span class="built_in">sort</span>(a, a + <span class="number">4</span>, bmpr);</span><br><span class="line">        <span class="type">int</span> sma = <span class="built_in">atoit</span>();</span><br><span class="line">        num = big - sma;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%04d - %04d = %04d\n&quot;</span>, big, sma, num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 模拟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1021 个位数统计</title>
      <link href="/pat1021/"/>
      <url>/pat1021/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1021-个位数统计"><a class="markdownIt-Anchor" href="#pat1021-个位数统计"></a> PAT1021 个位数统计</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>给定一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>位整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mo>=</mo><msub><mi>d</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub><mn>1</mn><msup><mn>0</mn><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>d</mi><mn>1</mn></msub><mn>1</mn><msup><mn>0</mn><mn>1</mn></msup><mo>+</mo><msub><mi>d</mi><mn>0</mn></msub><mo stretchy="false">(</mo><mn>0</mn><mo>≤</mo><msub><mi>d</mi><mi>i</mi></msub><mo>≤</mo><mn>9</mn><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>d</mi><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>&gt;</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N=d_{k-1}10^{k-1}+...+d_110^1+d_0(0≤d_i≤9,i=0,...,k-1,d_{k-1}&gt;0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0574389999999998em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.964108em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord">9</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span>,请编写程序统计每种不同的个位数字出现的次数。例如：给定<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>=100311，则有2个0，3个1，和1个3。</p><span id="more"></span><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>每个输入包含 1 个测试用例，即一个不超过 1000 位的正整数<code>N</code>。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>对<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>中每一种不同的个位数字，以<code>D:M</code>的格式在一行中输出该位数字<code>D</code>及其在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>中出现的次数<code>M</code>。要求按<code>D</code>的升序输出。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">100311</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0:2</span><br><span class="line">1:3</span><br><span class="line">3:1</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>以字符串接收数字，遍历，统计，因为0-9已经默认排好序了不用再排了。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pat1021</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> a[<span class="number">1000</span>], b[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;a);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        b[a[i] - <span class="number">48</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b[i] != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d:%d\n&quot;</span>, i, b[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 统计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1020 月饼</title>
      <link href="/pat1020/"/>
      <url>/pat1020/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1020-月饼"><a class="markdownIt-Anchor" href="#pat1020-月饼"></a> PAT1020 月饼</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>月饼是中国人在中秋佳节时吃的一种传统食品，不同地区有许多不同风味的月饼。现给定所有种类月饼的库存量、总售价、以及市场的最大需求量，请你计算可以获得的最大收益是多少。</p><span id="more"></span><p>注意：销售时允许取出一部分库存。样例给出的情形是这样的：假如我们有 3 种月饼，其库存量分别为 18、15、10 万吨，总售价分别为 75、72、45 亿元。如果市场的最大需求量只有 20 万吨，那么我们最大收益策略应该是卖出全部 15 万吨第 2 种月饼、以及 5 万吨第 3 种月饼，获得 72 + 45/2 = 94.5（亿元）。</p><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>每个输入包含一个测试用例。每个测试用例先给出一个不超过 1000 的正整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>表示月饼的种类数、以及不超过 500（以万吨为单位）的正整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>表示市场最大需求量。随后一行给出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>个正数表示每种月饼的库存量（以万吨为单位）；最后一行给出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>个正数表示每种月饼的总售价（以亿元为单位）。数字间以空格分隔。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>对每组测试用例，在一行中输出最大收益，以亿元为单位并精确到小数点后 2 位。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3 20</span><br><span class="line">18 15 10</span><br><span class="line">75 72 45</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">94.50</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>月饼最好是用结构体(方便排序)，分别输入数据后，优先计算利益最高的月饼，库存不够就依次往后排。<br />输出格式要会。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pat1020</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">double</span> weight;</span><br><span class="line">    <span class="type">double</span> money;</span><br><span class="line">    <span class="type">double</span> per;</span><br><span class="line">&#125;a;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">bmp</span><span class="params">(a x, a y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.per &gt; y.per;</span><br><span class="line">&#125;</span><br><span class="line">vector&lt;a&gt; arr;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> type, limit;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;type, &amp;limit);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; type; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a t;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;t.weight);</span><br><span class="line">        arr.<span class="built_in">push_back</span>(t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; type; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a t = arr[i];</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;t.money);</span><br><span class="line">        t.per = t.money / t.weight;</span><br><span class="line">        arr[i] = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(arr.<span class="built_in">begin</span>(), arr.<span class="built_in">end</span>(), bmp);</span><br><span class="line">    <span class="type">double</span> result = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; type; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (limit &gt;= arr[i].weight)</span><br><span class="line">        &#123;</span><br><span class="line">            limit -= arr[i].weight;</span><br><span class="line">            result += arr[i].money;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            result += arr[i].per * limit;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%0.2lf\n&quot;</span>, result);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%0.2lf\n&quot;</span>, result);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
            <tag> 输出格式 </tag>
            
            <tag> 结构体 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1022 D进制的A+B</title>
      <link href="/pat1022/"/>
      <url>/pat1022/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1022-d进制的ab"><a class="markdownIt-Anchor" href="#pat1022-d进制的ab"></a> PAT1022 D进制的A+B</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>输入两个非负 10 进制整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mo stretchy="false">(</mo><mo>≤</mo><msup><mn>2</mn><mn>30</mn></msup><mi mathvariant="normal">−</mi><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">B (≤2^{30}−1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，输出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>+</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A+B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi><mo stretchy="false">(</mo><mn>1</mn><mo>&lt;</mo><mi>D</mi><mo>≤</mo><mn>10</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">D(1&lt;D≤10)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mclose">)</span></span></span></span>进制数。</p><span id="more"></span><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>输入在一行中依次给出 3 个整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>输出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>+</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A+B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span></span></span></span>进制数。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123 456 8</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1103</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>算出加法后，进制数装换。用除法模拟手算。余数因为倒过来，所以可以用栈，数组也行。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pat1022</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b, d;</span><br><span class="line">    stack&lt;<span class="type">int</span>&gt; s;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b, &amp;d);</span><br><span class="line">    a += b;</span><br><span class="line">    <span class="keyword">if</span> (!a)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> yu = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (a)</span><br><span class="line">    &#123;</span><br><span class="line">        yu = a % d;</span><br><span class="line">        a /= d;</span><br><span class="line">        s.<span class="built_in">push</span>(yu);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; !s.<span class="built_in">empty</span>(); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, s.<span class="built_in">top</span>());</span><br><span class="line">        s.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 栈 </tag>
            
            <tag> 进制装换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1023 组个最小数</title>
      <link href="/pat1023/"/>
      <url>/pat1023/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1023-组个最小数"><a class="markdownIt-Anchor" href="#pat1023-组个最小数"></a> PAT1023 组个最小数</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>给定数字 0-9 各若干个。你可以以任意顺序排列这些数字，但必须全部使用。目标是使得最后得到的数尽可能小（注意 0 不能做首位）。例如：给定两个 0，两个 1，三个 5，一个 8，我们得到的最小的数就是 10015558。</p><span id="more"></span><p>现给定数字，请编写程序输出能够组成的最小的数。</p><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>输入在一行中给出 10 个非负整数，顺序表示我们拥有数字 0、数字 1、……数字 9 的个数。整数间用一个空格分隔。10 个数字的总个数不超过 50，且至少拥有 1 个非 0 的数字。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>在一行中输出能够组成的最小的数。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 2 0 0 0 3 0 0 1 0</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10015558</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>因为0不能为第一位，所以先用一个变量存起来。设一个标志，然后变量后面的数，如果数量不是0，就输出相应数量的数字，在第一个输出后判断一下标志，合适的地方插入<code>0</code>。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pat1023</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line">    <span class="type">bool</span> first = <span class="literal">true</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> tmp;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;tmp);</span><br><span class="line">        <span class="keyword">if</span> (tmp)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; tmp; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span> (first)</span><br><span class="line">                &#123;</span><br><span class="line">                    first = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">if</span> (a)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; a; j++)</span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 标志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1015 德才论</title>
      <link href="/pat1015/"/>
      <url>/pat1015/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1015-德才论"><a class="markdownIt-Anchor" href="#pat1015-德才论"></a> PAT1015 德才论</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>宋代史学家司马光在《资治通鉴》中有一段著名的“德才论”：“是故才德全尽谓之圣人，才德兼亡谓之愚人，德胜才谓之君子，才胜德谓之小人。凡取人之术，苟不得圣人，君子而与之，与其得小人，不若得愚人。”</p><span id="more"></span><p>现给出一批考生的德才分数，请根据司马光的理论给出录取排名。</p><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>输入第一行给出 3 个正整数，分别为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi mathvariant="normal">（</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">N（≤10^5）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord cjk_fallback">（</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">）</span></span></span></span>，即考生总数；<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi mathvariant="normal">（</mi><mo>≥</mo><mn>60</mn><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">L（≥60）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">L</span><span class="mord cjk_fallback">（</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span><span class="mord">0</span><span class="mord cjk_fallback">）</span></span></span></span>，为录取最低分数线，即德分和才分均不低于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span></span></span></span>的考生才有资格被考虑录取；<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi><mi mathvariant="normal">（</mi><mo>&lt;</mo><mn>100</mn><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">H（&lt;100）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mord cjk_fallback">（</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord cjk_fallback">）</span></span></span></span>，为优先录取线——德分和才分均不低于此线的被定义为“才德全尽”，此类考生按德才总分从高到低排序；才分不到但德分到线的一类考生属于“德胜才”，也按总分排序，但排在第一类考生之后；德才分均低于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>H</mi></mrow><annotation encoding="application/x-tex">H</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span></span></span></span>，但是德分不低于才分的考生属于“才德兼亡”但尚有“德胜才”者，按总分排序，但排在第二类考生之后；其他达到最低线<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span></span></span></span>的考生也按总分排序，但排在第三类考生之后。<br />随后<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>行，每行给出一位考生的信息，包括：<code>准考证号</code> <code>德分</code> <code>才分</code>，其中<code>准考证号</code>为 8 位整数，德才分为区间<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>100</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0, 100]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>内的整数。数字间以空格分隔。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>输出第一行首先给出达到最低分数线的考生人数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>，随后<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>行，每行按照输入格式输出一位考生的信息，考生按输入中说明的规则从高到低排序。当某类考生中有多人总分相同时，按其德分降序排列；若德分也并列，则按准考证号的升序输出。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">14 60 80</span><br><span class="line">10000001 64 90</span><br><span class="line">10000002 90 60</span><br><span class="line">10000011 85 80</span><br><span class="line">10000003 85 80</span><br><span class="line">10000004 80 85</span><br><span class="line">10000005 82 77</span><br><span class="line">10000006 83 76</span><br><span class="line">10000007 90 78</span><br><span class="line">10000008 75 79</span><br><span class="line">10000009 59 90</span><br><span class="line">10000010 88 45</span><br><span class="line">10000012 80 100</span><br><span class="line">10000013 90 99</span><br><span class="line">10000014 66 60</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">12</span><br><span class="line">10000013 90 99</span><br><span class="line">10000012 80 100</span><br><span class="line">10000003 85 80</span><br><span class="line">10000011 85 80</span><br><span class="line">10000004 80 85</span><br><span class="line">10000007 90 78</span><br><span class="line">10000006 83 76</span><br><span class="line">10000005 82 77</span><br><span class="line">10000002 90 60</span><br><span class="line">10000014 66 60</span><br><span class="line">10000008 75 79</span><br><span class="line">10000001 64 90</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>最好是用一个结构体数组或者是类数组来保存学生的成绩信息，然后用<code>sort()</code>来排序，处理好分类规则应该不难。主要是写好cmp函数。<br />结构体的使用和vector的使用不熟练的话就很麻烦。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> id;</span><br><span class="line">    <span class="type">int</span> de;</span><br><span class="line">    <span class="type">int</span> cai;</span><br><span class="line">    <span class="type">int</span> group;</span><br><span class="line">&#125;student;</span><br><span class="line">vector&lt;student&gt;s;</span><br><span class="line"><span class="type">int</span> n,a,b;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">cmp</span><span class="params">(student s1,student s2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s1.group&gt;s2.group) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (s1.group&lt;s2.group) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s1.de+s1.cai == s2.de+s2.cai)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s1.de == s2.de)</span><br><span class="line">            <span class="keyword">return</span> s1.id&lt;s2.id;</span><br><span class="line">            <span class="keyword">return</span> s1.de&gt;s2.de;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s1.de+s1.cai &gt; s2.de+s2.cai;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span> ; i&lt;n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        student st;</span><br><span class="line">        cin &gt;&gt; st.id &gt;&gt; st.de &gt;&gt; st.cai;</span><br><span class="line">        <span class="keyword">if</span>(st.cai&lt;a || st.de&lt;a) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(st.de&gt;=b &amp;&amp; st.cai&gt;=b) st.group=<span class="number">4</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(st.de&gt;=b) st.group=<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(st.de&lt;b &amp;&amp; st.cai&lt;b &amp;&amp; st.de&gt;=st.cai) st.group=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span> st.group=<span class="number">1</span>;</span><br><span class="line">        s.<span class="built_in">push_back</span>(st);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(s.<span class="built_in">begin</span>(),s.<span class="built_in">end</span>(),cmp);</span><br><span class="line">    n = s.<span class="built_in">size</span>();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span> ; i&lt;n ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; s[i].id &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; s[i].de &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; s[i].cai &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
            <tag> vector </tag>
            
            <tag> 结构体 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1016 部分A+B</title>
      <link href="/pat1016/"/>
      <url>/pat1016/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1016-部分ab"><a class="markdownIt-Anchor" href="#pat1016-部分ab"></a> PAT1016 部分A+B</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>正整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>的“<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">D_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>（为 1 位整数）部分”定义为由<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>中所有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">D_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>组成的新整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">P_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。例如：给定<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>=</mo><mn>3862767</mn></mrow><annotation encoding="application/x-tex">A=3862767</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span><span class="mord">8</span><span class="mord">6</span><span class="mord">2</span><span class="mord">7</span><span class="mord">6</span><span class="mord">7</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">D_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>=6，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>的“6部分”<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">P_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是 66，因为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>中有2个6。</p><span id="more"></span><p>现给定<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">D_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">D_B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，请编写程序计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>A</mi></msub><mo>+</mo><msub><mi>P</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">P_A+P_B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>输入在一行中依次给出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">D_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">D_B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，中间以空格分隔，其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn><mo>&lt;</mo><mi>A</mi></mrow><annotation encoding="application/x-tex">0&lt;A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68354em;vertical-align:-0.0391em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi><mo>&lt;</mo><mn>1</mn><msup><mn>0</mn><mn>10</mn></msup></mrow><annotation encoding="application/x-tex">B&lt;10^{10}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span></span>。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>在一行中输出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">P_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>+<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">P_B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的值。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3862767 6 13530293 3</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">399</span><br></pre></td></tr></table></figure><h2 id="输入样例2"><a class="markdownIt-Anchor" href="#输入样例2"></a> 输入样例2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3862767 1 13530293 8</span><br></pre></td></tr></table></figure><h2 id="输出样例2"><a class="markdownIt-Anchor" href="#输出样例2"></a> 输出样例2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>遍历数字(最好用字符串或字符数组来保存)，每找到一个加一位，直到遍历完后相加。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pat1016</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> a[<span class="number">10</span>], c[<span class="number">10</span>];</span><br><span class="line">    <span class="type">int</span> b, d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s %d %s %d&quot;</span>, &amp;a, &amp;b, &amp;c, &amp;d);</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> bb = <span class="number">0</span>, dd = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] - <span class="number">48</span> == b)</span><br><span class="line">        &#123;</span><br><span class="line">            bb = <span class="number">10</span> * bb + b;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(c); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (c[i] - <span class="number">48</span> == d)</span><br><span class="line">        &#123;</span><br><span class="line">            dd = <span class="number">10</span> * dd + d;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, bb + dd);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> 数学计算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1017 A除以B</title>
      <link href="/pat1017/"/>
      <url>/pat1017/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1017-a除以b"><a class="markdownIt-Anchor" href="#pat1017-a除以b"></a> PAT1017 A除以B</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>本题要求计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi mathvariant="normal">/</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">A/B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>是不超过 1000 位的正整数，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>是 1 位正整数。你需要输出商数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">Q</span></span></span></span>和余数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span>，使得<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>=</mo><mi>B</mi><mo>×</mo><mi>Q</mi><mo>+</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">A=B×Q+R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">Q</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span>成立。</p><span id="more"></span><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>输入在一行中依次给出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>，中间以 1 空格分隔。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>在一行中依次输出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>Q</mi></mrow><annotation encoding="application/x-tex">Q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">Q</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span>，中间以 1 空格分隔。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">123456789050987654321 7</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">17636684150141093474 3</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>被除数很大，所以用字符串存好一点，除数只有一位用<code>int</code>,然后模拟手算除法：对每一位数都与除数相除，余数和下一位数合起来进行下一次除，直到最后一位。用递归思路比较清晰。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pat1017</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="type">char</span> a[<span class="number">1000</span>];</span><br><span class="line"><span class="type">short</span> b;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">chu</span><span class="params">(<span class="type">int</span> yu, <span class="type">int</span> wei)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="built_in">strlen</span>(a) - wei))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> yu;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, (<span class="number">10</span> * yu + a[wei] - <span class="number">48</span>) / b);</span><br><span class="line">    <span class="type">int</span> t = (<span class="number">10</span> * yu + a[wei] - <span class="number">48</span>) % b;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">chu</span>(t, ++wei);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s %d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strlen</span>(a) == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, (a[<span class="number">0</span>] - <span class="number">48</span>) / b, (a[<span class="number">0</span>] - <span class="number">48</span>) % b);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a[<span class="number">0</span>] - <span class="number">48</span> &gt;= b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>,<span class="built_in">chu</span>(<span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, <span class="built_in">chu</span>(a[<span class="number">0</span>] - <span class="number">48</span>, <span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 递归 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1018 锤子剪刀布</title>
      <link href="/pat1018/"/>
      <url>/pat1018/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1018-锤子剪刀布"><a class="markdownIt-Anchor" href="#pat1018-锤子剪刀布"></a> PAT1018 锤子剪刀布</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>大家应该都会玩“锤子剪刀布”的游戏：两人同时给出手势，胜负规则如图所示：</p><span id="more"></span><p><img src="1.jpg" alt="规则" /><br />现给出两人的交锋记录，请统计双方的胜、平、负次数，并且给出双方分别出什么手势的胜算最大。</p><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>输入第 1 行给出正整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi mathvariant="normal">（</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">N（≤10^5）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord cjk_fallback">（</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">）</span></span></span></span>，即双方交锋的次数。随后<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>行，每行给出一次交锋的信息，即甲、乙双方同时给出的的手势。<code>C</code>代表“锤子”、<code>J</code>代表“剪刀”、<code>B</code>代表“布”，第 1 个字母代表甲方，第 2 个代表乙方，中间有 1 个空格。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>输出第 1、2 行分别给出甲、乙的胜、平、负次数，数字间以 1 个空格分隔。第 3 行给出两个字母，分别代表甲、乙获胜次数最多的手势，中间有 1 个空格。如果解不唯一，则输出按字母序最小的解。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">C J</span><br><span class="line">J B</span><br><span class="line">C B</span><br><span class="line">B B</span><br><span class="line">B C</span><br><span class="line">C C</span><br><span class="line">C B</span><br><span class="line">J B</span><br><span class="line">B C</span><br><span class="line">J J</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5 3 2</span><br><span class="line">2 3 5</span><br><span class="line">B B</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>分别统计甲获得胜利，平局，失败的局数。然后同时设置一个大小为6的数组，代表甲乙分别出剪刀锤子布胜利的次数，统计完后去最大值输出。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pat1018</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">char</span> <span class="title">cmp</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> max = a &gt; b ? a : b;</span><br><span class="line">    max = max &gt; c ? max : c;</span><br><span class="line">    <span class="keyword">if</span>(max == c) <span class="keyword">return</span> <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(max == a) <span class="keyword">return</span> <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;J&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> times, js = <span class="number">0</span>, jp = <span class="number">0</span>, jf = <span class="number">0</span>, a[<span class="number">6</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">char</span> j, y;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;times);</span><br><span class="line">    <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; times; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c %c&quot;</span>, &amp;j, &amp;y);</span><br><span class="line">        <span class="built_in">getchar</span>();</span><br><span class="line">        <span class="keyword">if</span>(j == y) jp++;</span><br><span class="line">        <span class="keyword">if</span>(j == <span class="string">&#x27;J&#x27;</span> &amp;&amp; y == <span class="string">&#x27;C&#x27;</span>)&#123;</span><br><span class="line">            jf++;</span><br><span class="line">            a[<span class="number">3</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(j == <span class="string">&#x27;J&#x27;</span> &amp;&amp; y == <span class="string">&#x27;B&#x27;</span>)&#123;</span><br><span class="line">            js++;</span><br><span class="line">            a[<span class="number">1</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(j == <span class="string">&#x27;B&#x27;</span> &amp;&amp; y == <span class="string">&#x27;J&#x27;</span>)&#123;</span><br><span class="line">            jf++;</span><br><span class="line">            a[<span class="number">4</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(j == <span class="string">&#x27;B&#x27;</span> &amp;&amp; y == <span class="string">&#x27;C&#x27;</span>)&#123;</span><br><span class="line">            js++;</span><br><span class="line">            a[<span class="number">2</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(j == <span class="string">&#x27;C&#x27;</span> &amp;&amp; y == <span class="string">&#x27;B&#x27;</span>)&#123;</span><br><span class="line">            jf++;</span><br><span class="line">            a[<span class="number">5</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(j == <span class="string">&#x27;C&#x27;</span> &amp;&amp; y == <span class="string">&#x27;J&#x27;</span>)&#123;</span><br><span class="line">            js++;</span><br><span class="line">            a[<span class="number">0</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cmp</span>(a[<span class="number">0</span>], a[<span class="number">1</span>], a[<span class="number">2</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>, js, jp, jf);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>, jf, jp, js);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c %c\n&quot;</span>, <span class="built_in">cmp</span>(a[<span class="number">0</span>], a[<span class="number">1</span>], a[<span class="number">2</span>]), <span class="built_in">cmp</span>(a[<span class="number">3</span>], a[<span class="number">4</span>], a[<span class="number">5</span>]));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 统计 </tag>
            
            <tag> 枚举 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>求阴影部分面积</title>
      <link href="/Area/"/>
      <url>/Area/</url>
      
        <content type="html"><![CDATA[<h1 id="求阴影部分面积"><a class="markdownIt-Anchor" href="#求阴影部分面积"></a> 求阴影部分面积</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>求阴影部分面积！<br />求四分之一圆和二分之一圆分割出的阴影面积。</p><span id="more"></span><p><img src="1.png" alt="求面积" /></p><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>使用蒙特·卡罗方法，随机向一个面积/体积内生成点，然后统计面积内的点的数量以求得阴影部分面积。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Area面积问题</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//RAND_MAX = 32767</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LENGTH 0.0001</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DOT 100000000</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//画点</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; DOT; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">double</span> x = (<span class="built_in">rand</span>() % (<span class="type">int</span>)(<span class="number">1</span> / LENGTH)) * LENGTH;</span><br><span class="line">        <span class="type">double</span> y = (<span class="built_in">rand</span>() % (<span class="type">int</span>)(<span class="number">1</span> / LENGTH)) * LENGTH;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//在1/4大圆内的点数</span></span><br><span class="line">        <span class="type">double</span> num = <span class="built_in">sqrt</span>(<span class="built_in">pow</span>(x, <span class="number">2</span>) + <span class="built_in">pow</span>((<span class="number">1</span> - y), <span class="number">2</span>));</span><br><span class="line">        <span class="keyword">if</span> (num &lt;= <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            num = <span class="built_in">sqrt</span>(<span class="built_in">pow</span>((x - <span class="number">0.5</span>), <span class="number">2</span>) + <span class="built_in">pow</span>(y, <span class="number">2</span>));</span><br><span class="line">            <span class="keyword">if</span>(num &lt; <span class="number">0.5</span>)</span><br><span class="line">                count++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; count &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; DOT &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; (<span class="type">double</span>)count / DOT &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//约等于0.266043</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面积 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>探索C++ string类的c_str()和data()的区别</title>
      <link href="/stringStrAndData/"/>
      <url>/stringStrAndData/</url>
      
        <content type="html"><![CDATA[<h1 id="探索c-string类的c_str和data的区别"><a class="markdownIt-Anchor" href="#探索c-string类的c_str和data的区别"></a> 探索C++ string类的c_str()和data()的区别</h1><h2 id="起因"><a class="markdownIt-Anchor" href="#起因"></a> 起因</h2><blockquote><p>在学习C++的时候，学到字符串string时，发现一个问题：string的c_str()和data()的作用极其相似。想知道这两个函数有什么区别？于是，去查询了几个靠谱的答案</p></blockquote><span id="more"></span><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string p = <span class="string">&quot;12345678&quot;</span>;</span><br><span class="line">    <span class="comment">//c_str输出</span></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> * c1 = p.<span class="built_in">c_str</span>();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d--&gt;%s\n&quot;</span>, __LINE__, c1);</span><br><span class="line">    <span class="comment">//data输出</span></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> * c2 = p.<span class="built_in">data</span>();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d--&gt;%s\n&quot;</span>, __LINE__, c2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="百度结果"><a class="markdownIt-Anchor" href="#百度结果"></a> 百度结果</h2><ul><li>网友A：<ol><li><code>data</code>只是返回原始数据序列，没有保证会用<code>traits::eos()</code>，或者说<code>'\0'</code>来作字符串结束。当然，可能多数实现都这样做了。</li><li><code>c_str</code>是标准的做法，返回的<code>char*</code>。一定指向一个合法的用<code>'\0'</code>终止的C兼容的字符串。所以，如果需要C兼容的字符串，<code>c_str</code>是标准的做法，<code>data</code>并不保证所有STL的实现的一致性。</li><li>原来<code>c_str()</code>的流程是：先调用<code>terminate()</code>，然后在返回<code>data()</code>。因此如果你对效率要求比较高，而且你的处理又不一定需要以<code>\0</code>的方式结束，你最好选择<code>data()</code>。但是对于一般的C函数中，需要以<code>const char*</code>为输入参数，你就要使用<code>c_str()</code>函数。</li></ol></li><li>网友B：<ol><li>c_str()   是生成以‘\0’结束的字符串；</li><li>data()    生成的字符串没有‘\0’；</li></ol></li><li>网友C：<ol><li><code>const char* c_str () const;</code> Get C string equivalent. Generates a null-terminated sequence of characters (c-string) with the same content as the string object and returns it as a pointer to an array of characters. A terminating null character is automatically appended.</li><li><code>const char* data() const;</code> Get string data. Returns a pointer to an array of characters with the same content as the string. Notice that no terminating null character is appended (see member c_str for such a functionality).</li><li>像是从某文档查出来的?</li></ol></li><li>吃瓜群众A： 两者效果一样，假如data返回的不带<code>\0</code>的话，那么输出p的时候不会一直输出下去么？(对啊！)</li><li>吃瓜群众B： <code>c_str</code>必然带<code>‘\0’</code>，至于<code>data</code>要不要带<code>'\0'</code>,这个标准没说，可以带也可以不带，就看编译器自己喜欢怎么实现了……</li><li>吃瓜群众C：没说过<code>data()</code>返回的一定不能带<code>\0</code>，只是说不要求带。既然前面已经用过<code>c_str()</code>,<code>data()</code>直接使用已经符合条件的数据也是合情合理的。又或者 string 自己预留了空间，本来后面就全是零也说不定……</li><li>我：那如果是这样子的话，这多出个函数设计出来干嘛用的？c++规范的设计者这么闲的吗？具体到编译器上面是怎么实现的？</li></ul><h2 id="编译环境"><a class="markdownIt-Anchor" href="#编译环境"></a> 编译环境</h2><p>提出问题后，看了下自己的编译环境：</p><ul><li>gcc    : version 8.1.0 (x86_64-posix-seh-rev0, Built by MinGW-W64 project)</li><li>cl.exe :<ol><li>编译器：用于 x86 的 Microsoft ® C/C++ 优化编译器 19.16.27030.1 版</li><li>链接器：Microsoft ® Incremental Linker Version 14.16.27030.1</li></ol></li></ul><h2 id="上菜"><a class="markdownIt-Anchor" href="#上菜"></a> 上菜</h2><p>先去康康 g++ 的表现吧。<br />在程序开头加上<code>getchar()</code>,让我们更容易停下程序下断点。</p><h3 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//assamble</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">getchar</span>();</span><br><span class="line">    string p = <span class="string">&quot;12345678&quot;</span>;</span><br><span class="line">    <span class="comment">//c_str输出</span></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> * c1 = p.<span class="built_in">c_str</span>();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d--&gt;%s\n&quot;</span>, __LINE__, c1);</span><br><span class="line">    <span class="comment">//data输出</span></span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> * c2 = p.<span class="built_in">data</span>();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d--&gt;%s\n&quot;</span>, __LINE__, c2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="编译"><a class="markdownIt-Anchor" href="#编译"></a> 编译</h3><p><img src="1.png" alt="编译" /></p><h3 id="上ida"><a class="markdownIt-Anchor" href="#上ida"></a> 上IDA</h3><p>选择加载64位PC程序后，结果出来了~<br /><img src="2.png" alt="结果" /><br />可以看到程序调用了系统的函数<code>c_str()</code>和<code>data()</code>。<br />可是呢？我们并不知道系统函数做了什么，编译器到底是怎么实现这两个函数的？<br />我们可以动态调试，康康到底执行了那些命令吧~</p><h3 id="上x64dbg"><a class="markdownIt-Anchor" href="#上x64dbg"></a> 上x64dbg</h3><p>程序跑起来后，停在了程序的<code>EntryPoint</code>。此时，代码控制权在系统领空。<br /><img src="3.png" alt="程序入口" /><br />先不管那么多，先跑完一次性断点。<br /><img src="4.png" alt="~" /><br />跑完后，我们可以看到，程序已经跑到了程序领空。然后我们继续一路F8，直到找到我们写的<code>getchar</code>。<br />F8到最后，卡到了一个指令不能往下跑了。<br /><img src="5.png" alt="到getchar()里面了" /><br />因为程序跑到了<code>getchar()</code>里面了，等待用户输入。<br />我们随便输入一些东西后回车继续跑~<br /><img src="6.png" alt="回车后" /><br />我们回车后，程序跳到了<code>syscall</code>后面，接着是<code>ret</code>返回。说明我们即将跳出<code>getchar()</code>了，我们继续跟进F8。<br />F8过程中，可以看到调用了<code>ReadFile()</code>~<br /><img src="7.png" alt="ReadFile()" /><br />继续F8康康。最后，千辛万苦找到了<code>getchar()</code>,同时，我们看到了期待已久的call:<code>c_str()</code>和<code>data()</code>。跟IDA看到的一模一样。<br /><img src="8.png" alt="找到了！" /><br />我们记录一下当前的内存地址：00000000004015FC，然后我们F7进去康康系统到底执行了什么？跳到了0000000000401748。<br /><img src="9.png" alt="接口" /><br />这里看上去，像是一个集中跳转的地方，类似于接口，应用程序通过这里集中调用系统函数或者动态链接库。我们跳过去看看~<br /><img src="10.png" alt="c_str()" /><br />跳到了000000006FC6E550<br />无语了…就执行了一句<code>mov rax,qword ptr ds:[rcx]</code>就返回。继续F7看看下面的data看看。<br /><img src="11.png" alt="data()" /><br />从0000000000401624到0000000000401750到000000006FC6E3B0<br />发现也是同样一句<code>mov rax,qword ptr ds:[rcx]</code>然后就<code>ret</code>。</p><p>这不是都一样的吗？？？</p><h2 id="真相大白"><a class="markdownIt-Anchor" href="#真相大白"></a> 真相大白</h2><p>你个糟老头子坏得很，到头来两个函数还不是一模一样，鬼才信你的两者区别是返回的char[]有没有后面的<code>\0</code>。<br />这个两个函数唯一的作用就是<code>mov rax,qword ptr ds:[rcx]</code>。<br />把在内存数据段偏移地址为rcx所指向的指向四字节整数的指针的值取出来赋值给了寄存器rax。😁而已！<br />而值就是我们string对应的字符串。<br />通俗来讲：就是string里面有个指针指向保存着数据的<code>char[]</code>，默认是隐藏的，函数执行了一个根据指针取出字符串的操作。<br />翻译成C/C++就是<code>&amp;&quot;12345678&quot;</code>。<br /><img src="12.png" alt="rax,rcx" /></p><h2 id="优化"><a class="markdownIt-Anchor" href="#优化"></a> 优化</h2><p>在跟进的过程中，我们发现了一个问题：<code>c_str()</code>和<code>data()</code>都是跳转了2次最终执行了相同的指令。<br /><img src="13.png" alt="jmp" /><br />我们是不是可以直接把指令复制过去执行，而省去了跳转的麻烦。<br />修改汇编代码，直接将两个地方的call改成我们最终执行的指令，多余的字节以nop填充。<br /><img src="14.png" alt="修改" /><br />打补丁，修改补丁。保存，重新运行~<br /><img src="15.png" alt="成功~" /><br />完美运行。我们把6条指令优化成2条指令!将程序运行时间缩短了40纳秒。😂</p><h2 id="微软的cl编译器呢"><a class="markdownIt-Anchor" href="#微软的cl编译器呢"></a> 微软的CL编译器呢？</h2><h3 id="编译-2"><a class="markdownIt-Anchor" href="#编译-2"></a> 编译</h3><p>同样，我们先编译。<br /><img src="16.png" alt="编译" /></p><h3 id="上ida-2"><a class="markdownIt-Anchor" href="#上ida-2"></a> 上IDA</h3><p>上IDA我们发现程序的流程有点乱，这得益于vs2017蜜汁优化。甚至编译后连函数的字符都没有保留。什么东西都看不出来个所以然。<br /><img src="17.png" alt="IDA结果" /></p><h3 id="上x64dbg-2"><a class="markdownIt-Anchor" href="#上x64dbg-2"></a> 上x64dbg</h3><p>直接上x64dbg吧。(才发现编译出来的是32位的程序)<br />国际惯例跑完所有一次性断点，到达程序入口点。<br /><img src="18.png" alt="程序入口点" /><br />直接运行到<code>getchar()</code>,然后暂停程序。输入一个字符回车。程序暂停在<code>call edx</code>后，接下来是<code>ret</code>。<br /><img src="19.png" alt="回车后" /><br />接下来同样看到ReadFile()<br /><img src="20.png" alt="ReadFile()" /><br />继续F8康康。最后，千辛万苦找到了熟悉的字眼<code>&quot;%d--&gt;%s\n&quot;</code>。<br /><img src="21.png" alt="熟悉的字眼" /><br />这是我们程序硬编码上去的,编译器无法修改的字符串。<br />但是由于编译器编译同时，优化删除掉对分析程序有用的信息(函数符号)所以我们并没有看到类似的<code>c_str()</code>和<code>data()</code>。<br />所以，我们可以根据以往的经验，来猜测每个call的作用。<br /><img src="22.png" alt="猜测" /><br />经过猜测分析，我们同样也很容易看到，两个函数都是<code>call assamble.4818C0</code>,说明调用的是同一个函数。<br />居然优化了两个函数，不再各自调用自己的函数！此处应有掌声！👏👏👏微软牛逼！<br />不过，我比较好奇的是，里面不再是只有一条指令了。我们进入里面康康内部是怎么实现的。<br /><img src="23.png" alt="函数内部" /><br />就是这样实现的！具体是怎样的呢？等我学完汇编再康康吧~</p><h2 id="最终结论"><a class="markdownIt-Anchor" href="#最终结论"></a> 最终结论</h2><ol><li>无论是微软的cl.exe 编译器还是 mingw的g++编译器，它们对于<code>c_str()</code>和<code>data()</code>的实现都是一样一样的。</li><li>微软的编译器比较智能，会对程序进行汇编级别的优化，这或许在程序员眼中没有任何编码的区别，但是一旦程序代码的量级上来后，这种差别是非常之巨大的。</li><li>微软编译后把函数符号都去掉了，这点非常好。能有效防止程序被第三方非法篡改。</li><li>有时间去看看能不能设置cl.exe编译(64位)后再反汇编是怎么样的。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 逆向工程 </category>
          
          <category> 探索 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇编 </tag>
            
            <tag> 逆向工程 </tag>
            
            <tag> debug </tag>
            
            <tag> 内存 </tag>
            
            <tag> 编译器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1013 数素数</title>
      <link href="/pat1013/"/>
      <url>/pat1013/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1013-数素数"><a class="markdownIt-Anchor" href="#pat1013-数素数"></a> PAT1013 数素数</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>令<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>个素数。现任给两个正整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">M≤N≤10^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span>，请输出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">P_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">P_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的所有素数。</p><span id="more"></span><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>输入在一行中给出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>，其间以空格分隔。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>输出从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">P_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mi>N</mi></msub></mrow><annotation encoding="application/x-tex">P_N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>_的所有素数，每 10 个数字占 1 行，其间以空格分隔，但行末不得有多余空格。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 27</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">11 13 17 19 23 29 31 37 41 43</span><br><span class="line">47 53 59 61 67 71 73 79 83 89</span><br><span class="line">97 101 103</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>求素数，要分清<code>第n个素数</code>和<code>第n个数</code>的区别。在输出同时还有控制10个数字一行，行末不得有多余空格。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pat1013</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isPrime</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="built_in">sqrt</span>(a); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a % i == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> min,max,countP=<span class="number">0</span>,count=<span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; min &gt;&gt; max;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> t = <span class="number">1</span>; count &lt;= max - min; t++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isPrime</span>(t))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(countP &gt;= min &amp;&amp; countP &lt;= max)</span><br><span class="line">            &#123;</span><br><span class="line">                count++;</span><br><span class="line">                <span class="keyword">if</span>((count % <span class="number">10</span> == <span class="number">0</span> &amp;&amp; count != <span class="number">0</span>) || countP == max)&#123;</span><br><span class="line">                    cout &lt;&lt; t &lt;&lt; endl;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    cout &lt;&lt; t &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            countP++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 输出格式 </tag>
            
            <tag> 素数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1014 福尔摩斯的约会</title>
      <link href="/pat1014/"/>
      <url>/pat1014/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1014-福尔摩斯的约会"><a class="markdownIt-Anchor" href="#pat1014-福尔摩斯的约会"></a> PAT1014 福尔摩斯的约会</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>大侦探福尔摩斯接到一张奇怪的字条：我们约会吧！<code>3485djDkxh4hhGE 2984akDfkkkkggEdsb s&amp;hgsfdk d&amp;Hyscvnm</code>。大侦探很快就明白了，字条上奇怪的乱码实际上就是约会的时间<code>星期四 14:04</code>，因为前面两字符串中第 1 对相同的大写英文字母（大小写有区分）是第 4 个字母 <code>D</code>，代表星期四；第 2 对相同的字符是<code>E</code>，那是第 5 个英文字母，代表一天里的第 14 个钟头（于是一天的 0 点到 23 点由数字 0 到 9、以及大写字母<code>A</code>到<code>N</code>表示）；后面两字符串第 1 对相同的英文字母<code>s</code>出现在第 4 个位置（从 0 开始计数）上，代表第 4 分钟。现给定两对字符串，请帮助福尔摩斯解码得到约会的时间。</p><span id="more"></span><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>输入在 4 行中分别给出 4 个非空、不包含空格、且长度不超过 60 的字符串。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>在一行中输出约会的时间，格式为<code>DAY HH:MM</code>，其中<code>DAY</code>是某星期的 3 字符缩写，即<code>MON</code>表示星期一，<code>TUE</code>表示星期二，<code>WED</code>表示星期三，<code>THU</code>表示星期四，<code>FRI</code>表示星期五，<code>SAT</code>表示星期六，<code>SUN</code>表示星期日。题目输入保证每个测试存在唯一解。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3485djDkxh4hhGE </span><br><span class="line">2984akDfkkkkggEdsb </span><br><span class="line">s&amp;hgsfdk </span><br><span class="line">d&amp;Hyscvnm</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">THU 14:04</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>找出较短的一个字符串，循环对比每一位，相同则对应输出时间。<br />时钟和分钟如果不足两位，要在前面补个<code>0</code>。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pat1014</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">bool</span> k = <span class="literal">true</span>;</span><br><span class="line">    <span class="type">char</span> mon[][<span class="number">4</span>] = &#123;<span class="string">&quot;MON&quot;</span>,<span class="string">&quot;TUE&quot;</span>,<span class="string">&quot;WED&quot;</span>,<span class="string">&quot;THU&quot;</span>,<span class="string">&quot;FRI&quot;</span>,<span class="string">&quot;SAT&quot;</span>,<span class="string">&quot;SUN&quot;</span>&#125;;</span><br><span class="line">    string s[<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">3</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> less = s[<span class="number">0</span>].<span class="built_in">length</span>() &gt; s[<span class="number">1</span>].<span class="built_in">length</span>() ? s[<span class="number">1</span>].<span class="built_in">length</span>() : s[<span class="number">0</span>].<span class="built_in">length</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; less; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(k &amp;&amp; s[<span class="number">0</span>][i] == s[<span class="number">1</span>][i] &amp;&amp; s[<span class="number">0</span>][i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; s[<span class="number">0</span>][i] &lt;= <span class="string">&#x27;G&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; mon[s[<span class="number">0</span>][i] - <span class="string">&#x27;A&#x27;</span>] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            k = !k;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!k &amp;&amp; s[<span class="number">0</span>][i] == s[<span class="number">1</span>][i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[<span class="number">0</span>][i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; s[<span class="number">0</span>][i] &lt;= <span class="string">&#x27;N&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; s[<span class="number">0</span>][i] - <span class="string">&#x27;A&#x27;</span> + <span class="number">10</span> &lt;&lt; <span class="string">&quot;:&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(s[<span class="number">0</span>][i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; s[<span class="number">0</span>][i] &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;0&quot;</span> &lt;&lt; s[<span class="number">0</span>][i] &lt;&lt; <span class="string">&quot;:&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    less = s[<span class="number">2</span>].<span class="built_in">length</span>() &gt; s[<span class="number">3</span>].<span class="built_in">length</span>() ? s[<span class="number">3</span>].<span class="built_in">length</span>() : s[<span class="number">2</span>].<span class="built_in">length</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; less; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[<span class="number">2</span>][i] == s[<span class="number">3</span>][i] &amp;&amp; ((s[<span class="number">2</span>][i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; s[<span class="number">2</span>][i] &lt;= <span class="string">&#x27;Z&#x27;</span> )||( s[<span class="number">2</span>][i] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; s[<span class="number">2</span>][i] &lt;= <span class="string">&#x27;z&#x27;</span>)))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i &lt; <span class="number">10</span>)</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;0&quot;</span> &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> 输出格式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1011 A+B 和 C</title>
      <link href="/pat1011/"/>
      <url>/pat1011/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1011-ab-和-c"><a class="markdownIt-Anchor" href="#pat1011-ab-和-c"></a> PAT1011 A+B 和 C</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>给定区间<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><msup><mn>2</mn><mn>31</mn></msup><mo separator="true">,</mo><msup><mn>2</mn><mn>31</mn></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-2^{31},2^{31}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>内的 3 个整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span>，请判断<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>+</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A+B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>是否大于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span>。</p><span id="more"></span><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>输入第 1 行给出正整数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mo stretchy="false">(</mo><mo>≤</mo><mn>10</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">T(≤10)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mclose">)</span></span></span></span>，是测试用例的个数。随后给出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span></span>组测试用例，每组占一行，顺序给出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span>。整数间以空格分隔。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>对每组测试用例，在一行中输出<code>Case #X: true</code> 如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>+</mo><mi>B</mi><mo>&gt;</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">A+B&gt;C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span></span></span></span>，否则输出Case #X: false，其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>是测试用例的编号（从 1 开始）。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1 2 3</span><br><span class="line">2 3 4</span><br><span class="line">2147483647 0 2147483646</span><br><span class="line">0 -2147483648 -2147483647</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Case #1: false</span><br><span class="line">Case #2: true</span><br><span class="line">Case #3: true</span><br><span class="line">Case #4: false</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>水题，和计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mo>+</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A+B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">A</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>输出有什么区别？？？<br />给的区间<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><msup><mn>2</mn><mn>31</mn></msup><mo separator="true">,</mo><msup><mn>2</mn><mn>31</mn></msup><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-2^{31},2^{31}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>吓唬人，其实测试点不超过<code>int</code>,不行可以用<code>long</code>和<code>long long</code>,超过这些的话，才需要写个大数加减法。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pat1011</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">short</span> num;</span><br><span class="line">    <span class="type">int</span> a, b, c;</span><br><span class="line">    cin &gt;&gt; num;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">short</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        <span class="keyword">if</span>(c &lt; a + b)</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Case #&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;: true&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Case #&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;: false&quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 输出格式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1012 数字分类</title>
      <link href="/pat1012/"/>
      <url>/pat1012/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1012-数字分类"><a class="markdownIt-Anchor" href="#pat1012-数字分类"></a> PAT1012 数字分类</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>给定一系列正整数，请按要求对数字进行分类，并输出以下 5 个数字：</p><span id="more"></span><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub><mo>=</mo></mrow><annotation encoding="application/x-tex">A_1 =</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span></span> 能被 5 整除的数字中所有偶数的和</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mn>2</mn></msub><mo>=</mo></mrow><annotation encoding="application/x-tex">A_2 =</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span></span> 将被 5 除后余 1 的数字按给出顺序进行交错求和，即计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>n</mi><mn>1</mn></msub><mo>−</mo><msub><mi>n</mi><mn>2</mn></msub><mo>+</mo><msub><mi>n</mi><mn>3</mn></msub><mo>−</mo><msub><mi>n</mi><mn>4</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">n_1-n_2+n_3-n_4...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mn>3</mn></msub><mo>=</mo></mrow><annotation encoding="application/x-tex">A_3 =</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span></span> 被 5 除后余 2 的数字的个数；</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mn>4</mn></msub><mo>=</mo></mrow><annotation encoding="application/x-tex">A_4 =</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span></span> 被 5 除后余 3 的数字的平均数，精确到小数点后 1 位；</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mn>5</mn></msub><mo>=</mo></mrow><annotation encoding="application/x-tex">A_5 =</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span></span> 被 5 除后余 4 的数字中最大数字。</li></ul><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>每个输入包含 1 个测试用例。每个测试用例先给出一个不超过 1000 的正整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>，随后给出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>个不超过 1000 的待分类的正整数。数字间以空格分隔。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>对给定的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>个正整数，按题目要求计算<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">A_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>~<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mn>5</mn></msub></mrow><annotation encoding="application/x-tex">A_5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>并在一行中顺序输出。数字间以空格分隔，但行末不得有多余空格。<br />若其中某一类数字不存在，则在相应位置输出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">13 1 2 3 4 5 6 7 8 9 10 20 16 18</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">30 11 2 9.7 9</span><br></pre></td></tr></table></figure><h2 id="输入样例2"><a class="markdownIt-Anchor" href="#输入样例2"></a> 输入样例2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8 1 2 4 5 6 7 9 16</span><br></pre></td></tr></table></figure><h2 id="输出样例2"><a class="markdownIt-Anchor" href="#输出样例2"></a> 输出样例2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">N 11 2 N 9</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>分别取余，分类，分别计算，变量多容易搞乱</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// freopen(&quot;data1.txt&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">    <span class="type">int</span> cnt;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;cnt);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> array[<span class="number">5</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> num, temp, temp1 = <span class="number">1</span>, cnt3 = <span class="number">0</span>, max = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> flag1 = <span class="number">0</span>, flag2 = <span class="number">0</span>, flag3 = <span class="number">0</span>, flag4 = <span class="number">0</span>, flag5 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= cnt; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num);</span><br><span class="line">        temp = num % <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="number">0</span> &amp;&amp; num % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            flag1 = <span class="number">1</span>; array[<span class="number">0</span>] += num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="number">1</span>) &#123;</span><br><span class="line">            flag2 = <span class="number">1</span>;</span><br><span class="line">            array[<span class="number">1</span>] += ((temp1 % <span class="number">2</span> != <span class="number">0</span>) ? num : (<span class="number">-1</span> * num));</span><br><span class="line">            temp1++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="number">2</span>) &#123;</span><br><span class="line">            flag3 = <span class="number">1</span>;</span><br><span class="line">            array[<span class="number">2</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="number">3</span>) &#123;</span><br><span class="line">            flag4 = <span class="number">1</span>;</span><br><span class="line">            cnt3++;</span><br><span class="line">            array[<span class="number">3</span>] += num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (temp == <span class="number">4</span>) &#123;</span><br><span class="line">            flag5 = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (num &gt; max) max = num;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> h;</span><br><span class="line">    <span class="keyword">if</span> (flag1) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, array[<span class="number">0</span>]); <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%c &quot;</span>, <span class="string">&#x27;N&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (flag2) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, array[<span class="number">1</span>]); <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%c &quot;</span>, <span class="string">&#x27;N&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (flag3) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, array[<span class="number">2</span>]); <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%c &quot;</span>, <span class="string">&#x27;N&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (flag4) <span class="built_in">printf</span>(<span class="string">&quot;%.1f &quot;</span>, <span class="number">1.0</span>*array[<span class="number">3</span>] / cnt3); <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%c &quot;</span>, <span class="string">&#x27;N&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (flag5) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, max); <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, <span class="string">&#x27;N&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分类 </tag>
            
            <tag> 统计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1010 一元多项式求导</title>
      <link href="/pat1010/"/>
      <url>/pat1010/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1010-一元多项式求导"><a class="markdownIt-Anchor" href="#pat1010-一元多项式求导"></a> PAT1010 一元多项式求导</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>设计函数求一元多项式的导数。（注：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>x</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">x^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span>（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>为整数）的一阶导数为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><msup><mi>x</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">nx^{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>。）</p><span id="more"></span><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>以指数递降方式输入多项式非零项系数和指数（绝对值均为不超过 1000 的整数）。数字间以空格分隔。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>以与输入相同的格式输出导数多项式非零项的系数和指数。数字间以空格分隔，但结尾不能有多余空格。注意“零多项式”的指数和系数都是 0，但是表示为<code>0 0</code>.</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 4 -5 2 6 1 -2 0</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">12 3 -10 1 6 0</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>公式都给了，两个数相城，阶数-1，直到遇到<code>\n</code>。<br />特殊情况也给了，判断一下就行。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pat1010</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        <span class="keyword">if</span> (b &gt; <span class="number">0</span> || b &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(flag == <span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; a * b &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; b - <span class="number">1</span>;</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; a * b &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; b - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">while</span>((ch = <span class="built_in">getchar</span>()) != <span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (flag == <span class="literal">true</span>)</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;0 0&quot;</span>; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学计算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1009 说反话</title>
      <link href="/pat1009/"/>
      <url>/pat1009/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1009-说反话"><a class="markdownIt-Anchor" href="#pat1009-说反话"></a> PAT1009 说反话</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>给定一句英语，要求你编写程序，将句中所有单词的顺序颠倒输出。</p><span id="more"></span><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>测试输入包含一个测试用例，在一行内给出总长度不超过 80 的字符串。字符串由若干单词和若干空格组成，其中单词是由英文字母（大小写有区分）组成的字符串，单词之间用 1 个空格分开，输入保证句子末尾没有多余的空格。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>每个测试用例的输出占一行，输出倒序后的句子。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello World Here I Come</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Come I Here World Hello</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>如果是C的话，要判断空格和单词的关系，保证单词不逆序，而单词的顺序为逆序。<br />不过C++可以直接拿到单词的数组，逆序输出就行啦~</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pat1009</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;string&gt; vec;</span><br><span class="line">    string s;</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="comment">//读入字符串用getline(cin,s);</span></span><br><span class="line">    <span class="keyword">while</span> (cin &gt;&gt; s)</span><br><span class="line">    &#123;</span><br><span class="line">        vec.<span class="built_in">push_back</span>(s);</span><br><span class="line">        <span class="keyword">if</span> ((ch = <span class="built_in">getchar</span>()) == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> it = vec.<span class="built_in">rbegin</span>(); it != vec.<span class="built_in">rend</span>(); it++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (it != vec.<span class="built_in">rend</span>() - <span class="number">1</span>)</span><br><span class="line">            cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; *it;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数组 </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1006 换个格式输出整数</title>
      <link href="/pat1006/"/>
      <url>/pat1006/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1006-换个格式输出整数"><a class="markdownIt-Anchor" href="#pat1006-换个格式输出整数"></a> PAT1006 换个格式输出整数</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>让我们用字母<code>B</code>来表示“百”、字母<code>S</code>表示“十”，用<code>12...n</code>来表示不为零的个位数字<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi mathvariant="normal">（</mi><mo>&lt;</mo><mn>10</mn><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">n（&lt;10）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">n</span><span class="mord cjk_fallback">（</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord cjk_fallback">）</span></span></span></span>，换个格式来输出任一个不超过 3 位的正整数。例如<code>234</code>应该被输出为<code>BBSSS1234</code>，因为它有 2 个“百”、3 个“十”、以及个位的 4。</p><span id="more"></span><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>每个测试输入包含 1 个测试用例，给出正整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi mathvariant="normal">（</mi><mo>&lt;</mo><mn>1000</mn><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">n（&lt;1000）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">n</span><span class="mord cjk_fallback">（</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord cjk_fallback">）</span></span></span></span>。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>每个测试用例的输出占一行，用规定的格式输出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">234</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BBSSS1234</span><br></pre></td></tr></table></figure><h2 id="输入样例2"><a class="markdownIt-Anchor" href="#输入样例2"></a> 输入样例2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">23</span><br></pre></td></tr></table></figure><h2 id="输出样例2"><a class="markdownIt-Anchor" href="#输出样例2"></a> 输出样例2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SS123</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>水题，拆分 个，十，百位。注意格式~</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pat1006</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ge</span><span class="params">(<span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>;j &lt; i;j++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; j+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">shi</span><span class="params">(<span class="type">bool</span> s, <span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(; i &gt; <span class="number">0</span>; i--)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;S&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(; i &gt; <span class="number">0</span>; i--)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;B&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    cin &gt;&gt; i;</span><br><span class="line">    <span class="keyword">if</span>(i &lt; <span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">ge</span>(i);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i &lt; <span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = i/<span class="number">10</span>;</span><br><span class="line">        <span class="built_in">shi</span>(<span class="literal">true</span>, t);</span><br><span class="line">        <span class="built_in">ge</span>(i % <span class="number">10</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = i/<span class="number">100</span>;</span><br><span class="line">        <span class="built_in">shi</span>(<span class="literal">false</span>, t);</span><br><span class="line">        t = i /<span class="number">10</span>;</span><br><span class="line">        <span class="built_in">shi</span>(<span class="literal">true</span>, t % <span class="number">10</span>);</span><br><span class="line">        <span class="built_in">ge</span>(i % <span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 输出格式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1007 素数对猜想</title>
      <link href="/pat1007/"/>
      <url>/pat1007/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1007-素数对猜想"><a class="markdownIt-Anchor" href="#pat1007-素数对猜想"></a> PAT1007 素数对猜想</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>让我们定义<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mi mathvariant="normal">​</mi></msub><mi>n</mi></mrow><annotation encoding="application/x-tex">d_​n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.15em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">​</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault">n</span></span></span></span>为：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mi>n</mi></msub><mo>=</mo><msub><mi>p</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>p</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">d_n=p_{n+1}-p_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.791661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">p_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>个素数。显然有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mn>1</mn></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">d_1=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，且对于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>&gt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n&gt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">d_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是偶数。“素数对猜想”认为“存在无穷多对相邻且差为2的素数”。</p><span id="more"></span><p>现给定任意正整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mo stretchy="false">(</mo><mo>&lt;</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N(&lt;10^5)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，请计算不超过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>的满足猜想的素数对的个数。</p><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>输入在一行给出正整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>在一行中输出不超过<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>的满足猜想的素数对的个数。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">20</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>水题，判断是否素数，记录上次结果，差为2，计数+1。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pat1007</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isPrime</span><span class="params">(<span class="type">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(num &lt; <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i * i &lt;= num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(num % i == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> primeNum, primeS = <span class="number">2</span>, primeE = <span class="number">2</span>, count = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; primeNum;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span> ; i &lt;= primeNum; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">isPrime</span>(i))</span><br><span class="line">        &#123;</span><br><span class="line">            primeE = i;</span><br><span class="line">            <span class="keyword">if</span>(primeE - primeS == <span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">            primeS = primeE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; count;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 素数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1008 数组元素循环右移问题</title>
      <link href="/pat1008/"/>
      <url>/pat1008/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1008-数组元素循环右移问题"><a class="markdownIt-Anchor" href="#pat1008-数组元素循环右移问题"></a> PAT1008 数组元素循环右移问题</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>一个数组<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>中存有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi mathvariant="normal">（</mi><mo>&gt;</mo><mn>0</mn><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">N（&gt;0）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord cjk_fallback">（</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord cjk_fallback">）</span></span></span></span>个整数，在不允许使用另外数组的前提下，将每个整数循环向右移<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi mathvariant="normal">（</mi><mo>≥</mo><mn>0</mn><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">M（≥0）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord cjk_fallback">（</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord cjk_fallback">）</span></span></span></span>个位置，即将<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span>中的数据由（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mn>0</mn></msub><msub><mi>A</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">A_0A_1...A_{N-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>）变换为（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>A</mi><mrow><mi>N</mi><mo>−</mo><mi>M</mi></mrow></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></msub><msub><mi>A</mi><mn>0</mn></msub><msub><mi>A</mi><mn>1</mn></msub><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>A</mi><mrow><mi>N</mi><mo>−</mo><mi>M</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">A_{N-M}...A_{N-1}A_0A_1...A_{N-M-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span>）(最后<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>个数循环移至最前面的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>个位置）。如果需要考虑程序移动数据的次数尽量少，要如何设计移动的方法？</p><span id="more"></span><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>每个输入包含一个测试用例，第1行输入<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi><mi mathvariant="normal">（</mi><mn>1</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>100</mn><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">N（1≤N≤100）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mord cjk_fallback">（</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord cjk_fallback">）</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mi mathvariant="normal">（</mi><mo>≥</mo><mn>0</mn><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">M（≥0）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.13597em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord cjk_fallback">（</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord cjk_fallback">）</span></span></span></span>；第2行输入<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>个整数，之间用空格分隔。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>在一行中输出循环右移<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>位以后的整数序列，之间用空格分隔，序列结尾不能有多余空格。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6 2</span><br><span class="line">1 2 3 4 5 6</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 6 1 2 3 4</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>本来是考单向链表修改头指针和尾指针的，但是vector里面的<code>pop_back()</code>和<code>insert()</code>可以直接代替…</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pat1008</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; vec;</span><br><span class="line">    <span class="type">int</span> num, times;</span><br><span class="line">    cin &gt;&gt; num &gt;&gt; times;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> j;</span><br><span class="line">        cin &gt;&gt; j;</span><br><span class="line">        vec.<span class="built_in">insert</span>(vec.<span class="built_in">end</span>(), j);</span><br><span class="line">    &#125;</span><br><span class="line">    times %= num;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; times; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> t = vec.<span class="built_in">end</span>() - <span class="number">1</span>;</span><br><span class="line">        vec.<span class="built_in">pop_back</span>();</span><br><span class="line">        vec.<span class="built_in">insert</span>(vec.<span class="built_in">begin</span>(), *t);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> it = vec.<span class="built_in">begin</span>(); it != vec.<span class="built_in">end</span>(); it++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(it == vec.<span class="built_in">end</span>() - <span class="number">1</span>)</span><br><span class="line">            cout &lt;&lt; *it;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vector </tag>
            
            <tag> 单项链表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1005 继续(3n+1)猜想</title>
      <link href="/pat1005/"/>
      <url>/pat1005/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1005-继续3n1猜想"><a class="markdownIt-Anchor" href="#pat1005-继续3n1猜想"></a> PAT1005 继续(3n+1)猜想</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>卡拉兹(Callatz)猜想已经在1001中给出了描述。在这个题目里，情况稍微有些复杂。</p><span id="more"></span><p>当我们验证卡拉兹猜想的时候，为了避免重复计算，可以记录下递推过程中遇到的每一个数。例如对 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>=</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">n=3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span> 进行验证的时候，我们需要计算 3、5、8、4、2、1，则当我们对 n=5、8、4、2 进行验证的时候，就可以直接判定卡拉兹猜想的真伪，而不需要重复计算，因为这 4 个数已经在验证3的时候遇到过了，我们称 5、8、4、2 是被 3 “覆盖”的数。我们称一个数列中的某个数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>为“关键数”，如果<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>不能被数列中的其他数字所覆盖。</p><p>现在给定一系列待验证的数字，我们只需要验证其中的几个关键数，就可以不必再重复验证余下的数字。你的任务就是找出这些关键数字，并按从大到小的顺序输出它们。</p><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>每个测试输入包含 1 个测试用例，第 1 行给出一个正整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><mo stretchy="false">(</mo><mo>&lt;</mo><mn>100</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">K (&lt;100)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mopen">(</span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">)</span></span></span></span>，第 2 行给出<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span>个互不相同的待验证的正整数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo stretchy="false">(</mo><mn>1</mn><mo>&lt;</mo><mi>n</mi><mo>≤</mo><mn>100</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n (1&lt;n≤100)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">)</span></span></span></span>的值，数字间用空格隔开。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>每个测试用例的输出占一行，按从大到小的顺序输出关键数字。数字间用 1 个空格隔开，但一行中最后一个数字后没有空格。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">3 5 6 7 8 11</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7 6</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>建立一个数组，然后依次检测每个数，在每次检测前判断一下本次要检测的数字是否已经存在数组里面。（是否被“覆盖”）<br />如果覆盖，就跳过不算，不覆盖则记录在数组里面。检测完后数组是这样的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3 5 8 4 2</span><br><span class="line">6 3</span><br><span class="line">7 22 11 17 26 13 20 10 5</span><br></pre></td></tr></table></figure><p>然后，取每行第一个元素为最终不被覆盖的值。<br />发现6还是覆盖3，所以遍历每行取最后一个元素，如果和上一行首元素相等，则该行首元素<code>6</code>覆盖替换掉上一行首元素<code>3</code>.<br />最后剩下<code>6</code>和<code>7</code>.<br />排序大到小的顺序输出。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr[<span class="number">100</span>][<span class="number">100</span>], arri = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a &lt; b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isInArr</span><span class="params">(<span class="type">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; arri; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">100</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i][j] == num)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (arr[i][j] == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    cin &gt;&gt; num;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> tmp, j = <span class="number">0</span>;</span><br><span class="line">        cin &gt;&gt; tmp;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isInArr</span>(tmp))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (tmp != <span class="number">1</span> &amp;&amp; !<span class="built_in">isInArr</span>(tmp))</span><br><span class="line">        &#123;</span><br><span class="line">            arr[arri][j++] = tmp;</span><br><span class="line">            <span class="keyword">if</span> (tmp % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                tmp /= <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                tmp = (<span class="number">3</span> * tmp + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        arr[arri][j++] = tmp;</span><br><span class="line">        arri++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> out[<span class="number">100</span>], oo = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; arri; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> end;</span><br><span class="line">        <span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (end = <span class="number">0</span>; arr[i][end] != <span class="number">0</span>; end++);</span><br><span class="line">        end--;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; oo; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i][end] == out[j])</span><br><span class="line">            &#123;</span><br><span class="line">                out[j] = arr[i][<span class="number">0</span>];</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag)</span><br><span class="line">        &#123;</span><br><span class="line">            out[oo++] = arr[i][<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(out, out + oo, cmp);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = oo - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        <span class="keyword">if</span> (i != <span class="number">0</span>)</span><br><span class="line">            cout &lt;&lt; out[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; out[i];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1003 我要通过！</title>
      <link href="/pat1003/"/>
      <url>/pat1003/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1003-我要通过"><a class="markdownIt-Anchor" href="#pat1003-我要通过"></a> PAT1003 我要通过！</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>“答案正确”是自动判题系统给出的最令人欢喜的回复。本题属于 PAT 的“答案正确”大派送 —— 只要读入的字符串满足下列条件，系统就输出“答案正确”，否则输出“答案错误”。</p><span id="more"></span><p>得到“答案正确”的条件是：</p><ol><li>字符串中必须仅有 <code>P</code>、 <code>A</code>、 <code>T</code>这三种字符，不可以包含其它字符；</li><li>任意形如 <code>xPATx</code> 的字符串都可以获得“答案正确”，其中 <code>x</code> 或者是空字符串，或者是仅由字母 <code>A</code> 组成的字符串；</li><li>如果 <code>aPbTc</code> 是正确的，那么 <code>aPbATca</code> 也是正确的，其中 <code>a</code>、 <code>b</code>、 <code>c</code> 均或者是空字符串，或者是仅由字母 <code>A</code> 组成的字符串。</li></ol><p>现在就请你为PAT写一个自动裁判程序，判定哪些字符串是可以获得“<strong>答案正确</strong>”的。</p><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>每个测试输入包含 1 个测试用例。第 1 行给出一个正整数 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo stretchy="false">(</mo><mo>&lt;</mo><mn>10</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n (&lt;10)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mopen">(</span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mclose">)</span></span></span></span>，是需要检测的字符串个数。接下来每个字符串占一行，字符串长度不超过 100，且不包含空格。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>每个字符串的检测结果占一行，如果该字符串可以获得“<strong>答案正确</strong>”，则输出 <code>YES</code>，否则输出 <code>NO</code>。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">8</span><br><span class="line">PAT</span><br><span class="line">PAAT</span><br><span class="line">AAPATAA</span><br><span class="line">AAPAATAAAA</span><br><span class="line">xPATx</span><br><span class="line">PT</span><br><span class="line">Whatever</span><br><span class="line">APAAATAA</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">NO</span><br><span class="line">NO</span><br><span class="line">NO</span><br><span class="line">NO</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>观察规律题，写多几个正确样例分析发现，所有正确的样例都满足一个规律：<br /><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo>−</mo><mi>n</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>A</mi><mi>P</mi><mo stretchy="false">(</mo><mn>0</mn><mo>−</mo><mi>m</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>A</mi><mi>T</mi><mo stretchy="false">(</mo><mi>m</mi><mo>∗</mo><mi>n</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>A</mi></mrow><annotation encoding="application/x-tex">(0-n)*AP(0-m)*AT(m*n)*A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span></span></span></span><br />所以，只要简单判断一下等式成立且P和T之间至少有个A就可以通过，否则不通过。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pat1003</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(string s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; (<span class="type">int</span>)s.<span class="built_in">size</span>(); j++)</span><br><span class="line">        <span class="keyword">if</span>(s[j] != <span class="string">&#x27;P&#x27;</span> &amp;&amp; s[j] != <span class="string">&#x27;A&#x27;</span> &amp;&amp; s[j] != <span class="string">&#x27;T&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    cin &gt;&gt; num;</span><br><span class="line">    string a[num];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(a[i]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> pindex = a[i].<span class="built_in">find</span>(<span class="string">&quot;P&quot;</span>);</span><br><span class="line">            <span class="type">int</span> tindex = a[i].<span class="built_in">find</span>(<span class="string">&quot;T&quot;</span>);</span><br><span class="line">            string s = a[i].<span class="built_in">substr</span>(<span class="number">0</span>, pindex);</span><br><span class="line">            string m = a[i].<span class="built_in">substr</span>(pindex + <span class="number">1</span>, tindex - pindex - <span class="number">1</span>);</span><br><span class="line">            string e = a[i].<span class="built_in">substr</span>(tindex + <span class="number">1</span>, a[i].<span class="built_in">size</span>());</span><br><span class="line">            <span class="keyword">if</span>(e.<span class="built_in">size</span>() == s.<span class="built_in">size</span>() * m.<span class="built_in">size</span>() &amp;&amp; m.<span class="built_in">size</span>() != <span class="number">0</span>)</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125; <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PAT1004 成绩排名</title>
      <link href="/pat1004/"/>
      <url>/pat1004/</url>
      
        <content type="html"><![CDATA[<h1 id="pat1004-成绩排名"><a class="markdownIt-Anchor" href="#pat1004-成绩排名"></a> PAT1004 成绩排名</h1><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><p>读入 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi mathvariant="normal">（</mi><mo>&gt;</mo><mn>0</mn><mi mathvariant="normal">）</mi></mrow><annotation encoding="application/x-tex">n（&gt;0）</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">n</span><span class="mord cjk_fallback">（</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord cjk_fallback">）</span></span></span></span>名学生的姓名、学号、成绩，分别输出成绩最高和成绩最低学生的姓名和学号。</p><span id="more"></span><h2 id="输入格式"><a class="markdownIt-Anchor" href="#输入格式"></a> 输入格式</h2><p>每个测试输入包含 1 个测试用例，格式为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">第 1 行：正整数 n</span><br><span class="line">第 2 行：第 1 个学生的姓名 学号 成绩</span><br><span class="line">第 3 行：第 2 个学生的姓名 学号 成绩</span><br><span class="line">  ... ... ...</span><br><span class="line">第 n+1 行：第 n 个学生的姓名 学号 成绩</span><br></pre></td></tr></table></figure><p>其中<code>姓名</code>和<code>学号</code>均为不超过 10 个字符的字符串，成绩为 0 到 100 之间的一个整数，这里保证在一组测试用例中没有两个学生的成绩是相同的。</p><h2 id="输出格式"><a class="markdownIt-Anchor" href="#输出格式"></a> 输出格式</h2><p>对每个测试用例输出 2 行，第 1 行是成绩最高学生的姓名和学号，第 2 行是成绩最低学生的姓名和学号，字符串间有 1 空格。</p><h2 id="输入样例"><a class="markdownIt-Anchor" href="#输入样例"></a> 输入样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">Joe Math990112 89</span><br><span class="line">Mike CS991301 100</span><br><span class="line">Mary EE990830 95</span><br></pre></td></tr></table></figure><h2 id="输出样例"><a class="markdownIt-Anchor" href="#输出样例"></a> 输出样例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Mike CS991301</span><br><span class="line">Joe Math990112</span><br></pre></td></tr></table></figure><h2 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h2><p>水题，扫一遍，找出最大最小值。</p><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pat1004</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> <span class="type">const</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    string name[<span class="number">2</span>], no[<span class="number">2</span>];</span><br><span class="line">    <span class="type">int</span> score[<span class="number">2</span>], num;</span><br><span class="line">    cin &gt;&gt; num;</span><br><span class="line">    cin &gt;&gt; name[<span class="number">0</span>] &gt;&gt; no[<span class="number">0</span>] &gt;&gt; score[<span class="number">0</span>];</span><br><span class="line">    name[<span class="number">1</span>] = name[<span class="number">0</span>];</span><br><span class="line">    no[<span class="number">1</span>] = no[<span class="number">0</span>];</span><br><span class="line">    score[<span class="number">1</span>] = score[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; num - <span class="number">1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        string tmpn, tmpno;</span><br><span class="line">        <span class="type">int</span> tmps;</span><br><span class="line">        cin &gt;&gt; tmpn &gt;&gt; tmpno &gt;&gt; tmps;</span><br><span class="line">        <span class="keyword">if</span>(tmps &gt; score[<span class="number">0</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            score[<span class="number">0</span>] = tmps;</span><br><span class="line">            name[<span class="number">0</span>] = tmpn;</span><br><span class="line">            no[<span class="number">0</span>] = tmpno;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(tmps &lt; score[<span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            score[<span class="number">1</span>] = tmps;</span><br><span class="line">            name[<span class="number">1</span>] = tmpn;</span><br><span class="line">            no[<span class="number">1</span>] = tmpno;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; name[<span class="number">0</span>] &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; no[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; name[<span class="number">1</span>] &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; no[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> PAT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AutoPost</title>
      <link href="/AutoPost/"/>
      <url>/AutoPost/</url>
      
        <content type="html"><![CDATA[<p>This is an AutoPost Test</p><span id="more"></span><p>lalalala</p>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
          <category> 自动上传博客文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fancy</title>
      <link href="/Fancy/"/>
      <url>/Fancy/</url>
      
        <content type="html"><![CDATA[<p>This is an Fancy Test</p><span id="more"></span><p>lalalala</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/hello-world/"/>
      <url>/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
